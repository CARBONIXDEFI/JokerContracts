{
	"id": "20be3516a231b6ef7d945ab13719c84c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/ceros/CeVault.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/ICertToken.sol\";\ncontract CeVault is\nIVault,\nOwnableUpgradeable,\nPausableUpgradeable,\nReentrancyGuardUpgradeable\n{\n    /**\n     * Variables\n     */\n    string private _name;\n    // Tokens\n    ICertToken private _ceToken;\n    ICertToken private _aBNBc;\n    address private _router;\n    mapping(address => uint256) private _claimed; // in aBNBc\n    mapping(address => uint256) private _depositors; // in aBNBc\n    mapping(address => uint256) private _ceTokenBalances; // in aBNBc\n\n    using SafeERC20 for IERC20;\n    /**\n     * Modifiers\n     */\n    modifier onlyRouter() {\n        require(msg.sender == _router, \"Router: not allowed\");\n        _;\n    }\n    function initialize(\n        string memory name,\n        address ceTokenAddress,\n        address aBNBcAddress\n    ) external initializer {\n        __Ownable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        _name = name;\n        _ceToken = ICertToken(ceTokenAddress);\n        _aBNBc = ICertToken(aBNBcAddress);\n    }\n    // deposit\n    function deposit(uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256)\n    {\n        return _deposit(msg.sender, amount);\n    }\n    // deposit\n    function depositFor(address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    onlyRouter\n    returns (uint256)\n    {\n        return _deposit(recipient, amount);\n    }\n    // deposit\n    function _deposit(address account, uint256 amount)\n    private\n    returns (uint256)\n    {\n        uint256 ratio = _aBNBc.ratio();\n        IERC20(_aBNBc).safeTransferFrom(msg.sender, address(this), amount);\n        uint256 toMint = (amount * 1e18) / ratio;\n        _depositors[account] += amount; // aBNBc\n        _ceTokenBalances[account] += toMint;\n        //  mint ceToken to recipient\n        ICertToken(_ceToken).mint(account, toMint);\n        emit Deposited(msg.sender, account, toMint);\n        return toMint;\n    }\n    function claimYieldsFor(address owner, address recipient)\n    external\n    override\n    onlyRouter\n    nonReentrant\n    returns (uint256)\n    {\n        return _claimYields(owner, recipient);\n    }\n    // claimYields\n    function claimYields(address recipient)\n    external\n    override\n    nonReentrant\n    returns (uint256)\n    {\n        return _claimYields(msg.sender, recipient);\n    }\n    function _claimYields(address owner, address recipient)\n    private\n    returns (uint256)\n    {\n        uint256 availableYields = this.getYieldFor(owner);\n        require(availableYields > 0, \"has not got yields to claim\");\n        // return back aBNBc to recipient\n        _claimed[owner] += availableYields;\n        IERC20(_aBNBc).safeTransfer(recipient, availableYields);\n        emit Claimed(owner, recipient, availableYields);\n        return availableYields;\n    }\n    // withdraw\n    function withdraw(address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256)\n    {\n        return _withdraw(msg.sender, recipient, amount);\n    }\n    // withdraw\n    function withdrawFor(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) external override nonReentrant onlyRouter returns (uint256) {\n        return _withdraw(owner, recipient, amount);\n    }\n    function _withdraw(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) private returns (uint256) {\n        uint256 ratio = _aBNBc.ratio();\n        uint256 realAmount = (amount * ratio) / 1e18;\n        require(\n            _aBNBc.balanceOf(address(this)) >= realAmount,\n            \"not such amount in the vault\"\n        );\n        uint256 balance = _ceTokenBalances[owner];\n        require(balance >= amount, \"insufficient balance\");\n        _ceTokenBalances[owner] -= amount; // BNB\n        // burn ceToken from owner\n        ICertToken(_ceToken).burn(owner, amount);\n        _depositors[owner] -= realAmount; // aBNBc\n        IERC20(_aBNBc).safeTransfer(recipient, realAmount);\n        emit Withdrawn(owner, recipient, realAmount);\n        return realAmount;\n    }\n    function getTotalAmountInVault() external view override returns (uint256) {\n        return _aBNBc.balanceOf(address(this));\n    }\n    // yield + principal = deposited(before claim)\n    // BUT after claim yields: available_yield + principal == deposited - claimed\n    // available_yield = yield - claimed;\n    // principal = deposited*(current_ratio/init_ratio)=cetoken.balanceOf(account)*current_ratio;\n    function getPrincipalOf(address account)\n    external\n    view\n    override\n    returns (uint256)\n    {\n        uint256 ratio = _aBNBc.ratio();\n        return (_ceTokenBalances[account] * ratio) / 1e18; // in aBNBc\n    }\n    // yield = deposited*(1-current_ratio/init_ratio) = cetoken.balanceOf*init_ratio-cetoken.balanceOf*current_ratio\n    // yield = cetoken.balanceOf*(init_ratio-current_ratio) = amount(in aBNBc) - amount(in aBNBc)\n    function getYieldFor(address account)\n    external\n    view\n    override\n    returns (uint256)\n    {\n        uint256 principal = this.getPrincipalOf(account);\n        if (principal >= _depositors[account]) {\n            return 0;\n        }\n        uint256 totalYields = _depositors[account] - principal;\n        if (totalYields <= _claimed[account]) {\n            return 0;\n        }\n        return totalYields - _claimed[account];\n    }\n    function getCeTokenBalanceOf(address account)\n    external\n    view\n    returns (uint256)\n    {\n        return _ceTokenBalances[account];\n    }\n    function getDepositOf(address account) external view returns (uint256) {\n        return _depositors[account];\n    }\n    function getClaimedOf(address account) external view returns (uint256) {\n        return _claimed[account];\n    }\n    function changeRouter(address router) external onlyOwner {\n        _router = router;\n        emit RouterChanged(router);\n    }\n    function getName() external view returns (string memory) {\n        return _name;\n    }\n    function getCeToken() external view returns(address) {\n        return address(_ceToken);\n    }\n    function getAbnbcAddress() external view returns(address) {\n        return address(_aBNBc);\n    }\n    function getRouter() external view returns(address) {\n        return address(_router);\n    }\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\ninterface IVault {\n    /**\n     * Events\n     */\n    event Deposited(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Claimed(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Withdrawn(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event RouterChanged(address router);\n    event CeTokenChanged(address oldToken, address newToken);\n    /**\n     * Methods\n     */\n    event RatioUpdated(uint256 currentRatio);\n    function deposit(uint256 amount) external returns (uint256);\n    function depositFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function claimYields(address recipient) external returns (uint256);\n    function claimYieldsFor(address owner, address recipient)\n    external\n    returns (uint256);\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function withdrawFor(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256);\n    function getPrincipalOf(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns (uint256);\n    function getTotalAmountInVault() external view returns (uint256);\n    function getCeTokenBalanceOf(address account) external view returns (uint256);\n    function getDepositOf(address account) external view returns (uint256);\n    function getClaimedOf(address account) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "51",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220814625ba12ecf3db7eda2b2b2946c2b9ba472ee24a10cd07d6a62694f310e0ab64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220814625ba12ecf3db7eda2b2b2946c2b9ba472ee24a10cd07d6a62694f310e0ab64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 CHAINID 0x25 0xBA SLT 0xEC RETURN 0xDB PUSH31 0xDA2B2B2946C2B9BA472EE24A10CD07D6A62694F310E0AB64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "707:3748:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220814625ba12ecf3db7eda2b2b2946c2b9ba472ee24a10cd07d6a62694f310e0ab64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 CHAINID 0x25 0xBA SLT 0xEC RETURN 0xDB PUSH31 0xDA2B2B2946C2B9BA472EE24A10CD07D6A62694F310E0AB64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "707:3748:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220814625ba12ecf3db7eda2b2b2946c2b9ba472ee24a10cd07d6a62694f310e0ab64736f6c634300080a0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e4bfd265cab3c0f48207fc7f1e9d0bff47c7a6b0edd7e9c85bb15b1bbe24f9e64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e4bfd265cab3c0f48207fc7f1e9d0bff47c7a6b0edd7e9c85bb15b1bbe24f9e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4B REVERT 0x26 0x5C 0xAB EXTCODECOPY 0xF BASEFEE KECCAK256 PUSH32 0xC7F1E9D0BFF47C7A6B0EDD7E9C85BB15B1BBE24F9E64736F6C634300080A0033 ",
							"sourceMap": "194:8964:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e4bfd265cab3c0f48207fc7f1e9d0bff47c7a6b0edd7e9c85bb15b1bbe24f9e64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4B REVERT 0x26 0x5C 0xAB EXTCODECOPY 0xF BASEFEE KECCAK256 PUSH32 0xC7F1E9D0BFF47C7A6B0EDD7E9C85BB15B1BBE24F9E64736F6C634300080A0033 ",
							"sourceMap": "194:8964:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e4bfd265cab3c0f48207fc7f1e9d0bff47c7a6b0edd7e9c85bb15b1bbe24f9e64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/CeVault.sol": {
				"CeVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "CeTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentRatio",
									"type": "uint256"
								}
							],
							"name": "RatioUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "changeRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYieldsFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAbnbcAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCeToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCeTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimedOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPrincipalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAmountInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "ceTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aBNBcAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/ceros/CeVault.sol\":501:6719  contract CeVault is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":501:6719  contract CeVault is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb4bf36b2\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb4bf36b2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc96f0e01\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfad83484\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f1d9267\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaba317a9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb0f479a1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb36684ac\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x340ac20f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x340ac20f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4226626a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x463fd1af\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5d602c00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x0c632bbe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1101596c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17d7de7c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x223888c1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f4f21e2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6424:6518  function getCeToken() external view returns(address) {... */\n    tag_3:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6502:6510  _ceToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xca))\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6424:6518  function getCeToken() external view returns(address) {... */\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6424:6518  function getCeToken() external view returns(address) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2414:2610  function claimYieldsFor(address owner, address recipient)... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":811:836   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":799:801   */\n      0x20\n        /* \"#utility.yul\":784:802   */\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2414:2610  function claimYieldsFor(address owner, address recipient)... */\n      tag_30\n        /* \"#utility.yul\":665:842   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6333:6419  function getName() external view returns (string memory) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5375:5812  function getYieldFor(address account)... */\n    tag_6:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1677:1867  function depositFor(address recipient, uint256 amount)... */\n    tag_7:\n      tag_32\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6202:6328  function changeRouter(address router) external onlyOwner {... */\n    tag_8:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6085:6197  function getClaimedOf(address account) external view returns (uint256) {... */\n    tag_9:\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6173:6190  _claimed[account] */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6147:6154  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6173:6190  _claimed[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6173:6181  _claimed */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6173:6190  _claimed[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6085:6197  function getClaimedOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1140:1483  function initialize(... */\n    tag_10:\n      tag_52\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":3330:3344   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3323:3345   */\n      iszero\n        /* \"#utility.yul\":3305:3346   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3293:3295   */\n      0x20\n        /* \"#utility.yul\":3278:3296   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      tag_30\n        /* \"#utility.yul\":3165:3352   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5965:6080  function getDepositOf(address account) external view returns (uint256) {... */\n    tag_12:\n      tag_32\n      tag_68\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6053:6073  _depositors[account] */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6027:6034  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6053:6073  _depositors[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6053:6064  _depositors */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6053:6073  _depositors[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5965:6080  function getDepositOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_52\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_28)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3504:3724  function withdrawFor(... */\n    tag_15:\n      tag_32\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4935:5155  function getPrincipalOf(address account)... */\n    tag_16:\n      tag_32\n      tag_82\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6625:6717  function getRouter() external view returns(address) {... */\n    tag_17:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6702:6709  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xcc))\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6625:6717  function getRouter() external view returns(address) {... */\n      jump(tag_28)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2634:2802  function claimYields(address recipient)... */\n    tag_18:\n      tag_32\n      tag_89\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6523:6620  function getAbnbcAddress() external view returns(address) {... */\n    tag_19:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6606:6612  _aBNBc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xcb))\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6523:6620  function getAbnbcAddress() external view returns(address) {... */\n      jump(tag_28)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1503:1657  function deposit(uint256 amount)... */\n    tag_20:\n      tag_32\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5817:5960  function getCeTokenBalanceOf(address account)... */\n    tag_21:\n      tag_32\n      tag_101\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5928:5953  _ceTokenBalances[account] */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5898:5905  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5928:5953  _ceTokenBalances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5928:5944  _ceTokenBalances */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5928:5953  _ceTokenBalances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5817:5960  function getCeTokenBalanceOf(address account)... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_52\n      tag_105\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3297:3483  function withdraw(address recipient, uint256 amount)... */\n    tag_23:\n      tag_32\n      tag_108\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4528:4657  function getTotalAmountInVault() external view override returns (uint256) {... */\n    tag_24:\n      tag_32\n      tag_112\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2414:2610  function claimYieldsFor(address owner, address recipient)... */\n    tag_35:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1086:1093  _router */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2543:2550  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1086:1093  _router */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1082  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1093  msg.sender == _router */\n      eq\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1064:1117  require(msg.sender == _router, \"Router: not allowed\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2573:2603  _claimYields(owner, recipient) */\n      tag_124\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2586:2591  owner */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2593:2602  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2573:2585  _claimYields */\n      tag_125\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2573:2603  _claimYields(owner, recipient) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2566:2603  return _claimYields(owner, recipient) */\n      swap4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2414:2610  function claimYieldsFor(address owner, address recipient)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6333:6419  function getName() external view returns (string memory) {... */\n    tag_39:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6375:6388  string memory */\n      0x60\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6407:6412  _name */\n      0xc9\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6400:6412  return _name */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6333:6419  function getName() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5375:5812  function getYieldFor(address account)... */\n    tag_45:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5504:5532  this.getPrincipalOf(account) */\n      mload(0x40)\n      shl(0xe0, 0xaba317a9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5504:5532  this.getPrincipalOf(account) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5461:5468  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5504:5508  this */\n      address\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5504:5523  this.getPrincipalOf */\n      0xaba317a9\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5504:5532  this.getPrincipalOf(account) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5559:5579  _depositors[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5559:5570  _depositors */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5559:5579  _depositors[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5484:5532  uint256 principal = this.getPrincipalOf(account) */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5546:5579  principal >= _depositors[account] */\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5542:5614  if (principal >= _depositors[account]) {... */\n      tag_139\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5602:5603  0 */\n      0x00\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5375:5812  function getYieldFor(address account)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5542:5614  if (principal >= _depositors[account]) {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5665  _depositors[account] */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5623:5642  uint256 totalYields */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5665  _depositors[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5656  _depositors */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5665  _depositors[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5677  _depositors[account] - principal */\n      tag_140\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5668:5677  principal */\n      dup4\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5645:5677  _depositors[account] - principal */\n      tag_141\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5706:5723  _claimed[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5706:5714  _claimed */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5706:5723  _claimed[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5623:5677  uint256 totalYields = _depositors[account] - principal */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5691:5723  totalYields <= _claimed[account] */\n      dup2\n      gt\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5687:5758  if (totalYields <= _claimed[account]) {... */\n      tag_142\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5746:5747  0 */\n      0x00\n      swap4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5375:5812  function getYieldFor(address account)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5687:5758  if (totalYields <= _claimed[account]) {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5788:5805  _claimed[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5788:5796  _claimed */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5788:5805  _claimed[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5774:5805  totalYields - _claimed[account] */\n      tag_143\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5774:5785  totalYields */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5774:5805  totalYields - _claimed[account] */\n      tag_141\n      jump\t// in\n    tag_143:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5767:5805  return totalYields - _claimed[account] */\n      swap5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5375:5812  function getYieldFor(address account)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1677:1867  function depositFor(address recipient, uint256 amount)... */\n    tag_50:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1803:1810  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1086:1093  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xcc))\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1082  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1093  msg.sender == _router */\n      eq\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1064:1117  require(msg.sender == _router, \"Router: not allowed\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_148:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1833:1860  _deposit(recipient, amount) */\n      tag_124\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1842:1851  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1853:1859  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1833:1841  _deposit */\n      tag_152\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1833:1860  _deposit(recipient, amount) */\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6202:6328  function changeRouter(address router) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6269:6276  _router */\n      0xcc\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6269:6285  _router = router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6300:6321  RouterChanged(router) */\n      mload(0x40)\n        /* \"#utility.yul\":160:211   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6300:6321  RouterChanged(router) */\n      0x1085cec9a5108943412475d298086ae4d0abf09cfad47b05436b89fe887a820c\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6300:6321  RouterChanged(router) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":6202:6328  function changeRouter(address router) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1140:1483  function initialize(... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_164\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5621:5623   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5603:5624   */\n      mstore\n        /* \"#utility.yul\":5660:5662   */\n      0x2e\n        /* \"#utility.yul\":5640:5658   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5633:5663   */\n      mstore\n        /* \"#utility.yul\":5699:5733   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5679:5697   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5672:5734   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5750:5768   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5743:5787   */\n      mstore\n        /* \"#utility.yul\":5804:5823   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_117\n        /* \"#utility.yul\":5419:5829   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_168:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1287:1303  __Ownable_init() */\n      tag_170\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1287:1301  __Ownable_init */\n      tag_171\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1287:1303  __Ownable_init() */\n      jump\t// in\n    tag_170:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1313:1330  __Pausable_init() */\n      tag_172\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1313:1328  __Pausable_init */\n      tag_173\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1313:1330  __Pausable_init() */\n      jump\t// in\n    tag_172:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1340:1364  __ReentrancyGuard_init() */\n      tag_174\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1340:1362  __ReentrancyGuard_init */\n      tag_175\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1340:1364  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_174:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1374:1386  _name = name */\n      dup4\n      mload\n      tag_176\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1374:1379  _name */\n      0xc9\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1374:1386  _name = name */\n      0x20\n      dup8\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1396:1404  _ceToken */\n      0xca\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1396:1433  _ceToken = ICertToken(ceTokenAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1443:1449  _aBNBc */\n      0xcb\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1443:1476  _aBNBc = ICertToken(aBNBcAddress) */\n      dup1\n      sload\n      swap3\n      dup6\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5986:6022   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":5974:5976   */\n      0x20\n        /* \"#utility.yul\":5959:5977   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1140:1483  function initialize(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3504:3724  function withdrawFor(... */\n    tag_79:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3656:3663  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1086:1093  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xcc))\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1082  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1072:1093  msg.sender == _router */\n      eq\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1064:1117  require(msg.sender == _router, \"Router: not allowed\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_193:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3682:3717  _withdraw(owner, recipient, amount) */\n      tag_196\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3692:3697  owner */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3699:3708  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3710:3716  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3682:3691  _withdraw */\n      tag_197\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3682:3717  _withdraw(owner, recipient, amount) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3675:3717  return _withdraw(owner, recipient, amount) */\n      swap5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3504:3724  function withdrawFor(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4935:5155  function getPrincipalOf(address account)... */\n    tag_83:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5024:5031  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5047:5060  uint256 ratio */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5063:5069  _aBNBc */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5063:5075  _aBNBc.ratio */\n      and\n      0x71ca337d\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5063:5077  _aBNBc.ratio() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5095:5120  _ceTokenBalances[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5095:5111  _ceTokenBalances */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5095:5120  _ceTokenBalances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5047:5077  uint256 ratio = _aBNBc.ratio() */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5132:5136  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5095:5128  _ceTokenBalances[account] * ratio */\n      tag_202\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5047:5077  uint256 ratio = _aBNBc.ratio() */\n      dup4\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5095:5128  _ceTokenBalances[account] * ratio */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5094:5136  (_ceTokenBalances[account] * ratio) / 1e18 */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":5087:5136  return (_ceTokenBalances[account] * ratio) / 1e18 */\n      swap4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4935:5155  function getPrincipalOf(address account)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2634:2802  function claimYields(address recipient)... */\n    tag_90:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2730:2737  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2760:2795  _claimYields(msg.sender, recipient) */\n      tag_211\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2773:2783  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2785:2794  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2760:2772  _claimYields */\n      tag_125\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2760:2795  _claimYields(msg.sender, recipient) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2753:2795  return _claimYields(msg.sender, recipient) */\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2634:2802  function claimYields(address recipient)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1503:1657  function deposit(uint256 amount)... */\n    tag_98:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1592:1599  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1622:1650  _deposit(msg.sender, amount) */\n      tag_211\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1631:1641  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1643:1649  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1622:1630  _deposit */\n      tag_152\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1622:1650  _deposit(msg.sender, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6630:6632   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6612:6633   */\n      mstore\n        /* \"#utility.yul\":6669:6671   */\n      0x26\n        /* \"#utility.yul\":6649:6667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6642:6672   */\n      mstore\n        /* \"#utility.yul\":6708:6742   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6688:6706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6681:6743   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6759:6777   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6752:6788   */\n      mstore\n        /* \"#utility.yul\":6805:6824   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_117\n        /* \"#utility.yul\":6428:6830   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3297:3483  function withdraw(address recipient, uint256 amount)... */\n    tag_109:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3406:3413  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_122\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3436:3476  _withdraw(msg.sender, recipient, amount) */\n      tag_124\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3446:3456  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3458:3467  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3469:3475  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3436:3445  _withdraw */\n      tag_197\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3436:3476  _withdraw(msg.sender, recipient, amount) */\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4528:4657  function getTotalAmountInVault() external view override returns (uint256) {... */\n    tag_112:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4625  _aBNBc */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4650  _aBNBc.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4644:4648  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4650  _aBNBc.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4593:4600  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4625  _aBNBc */\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4635  _aBNBc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4619:4650  _aBNBc.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_235:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4612:4650  return _aBNBc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4528:4657  function getTotalAmountInVault() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2807:3276  function _claimYields(address owner, address recipient)... */\n    tag_125:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2937:2960  this.getYieldFor(owner) */\n      mload(0x40)\n      shl(0xe0, 0x223888c1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2937:2960  this.getYieldFor(owner) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2888:2895  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2937:2941  this */\n      address\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2937:2953  this.getYieldFor */\n      0x223888c1\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2937:2960  this.getYieldFor(owner) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_240:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2911:2960  uint256 availableYields = this.getYieldFor(owner) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2996:2997  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2978:2993  availableYields */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2978:2997  availableYields > 0 */\n      gt\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2970:3029  require(availableYields > 0, \"has not got yields to claim\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7037:7039   */\n      0x20\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2970:3029  require(availableYields > 0, \"has not got yields to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7019:7040   */\n      mstore\n        /* \"#utility.yul\":7076:7078   */\n      0x1b\n        /* \"#utility.yul\":7056:7074   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7049:7079   */\n      mstore\n        /* \"#utility.yul\":7115:7144   */\n      0x686173206e6f7420676f74207969656c647320746f20636c61696d0000000000\n        /* \"#utility.yul\":7095:7113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7088:7145   */\n      mstore\n        /* \"#utility.yul\":7162:7180   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2970:3029  require(availableYields > 0, \"has not got yields to claim\") */\n      tag_117\n        /* \"#utility.yul\":6835:7186   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2970:3029  require(availableYields > 0, \"has not got yields to claim\") */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3096  _claimed[owner] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3089  _claimed */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3096  _claimed[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3115  _claimed[owner] += availableYields */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3100:3115  availableYields */\n      dup4\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3096  _claimed[owner] */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3115  _claimed[owner] += availableYields */\n      tag_244\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3100:3115  availableYields */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3081:3115  _claimed[owner] += availableYields */\n      tag_245\n      jump\t// in\n    tag_244:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3132:3138  _aBNBc */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3125:3180  IERC20(_aBNBc).safeTransfer(recipient, availableYields) */\n      tag_246\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3132:3138  _aBNBc */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3153:3162  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3164:3179  availableYields */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3125:3152  IERC20(_aBNBc).safeTransfer */\n      tag_247\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3125:3180  IERC20(_aBNBc).safeTransfer(recipient, availableYields) */\n      jump\t// in\n    tag_246:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3210:3219  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3195:3237  Claimed(owner, recipient, availableYields) */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3203:3208  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3195:3237  Claimed(owner, recipient, availableYields) */\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3221:3236  availableYields */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3195:3237  Claimed(owner, recipient, availableYields) */\n      mload(0x40)\n      tag_248\n      swap2\n        /* \"#utility.yul\":811:836   */\n      dup2\n      mstore\n        /* \"#utility.yul\":799:801   */\n      0x20\n        /* \"#utility.yul\":784:802   */\n      add\n      swap1\n        /* \"#utility.yul\":665:842   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3195:3237  Claimed(owner, recipient, availableYields) */\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3254:3269  availableYields */\n      swap4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2807:3276  function _claimYields(address owner, address recipient)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1887:2409  function _deposit(address account, uint256 amount)... */\n    tag_152:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1963:1970  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1986:1999  uint256 ratio */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2002:2008  _aBNBc */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2002:2014  _aBNBc.ratio */\n      and\n      0x71ca337d\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2002:2016  _aBNBc.ratio() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_252:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2033:2039  _aBNBc */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1986:2016  uint256 ratio = _aBNBc.ratio() */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2026:2092  IERC20(_aBNBc).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_253\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2033:2039  _aBNBc */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2058:2068  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2078:2082  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2085:2091  amount */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2026:2057  IERC20(_aBNBc).safeTransferFrom */\n      tag_254\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2026:2092  IERC20(_aBNBc).safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_253:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2102:2116  uint256 toMint */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2137:2142  ratio */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2120:2133  amount * 1e18 */\n      tag_255\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2120:2126  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2129:2133  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2120:2133  amount * 1e18 */\n      tag_203\n      jump\t// in\n    tag_255:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2119:2142  (amount * 1e18) / ratio */\n      tag_256\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2172  _depositors[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2163  _depositors */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2172  _depositors[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2182  _depositors[account] += amount */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2102:2142  uint256 toMint = (amount * 1e18) / ratio */\n      swap3\n      swap4\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2176:2182  amount */\n      dup7\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2172  _depositors[account] */\n      swap1\n      swap2\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2182  _depositors[account] += amount */\n      tag_257\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2176:2182  amount */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2152:2182  _depositors[account] += amount */\n      tag_245\n      jump\t// in\n    tag_257:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2226  _ceTokenBalances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2217  _ceTokenBalances */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2226  _ceTokenBalances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2236  _ceTokenBalances[account] += toMint */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2230:2236  toMint */\n      dup4\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2226  _ceTokenBalances[account] */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2236  _ceTokenBalances[account] += toMint */\n      tag_258\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2230:2236  toMint */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2201:2236  _ceTokenBalances[account] += toMint */\n      tag_245\n      jump\t// in\n    tag_258:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2295:2303  _ceToken */\n      sload(0xca)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2284:2326  ICertToken(_ceToken).mint(account, toMint) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7516:7548   */\n      dup8\n      dup2\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2284:2326  ICertToken(_ceToken).mint(account, toMint) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7498:7549   */\n      mstore\n        /* \"#utility.yul\":7565:7583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7558:7592   */\n      dup5\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2295:2303  _ceToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2284:2309  ICertToken(_ceToken).mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":7471:7489   */\n      0x44\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2284:2326  ICertToken(_ceToken).mint(account, toMint) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2341:2379  Deposited(msg.sender, account, toMint) */\n      mload(0x40)\n        /* \"#utility.yul\":811:836   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2341:2379  Deposited(msg.sender, account, toMint) */\n      dup9\n      and\n      swap3\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2351:2361  msg.sender */\n      caller\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2341:2379  Deposited(msg.sender, account, toMint) */\n      0x8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7\n      swap1\n        /* \"#utility.yul\":799:801   */\n      0x20\n        /* \"#utility.yul\":784:802   */\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2341:2379  Deposited(msg.sender, account, toMint) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":2396:2402  toMint */\n      swap5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":1887:2409  function _deposit(address account, uint256 amount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7805:7807   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7787:7808   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7817:7847   */\n      mstore\n        /* \"#utility.yul\":7883:7917   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7863:7881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7856:7918   */\n      mstore\n        /* \"#utility.yul\":7935:7953   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_117\n        /* \"#utility.yul\":7603:7959   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1151  __Pausable_init_unchained */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3729:4523  function _withdraw(... */\n    tag_197:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3845:3852  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3864:3877  uint256 ratio */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3880:3886  _aBNBc */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3880:3892  _aBNBc.ratio */\n      and\n      0x71ca337d\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3880:3894  _aBNBc.ratio() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_296:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3864:3894  uint256 ratio = _aBNBc.ratio() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3904:3922  uint256 realAmount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3944:3948  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3926:3940  amount * ratio */\n      tag_297\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3864:3894  uint256 ratio = _aBNBc.ratio() */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3926:3932  amount */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3926:3940  amount * ratio */\n      tag_203\n      jump\t// in\n    tag_297:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3925:3948  (amount * ratio) / 1e18 */\n      tag_298\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_298:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:3985  _aBNBc */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:4010  _aBNBc.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4004:4008  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:4010  _aBNBc.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3904:3948  uint256 realAmount = (amount * ratio) / 1e18 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:3985  _aBNBc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:3995  _aBNBc.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:4010  _aBNBc.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_302:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3979:4024  _aBNBc.balanceOf(address(this)) >= realAmount */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3958:4078  require(... */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8578:8580   */\n      0x20\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3958:4078  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8560:8581   */\n      mstore\n        /* \"#utility.yul\":8617:8619   */\n      0x1c\n        /* \"#utility.yul\":8597:8615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8590:8620   */\n      mstore\n        /* \"#utility.yul\":8656:8686   */\n      0x6e6f74207375636820616d6f756e7420696e20746865207661756c7400000000\n        /* \"#utility.yul\":8636:8654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8629:8687   */\n      mstore\n        /* \"#utility.yul\":8704:8722   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3958:4078  require(... */\n      tag_117\n        /* \"#utility.yul\":8376:8728   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3958:4078  require(... */\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4106:4129  _ceTokenBalances[owner] */\n      dup7\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4088:4103  uint256 balance */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4106:4129  _ceTokenBalances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4106:4122  _ceTokenBalances */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4106:4129  _ceTokenBalances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4147:4164  balance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4139:4189  require(balance >= amount, \"insufficient balance\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8935:8937   */\n      0x20\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4139:4189  require(balance >= amount, \"insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8917:8938   */\n      mstore\n        /* \"#utility.yul\":8974:8976   */\n      0x14\n        /* \"#utility.yul\":8954:8972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8947:8977   */\n      mstore\n      shl(0x60, 0x696e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":8993:9011   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8986:9036   */\n      mstore\n        /* \"#utility.yul\":9053:9071   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4139:4189  require(balance >= amount, \"insufficient balance\") */\n      tag_117\n        /* \"#utility.yul\":8733:9077   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4139:4189  require(balance >= amount, \"insufficient balance\") */\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4222  _ceTokenBalances[owner] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4215  _ceTokenBalances */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4222  _ceTokenBalances[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4232  _ceTokenBalances[owner] -= amount */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4226:4232  amount */\n      dup8\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4222  _ceTokenBalances[owner] */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4232  _ceTokenBalances[owner] -= amount */\n      tag_309\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4226:4232  amount */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4199:4232  _ceTokenBalances[owner] -= amount */\n      tag_141\n      jump\t// in\n    tag_309:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4295:4303  _ceToken */\n      sload(0xca)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4284:4324  ICertToken(_ceToken).burn(owner, amount) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7516:7548   */\n      dup10\n      dup2\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4284:4324  ICertToken(_ceToken).burn(owner, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7498:7549   */\n      mstore\n        /* \"#utility.yul\":7565:7583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7558:7592   */\n      dup9\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4295:4303  _ceToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4284:4309  ICertToken(_ceToken).burn */\n      0x9dc29fac\n      swap1\n        /* \"#utility.yul\":7471:7489   */\n      0x44\n      add\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4284:4324  ICertToken(_ceToken).burn(owner, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4352  _depositors[owner] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4345  _depositors */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4352  _depositors[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4366  _depositors[owner] -= realAmount */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4356:4366  realAmount */\n      dup5\n      swap3\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4352  _depositors[owner] */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4366  _depositors[owner] -= realAmount */\n      tag_314\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4356:4366  realAmount */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4334:4366  _depositors[owner] -= realAmount */\n      tag_141\n      jump\t// in\n    tag_314:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4392:4398  _aBNBc */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4385:4435  IERC20(_aBNBc).safeTransfer(recipient, realAmount) */\n      tag_315\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4392:4398  _aBNBc */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4413:4422  recipient */\n      dup8\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4424:4434  realAmount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4385:4412  IERC20(_aBNBc).safeTransfer */\n      tag_247\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4385:4435  IERC20(_aBNBc).safeTransfer(recipient, realAmount) */\n      jump\t// in\n    tag_315:\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4467:4476  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4450:4489  Withdrawn(owner, recipient, realAmount) */\n      and\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4460:4465  owner */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4450:4489  Withdrawn(owner, recipient, realAmount) */\n      and\n      0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4478:4488  realAmount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4450:4489  Withdrawn(owner, recipient, realAmount) */\n      mload(0x40)\n      tag_316\n      swap2\n        /* \"#utility.yul\":811:836   */\n      dup2\n      mstore\n        /* \"#utility.yul\":799:801   */\n      0x20\n        /* \"#utility.yul\":784:802   */\n      add\n      swap1\n        /* \"#utility.yul\":665:842   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4450:4489  Withdrawn(owner, recipient, realAmount) */\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":4506:4516  realAmount */\n      swap6\n        /* \"Heliocontracts/contracts/ceros/CeVault.sol\":3729:4523  function _withdraw(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7516:7548   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7498:7549   */\n      mstore\n        /* \"#utility.yul\":7565:7583   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7558:7592   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_318\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":7471:7489   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_319:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9340:9355   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9322:9356   */\n      mstore\n        /* \"#utility.yul\":9392:9407   */\n      dup4\n      and\n        /* \"#utility.yul\":9372:9390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9365:9408   */\n      mstore\n        /* \"#utility.yul\":9424:9442   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":9417:9451   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_178\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":9257:9275   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_319\n        /* \"#utility.yul\":9082:9457   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1246  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1254  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_291:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_276\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2057  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2072  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_342\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_344\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9946:9948   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9928:9949   */\n      mstore\n        /* \"#utility.yul\":9985:9987   */\n      0x2a\n        /* \"#utility.yul\":9965:9983   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9958:9988   */\n      mstore\n        /* \"#utility.yul\":10024:10058   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10004:10022   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9997:10059   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":10075:10093   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10068:10108   */\n      mstore\n        /* \"#utility.yul\":10125:10144   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_117\n        /* \"#utility.yul\":9744:10150   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_356\n      swap2\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_360\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_359)\n    tag_360:\n      0x60\n      swap2\n      pop\n    tag_359:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_361\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_362\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_368\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11043:11045   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11025:11046   */\n      mstore\n        /* \"#utility.yul\":11082:11084   */\n      0x1d\n        /* \"#utility.yul\":11062:11080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11055:11085   */\n      mstore\n        /* \"#utility.yul\":11121:11152   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":11101:11119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11094:11153   */\n      mstore\n        /* \"#utility.yul\":11170:11188   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_117\n        /* \"#utility.yul\":10841:11194   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n    tag_368:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      jump(tag_143)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_177:\n      dup3\n      dup1\n      sload\n      tag_379\n      swap1\n      tag_128\n      jump\t// in\n    tag_379:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_381\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_384)\n    tag_381:\n      dup3\n      0x1f\n      lt\n      tag_382\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_384)\n    tag_382:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_384\n      jumpi\n      swap2\n      dup3\n      add\n    tag_383:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_384\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_383)\n    tag_384:\n      pop\n      tag_385\n      swap3\n      swap2\n      pop\n      tag_386\n      jump\t// in\n    tag_385:\n      pop\n      swap1\n      jump\t// out\n    tag_386:\n    tag_387:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_385\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_387)\n        /* \"#utility.yul\":222:395   */\n    tag_389:\n        /* \"#utility.yul\":290:310   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":339:370   */\n      dup2\n      and\n        /* \"#utility.yul\":329:371   */\n      dup2\n      eq\n        /* \"#utility.yul\":319:389   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":385:386   */\n      0x00\n        /* \"#utility.yul\":382:383   */\n      dup1\n        /* \"#utility.yul\":375:387   */\n      revert\n        /* \"#utility.yul\":319:389   */\n    tag_396:\n        /* \"#utility.yul\":222:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":400:660   */\n    tag_34:\n        /* \"#utility.yul\":468:474   */\n      0x00\n        /* \"#utility.yul\":476:482   */\n      dup1\n        /* \"#utility.yul\":529:531   */\n      0x40\n        /* \"#utility.yul\":517:526   */\n      dup4\n        /* \"#utility.yul\":508:515   */\n      dup6\n        /* \"#utility.yul\":504:527   */\n      sub\n        /* \"#utility.yul\":500:532   */\n      slt\n        /* \"#utility.yul\":497:549   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":542:543   */\n      dup1\n        /* \"#utility.yul\":535:547   */\n      revert\n        /* \"#utility.yul\":497:549   */\n    tag_398:\n        /* \"#utility.yul\":568:597   */\n      tag_399\n        /* \"#utility.yul\":587:596   */\n      dup4\n        /* \"#utility.yul\":568:597   */\n      tag_389\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":558:597   */\n      swap2\n      pop\n        /* \"#utility.yul\":616:654   */\n      tag_400\n        /* \"#utility.yul\":650:652   */\n      0x20\n        /* \"#utility.yul\":639:648   */\n      dup5\n        /* \"#utility.yul\":635:653   */\n      add\n        /* \"#utility.yul\":616:654   */\n      tag_389\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":606:654   */\n      swap1\n      pop\n        /* \"#utility.yul\":400:660   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":847:1105   */\n    tag_390:\n        /* \"#utility.yul\":919:920   */\n      0x00\n        /* \"#utility.yul\":929:1042   */\n    tag_403:\n        /* \"#utility.yul\":943:949   */\n      dup4\n        /* \"#utility.yul\":940:941   */\n      dup2\n        /* \"#utility.yul\":937:950   */\n      lt\n        /* \"#utility.yul\":929:1042   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1019:1030   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1013:1031   */\n      mload\n        /* \"#utility.yul\":1000:1011   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":993:1032   */\n      mstore\n        /* \"#utility.yul\":965:967   */\n      0x20\n        /* \"#utility.yul\":958:968   */\n      add\n        /* \"#utility.yul\":929:1042   */\n      jump(tag_403)\n    tag_405:\n        /* \"#utility.yul\":1060:1066   */\n      dup4\n        /* \"#utility.yul\":1057:1058   */\n      dup2\n        /* \"#utility.yul\":1054:1067   */\n      gt\n        /* \"#utility.yul\":1051:1099   */\n      iszero\n      tag_178\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":1095:1096   */\n      0x00\n        /* \"#utility.yul\":1077:1093   */\n      swap2\n      add\n        /* \"#utility.yul\":1070:1097   */\n      mstore\n        /* \"#utility.yul\":847:1105   */\n      jump\t// out\n        /* \"#utility.yul\":1110:1493   */\n    tag_41:\n        /* \"#utility.yul\":1259:1261   */\n      0x20\n        /* \"#utility.yul\":1248:1257   */\n      dup2\n        /* \"#utility.yul\":1241:1262   */\n      mstore\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      dup3\n        /* \"#utility.yul\":1285:1298   */\n      mload\n        /* \"#utility.yul\":1334:1340   */\n      dup1\n        /* \"#utility.yul\":1329:1331   */\n      0x20\n        /* \"#utility.yul\":1318:1327   */\n      dup5\n        /* \"#utility.yul\":1314:1332   */\n      add\n        /* \"#utility.yul\":1307:1341   */\n      mstore\n        /* \"#utility.yul\":1350:1416   */\n      tag_408\n        /* \"#utility.yul\":1409:1415   */\n      dup2\n        /* \"#utility.yul\":1404:1406   */\n      0x40\n        /* \"#utility.yul\":1393:1402   */\n      dup6\n        /* \"#utility.yul\":1389:1407   */\n      add\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1376:1382   */\n      dup8\n        /* \"#utility.yul\":1372:1387   */\n      add\n        /* \"#utility.yul\":1350:1416   */\n      tag_390\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1477:1479   */\n      0x1f\n        /* \"#utility.yul\":1456:1471   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1452:1481   */\n      and\n        /* \"#utility.yul\":1437:1482   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1484:1486   */\n      0x40\n        /* \"#utility.yul\":1433:1487   */\n      add\n      swap3\n        /* \"#utility.yul\":1110:1493   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1498:1684   */\n    tag_44:\n        /* \"#utility.yul\":1557:1563   */\n      0x00\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1598:1607   */\n      dup3\n        /* \"#utility.yul\":1589:1596   */\n      dup5\n        /* \"#utility.yul\":1585:1608   */\n      sub\n        /* \"#utility.yul\":1581:1613   */\n      slt\n        /* \"#utility.yul\":1578:1630   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":1626:1627   */\n      0x00\n        /* \"#utility.yul\":1623:1624   */\n      dup1\n        /* \"#utility.yul\":1616:1628   */\n      revert\n        /* \"#utility.yul\":1578:1630   */\n    tag_410:\n        /* \"#utility.yul\":1649:1678   */\n      tag_204\n        /* \"#utility.yul\":1668:1677   */\n      dup3\n        /* \"#utility.yul\":1649:1678   */\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":1689:1943   */\n    tag_49:\n        /* \"#utility.yul\":1757:1763   */\n      0x00\n        /* \"#utility.yul\":1765:1771   */\n      dup1\n        /* \"#utility.yul\":1818:1820   */\n      0x40\n        /* \"#utility.yul\":1806:1815   */\n      dup4\n        /* \"#utility.yul\":1797:1804   */\n      dup6\n        /* \"#utility.yul\":1793:1816   */\n      sub\n        /* \"#utility.yul\":1789:1821   */\n      slt\n        /* \"#utility.yul\":1786:1838   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1834:1835   */\n      0x00\n        /* \"#utility.yul\":1831:1832   */\n      dup1\n        /* \"#utility.yul\":1824:1836   */\n      revert\n        /* \"#utility.yul\":1786:1838   */\n    tag_413:\n        /* \"#utility.yul\":1857:1886   */\n      tag_414\n        /* \"#utility.yul\":1876:1885   */\n      dup4\n        /* \"#utility.yul\":1857:1886   */\n      tag_389\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1847:1886   */\n      swap5\n        /* \"#utility.yul\":1933:1935   */\n      0x20\n        /* \"#utility.yul\":1918:1936   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1905:1937   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1689:1943   */\n      jump\t// out\n        /* \"#utility.yul\":1948:2075   */\n    tag_391:\n        /* \"#utility.yul\":2009:2019   */\n      0x4e487b71\n        /* \"#utility.yul\":2004:2007   */\n      0xe0\n        /* \"#utility.yul\":2000:2020   */\n      shl\n        /* \"#utility.yul\":1997:1998   */\n      0x00\n        /* \"#utility.yul\":1990:2021   */\n      mstore\n        /* \"#utility.yul\":2040:2044   */\n      0x41\n        /* \"#utility.yul\":2037:2038   */\n      0x04\n        /* \"#utility.yul\":2030:2045   */\n      mstore\n        /* \"#utility.yul\":2064:2068   */\n      0x24\n        /* \"#utility.yul\":2061:2062   */\n      0x00\n        /* \"#utility.yul\":2054:2069   */\n      revert\n        /* \"#utility.yul\":2080:3160   */\n    tag_61:\n        /* \"#utility.yul\":2167:2173   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup1\n        /* \"#utility.yul\":2183:2189   */\n      0x00\n        /* \"#utility.yul\":2236:2238   */\n      0x60\n        /* \"#utility.yul\":2224:2233   */\n      dup5\n        /* \"#utility.yul\":2215:2222   */\n      dup7\n        /* \"#utility.yul\":2211:2234   */\n      sub\n        /* \"#utility.yul\":2207:2239   */\n      slt\n        /* \"#utility.yul\":2204:2256   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":2252:2253   */\n      0x00\n        /* \"#utility.yul\":2249:2250   */\n      dup1\n        /* \"#utility.yul\":2242:2254   */\n      revert\n        /* \"#utility.yul\":2204:2256   */\n    tag_417:\n        /* \"#utility.yul\":2292:2301   */\n      dup4\n        /* \"#utility.yul\":2279:2302   */\n      calldataload\n        /* \"#utility.yul\":2321:2339   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2362:2364   */\n      dup1\n        /* \"#utility.yul\":2354:2360   */\n      dup3\n        /* \"#utility.yul\":2351:2365   */\n      gt\n        /* \"#utility.yul\":2348:2382   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2348:2382   */\n    tag_418:\n        /* \"#utility.yul\":2416:2422   */\n      dup2\n        /* \"#utility.yul\":2405:2414   */\n      dup7\n        /* \"#utility.yul\":2401:2423   */\n      add\n        /* \"#utility.yul\":2391:2423   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2468   */\n      dup7\n        /* \"#utility.yul\":2454:2458   */\n      0x1f\n        /* \"#utility.yul\":2450:2452   */\n      dup4\n        /* \"#utility.yul\":2446:2459   */\n      add\n        /* \"#utility.yul\":2442:2469   */\n      slt\n        /* \"#utility.yul\":2432:2487   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2480:2481   */\n      dup1\n        /* \"#utility.yul\":2473:2485   */\n      revert\n        /* \"#utility.yul\":2432:2487   */\n    tag_419:\n        /* \"#utility.yul\":2519:2521   */\n      dup2\n        /* \"#utility.yul\":2506:2522   */\n      calldataload\n        /* \"#utility.yul\":2541:2543   */\n      dup2\n        /* \"#utility.yul\":2537:2539   */\n      dup2\n        /* \"#utility.yul\":2534:2544   */\n      gt\n        /* \"#utility.yul\":2531:2567   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2547:2565   */\n      tag_421\n      tag_391\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2622:2624   */\n      0x40\n        /* \"#utility.yul\":2616:2625   */\n      mload\n        /* \"#utility.yul\":2590:2592   */\n      0x1f\n        /* \"#utility.yul\":2676:2689   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2672:2694   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2696:2698   */\n      0x3f\n        /* \"#utility.yul\":2668:2699   */\n      add\n        /* \"#utility.yul\":2664:2704   */\n      and\n        /* \"#utility.yul\":2652:2705   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2720:2738   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2740:2762   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2717:2763   */\n      or\n        /* \"#utility.yul\":2714:2786   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":2766:2784   */\n      tag_423\n      tag_391\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2806:2816   */\n      dup2\n        /* \"#utility.yul\":2802:2804   */\n      0x40\n        /* \"#utility.yul\":2795:2817   */\n      mstore\n        /* \"#utility.yul\":2841:2843   */\n      dup3\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2826:2844   */\n      mstore\n        /* \"#utility.yul\":2883:2890   */\n      dup10\n        /* \"#utility.yul\":2876:2880   */\n      0x20\n        /* \"#utility.yul\":2871:2873   */\n      dup5\n        /* \"#utility.yul\":2867:2869   */\n      dup8\n        /* \"#utility.yul\":2863:2874   */\n      add\n        /* \"#utility.yul\":2859:2881   */\n      add\n        /* \"#utility.yul\":2856:2891   */\n      gt\n        /* \"#utility.yul\":2853:2908   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2901:2902   */\n      dup1\n        /* \"#utility.yul\":2894:2906   */\n      revert\n        /* \"#utility.yul\":2853:2908   */\n    tag_424:\n        /* \"#utility.yul\":2964:2966   */\n      dup3\n        /* \"#utility.yul\":2957:2961   */\n      0x20\n        /* \"#utility.yul\":2953:2955   */\n      dup7\n        /* \"#utility.yul\":2949:2962   */\n      add\n        /* \"#utility.yul\":2942:2946   */\n      0x20\n        /* \"#utility.yul\":2934:2940   */\n      dup4\n        /* \"#utility.yul\":2930:2947   */\n      add\n        /* \"#utility.yul\":2917:2967   */\n      calldatacopy\n        /* \"#utility.yul\":3011:3012   */\n      0x00\n        /* \"#utility.yul\":3004:3008   */\n      0x20\n        /* \"#utility.yul\":2999:3001   */\n      dup5\n        /* \"#utility.yul\":2991:2997   */\n      dup4\n        /* \"#utility.yul\":2987:3002   */\n      add\n        /* \"#utility.yul\":2983:3009   */\n      add\n        /* \"#utility.yul\":2976:3013   */\n      mstore\n        /* \"#utility.yul\":3032:3038   */\n      dup1\n        /* \"#utility.yul\":3022:3038   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3057:3097   */\n      tag_425\n        /* \"#utility.yul\":3091:3095   */\n      0x20\n        /* \"#utility.yul\":3080:3089   */\n      dup6\n        /* \"#utility.yul\":3076:3096   */\n      add\n        /* \"#utility.yul\":3057:3097   */\n      tag_389\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3047:3097   */\n      swap2\n      pop\n        /* \"#utility.yul\":3116:3154   */\n      tag_426\n        /* \"#utility.yul\":3150:3152   */\n      0x40\n        /* \"#utility.yul\":3139:3148   */\n      dup6\n        /* \"#utility.yul\":3135:3153   */\n      add\n        /* \"#utility.yul\":3116:3154   */\n      tag_389\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3106:3154   */\n      swap1\n      pop\n        /* \"#utility.yul\":2080:3160   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3357:3685   */\n    tag_78:\n        /* \"#utility.yul\":3434:3440   */\n      0x00\n        /* \"#utility.yul\":3442:3448   */\n      dup1\n        /* \"#utility.yul\":3450:3456   */\n      0x00\n        /* \"#utility.yul\":3503:3505   */\n      0x60\n        /* \"#utility.yul\":3491:3500   */\n      dup5\n        /* \"#utility.yul\":3482:3489   */\n      dup7\n        /* \"#utility.yul\":3478:3501   */\n      sub\n        /* \"#utility.yul\":3474:3506   */\n      slt\n        /* \"#utility.yul\":3471:3523   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":3519:3520   */\n      0x00\n        /* \"#utility.yul\":3516:3517   */\n      dup1\n        /* \"#utility.yul\":3509:3521   */\n      revert\n        /* \"#utility.yul\":3471:3523   */\n    tag_429:\n        /* \"#utility.yul\":3542:3571   */\n      tag_430\n        /* \"#utility.yul\":3561:3570   */\n      dup5\n        /* \"#utility.yul\":3542:3571   */\n      tag_389\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3532:3571   */\n      swap3\n      pop\n        /* \"#utility.yul\":3590:3628   */\n      tag_431\n        /* \"#utility.yul\":3624:3626   */\n      0x20\n        /* \"#utility.yul\":3613:3622   */\n      dup6\n        /* \"#utility.yul\":3609:3627   */\n      add\n        /* \"#utility.yul\":3590:3628   */\n      tag_389\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3580:3628   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3677   */\n      0x40\n        /* \"#utility.yul\":3664:3673   */\n      dup5\n        /* \"#utility.yul\":3660:3678   */\n      add\n        /* \"#utility.yul\":3647:3679   */\n      calldataload\n        /* \"#utility.yul\":3637:3679   */\n      swap1\n      pop\n        /* \"#utility.yul\":3357:3685   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3690:3870   */\n    tag_97:\n        /* \"#utility.yul\":3749:3755   */\n      0x00\n        /* \"#utility.yul\":3802:3804   */\n      0x20\n        /* \"#utility.yul\":3790:3799   */\n      dup3\n        /* \"#utility.yul\":3781:3788   */\n      dup5\n        /* \"#utility.yul\":3777:3800   */\n      sub\n        /* \"#utility.yul\":3773:3805   */\n      slt\n        /* \"#utility.yul\":3770:3822   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":3818:3819   */\n      0x00\n        /* \"#utility.yul\":3815:3816   */\n      dup1\n        /* \"#utility.yul\":3808:3820   */\n      revert\n        /* \"#utility.yul\":3770:3822   */\n    tag_433:\n      pop\n        /* \"#utility.yul\":3841:3864   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3690:3870   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3875:4218   */\n    tag_118:\n        /* \"#utility.yul\":4077:4079   */\n      0x20\n        /* \"#utility.yul\":4059:4080   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4116:4118   */\n      0x13\n        /* \"#utility.yul\":4096:4114   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4089:4119   */\n      mstore\n      shl(0x6a, 0x149bdd5d195c8e881b9bdd08185b1b1bddd959)\n        /* \"#utility.yul\":4150:4152   */\n      0x40\n        /* \"#utility.yul\":4135:4153   */\n      dup3\n      add\n        /* \"#utility.yul\":4128:4177   */\n      mstore\n        /* \"#utility.yul\":4209:4211   */\n      0x60\n        /* \"#utility.yul\":4194:4212   */\n      add\n      swap1\n        /* \"#utility.yul\":3875:4218   */\n      jump\t// out\n        /* \"#utility.yul\":4223:4578   */\n    tag_122:\n        /* \"#utility.yul\":4425:4427   */\n      0x20\n        /* \"#utility.yul\":4407:4428   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4464:4466   */\n      0x1f\n        /* \"#utility.yul\":4444:4462   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4437:4467   */\n      mstore\n        /* \"#utility.yul\":4503:4536   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4498:4500   */\n      0x40\n        /* \"#utility.yul\":4483:4501   */\n      dup3\n      add\n        /* \"#utility.yul\":4476:4537   */\n      mstore\n        /* \"#utility.yul\":4569:4571   */\n      0x60\n        /* \"#utility.yul\":4554:4572   */\n      add\n      swap1\n        /* \"#utility.yul\":4223:4578   */\n      jump\t// out\n        /* \"#utility.yul\":4583:4963   */\n    tag_128:\n        /* \"#utility.yul\":4662:4663   */\n      0x01\n        /* \"#utility.yul\":4658:4670   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4705:4717   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4726:4787   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4780:4784   */\n      0x7f\n        /* \"#utility.yul\":4772:4778   */\n      dup3\n        /* \"#utility.yul\":4768:4785   */\n      and\n        /* \"#utility.yul\":4758:4785   */\n      swap2\n      pop\n        /* \"#utility.yul\":4726:4787   */\n    tag_437:\n        /* \"#utility.yul\":4833:4835   */\n      0x20\n        /* \"#utility.yul\":4825:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4836   */\n      lt\n        /* \"#utility.yul\":4802:4820   */\n      dup2\n        /* \"#utility.yul\":4799:4837   */\n      eq\n        /* \"#utility.yul\":4796:4957   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4879:4889   */\n      0x4e487b71\n        /* \"#utility.yul\":4874:4877   */\n      0xe0\n        /* \"#utility.yul\":4870:4890   */\n      shl\n        /* \"#utility.yul\":4867:4868   */\n      0x00\n        /* \"#utility.yul\":4860:4891   */\n      mstore\n        /* \"#utility.yul\":4914:4918   */\n      0x22\n        /* \"#utility.yul\":4911:4912   */\n      0x04\n        /* \"#utility.yul\":4904:4919   */\n      mstore\n        /* \"#utility.yul\":4942:4946   */\n      0x24\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4932:4947   */\n      revert\n        /* \"#utility.yul\":4796:4957   */\n    tag_438:\n      pop\n        /* \"#utility.yul\":4583:4963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5152   */\n    tag_138:\n        /* \"#utility.yul\":5038:5044   */\n      0x00\n        /* \"#utility.yul\":5091:5093   */\n      0x20\n        /* \"#utility.yul\":5079:5088   */\n      dup3\n        /* \"#utility.yul\":5070:5077   */\n      dup5\n        /* \"#utility.yul\":5066:5089   */\n      sub\n        /* \"#utility.yul\":5062:5094   */\n      slt\n        /* \"#utility.yul\":5059:5111   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":5107:5108   */\n      0x00\n        /* \"#utility.yul\":5104:5105   */\n      dup1\n        /* \"#utility.yul\":5097:5109   */\n      revert\n        /* \"#utility.yul\":5059:5111   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":5130:5146   */\n      mload\n      swap2\n        /* \"#utility.yul\":4968:5152   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5284   */\n    tag_392:\n        /* \"#utility.yul\":5218:5228   */\n      0x4e487b71\n        /* \"#utility.yul\":5213:5216   */\n      0xe0\n        /* \"#utility.yul\":5209:5229   */\n      shl\n        /* \"#utility.yul\":5206:5207   */\n      0x00\n        /* \"#utility.yul\":5199:5230   */\n      mstore\n        /* \"#utility.yul\":5249:5253   */\n      0x11\n        /* \"#utility.yul\":5246:5247   */\n      0x04\n        /* \"#utility.yul\":5239:5254   */\n      mstore\n        /* \"#utility.yul\":5273:5277   */\n      0x24\n        /* \"#utility.yul\":5270:5271   */\n      0x00\n        /* \"#utility.yul\":5263:5278   */\n      revert\n        /* \"#utility.yul\":5289:5414   */\n    tag_141:\n        /* \"#utility.yul\":5329:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5358   */\n      dup3\n        /* \"#utility.yul\":5354:5355   */\n      dup3\n        /* \"#utility.yul\":5351:5359   */\n      lt\n        /* \"#utility.yul\":5348:5382   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5362:5380   */\n      tag_444\n      tag_392\n      jump\t// in\n    tag_444:\n      pop\n        /* \"#utility.yul\":5399:5408   */\n      sub\n      swap1\n        /* \"#utility.yul\":5289:5414   */\n      jump\t// out\n        /* \"#utility.yul\":6033:6201   */\n    tag_203:\n        /* \"#utility.yul\":6073:6080   */\n      0x00\n        /* \"#utility.yul\":6139:6140   */\n      dup2\n        /* \"#utility.yul\":6135:6136   */\n      0x00\n        /* \"#utility.yul\":6131:6137   */\n      not\n        /* \"#utility.yul\":6127:6141   */\n      div\n        /* \"#utility.yul\":6124:6125   */\n      dup4\n        /* \"#utility.yul\":6121:6142   */\n      gt\n        /* \"#utility.yul\":6116:6117   */\n      dup3\n        /* \"#utility.yul\":6109:6118   */\n      iszero\n        /* \"#utility.yul\":6102:6119   */\n      iszero\n        /* \"#utility.yul\":6098:6143   */\n      and\n        /* \"#utility.yul\":6095:6166   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":6146:6164   */\n      tag_449\n      tag_392\n      jump\t// in\n    tag_449:\n      pop\n        /* \"#utility.yul\":6186:6195   */\n      mul\n      swap1\n        /* \"#utility.yul\":6033:6201   */\n      jump\t// out\n        /* \"#utility.yul\":6206:6423   */\n    tag_205:\n        /* \"#utility.yul\":6246:6247   */\n      0x00\n        /* \"#utility.yul\":6272:6273   */\n      dup3\n        /* \"#utility.yul\":6262:6394   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":6316:6326   */\n      0x4e487b71\n        /* \"#utility.yul\":6311:6314   */\n      0xe0\n        /* \"#utility.yul\":6307:6327   */\n      shl\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6297:6328   */\n      mstore\n        /* \"#utility.yul\":6351:6355   */\n      0x12\n        /* \"#utility.yul\":6348:6349   */\n      0x04\n        /* \"#utility.yul\":6341:6356   */\n      mstore\n        /* \"#utility.yul\":6379:6383   */\n      0x24\n        /* \"#utility.yul\":6376:6377   */\n      0x00\n        /* \"#utility.yul\":6369:6384   */\n      revert\n        /* \"#utility.yul\":6262:6394   */\n    tag_451:\n      pop\n        /* \"#utility.yul\":6408:6417   */\n      div\n      swap1\n        /* \"#utility.yul\":6206:6423   */\n      jump\t// out\n        /* \"#utility.yul\":7191:7319   */\n    tag_245:\n        /* \"#utility.yul\":7231:7234   */\n      0x00\n        /* \"#utility.yul\":7262:7263   */\n      dup3\n        /* \"#utility.yul\":7258:7264   */\n      not\n        /* \"#utility.yul\":7255:7256   */\n      dup3\n        /* \"#utility.yul\":7252:7265   */\n      gt\n        /* \"#utility.yul\":7249:7288   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":7268:7286   */\n      tag_456\n      tag_392\n      jump\t// in\n    tag_456:\n      pop\n        /* \"#utility.yul\":7304:7313   */\n      add\n      swap1\n        /* \"#utility.yul\":7191:7319   */\n      jump\t// out\n        /* \"#utility.yul\":7964:8371   */\n    tag_276:\n        /* \"#utility.yul\":8166:8168   */\n      0x20\n        /* \"#utility.yul\":8148:8169   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8205:8207   */\n      0x2b\n        /* \"#utility.yul\":8185:8203   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8178:8208   */\n      mstore\n        /* \"#utility.yul\":8244:8278   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":8239:8241   */\n      0x40\n        /* \"#utility.yul\":8224:8242   */\n      dup3\n      add\n        /* \"#utility.yul\":8217:8279   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":8310:8312   */\n      0x60\n        /* \"#utility.yul\":8295:8313   */\n      dup3\n      add\n        /* \"#utility.yul\":8288:8329   */\n      mstore\n        /* \"#utility.yul\":8361:8364   */\n      0x80\n        /* \"#utility.yul\":8346:8365   */\n      add\n      swap1\n        /* \"#utility.yul\":7964:8371   */\n      jump\t// out\n        /* \"#utility.yul\":9462:9739   */\n    tag_345:\n        /* \"#utility.yul\":9529:9535   */\n      0x00\n        /* \"#utility.yul\":9582:9584   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9561:9568   */\n      dup5\n        /* \"#utility.yul\":9557:9580   */\n      sub\n        /* \"#utility.yul\":9553:9585   */\n      slt\n        /* \"#utility.yul\":9550:9602   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":9598:9599   */\n      0x00\n        /* \"#utility.yul\":9595:9596   */\n      dup1\n        /* \"#utility.yul\":9588:9600   */\n      revert\n        /* \"#utility.yul\":9550:9602   */\n    tag_464:\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9640   */\n      mload\n        /* \"#utility.yul\":9683:9688   */\n      dup1\n        /* \"#utility.yul\":9676:9689   */\n      iszero\n        /* \"#utility.yul\":9669:9690   */\n      iszero\n        /* \"#utility.yul\":9662:9667   */\n      dup2\n        /* \"#utility.yul\":9659:9691   */\n      eq\n        /* \"#utility.yul\":9649:9709   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":9705:9706   */\n      0x00\n        /* \"#utility.yul\":9702:9703   */\n      dup1\n        /* \"#utility.yul\":9695:9707   */\n      revert\n        /* \"#utility.yul\":10562:10836   */\n    tag_357:\n        /* \"#utility.yul\":10691:10694   */\n      0x00\n        /* \"#utility.yul\":10729:10735   */\n      dup3\n        /* \"#utility.yul\":10723:10736   */\n      mload\n        /* \"#utility.yul\":10745:10798   */\n      tag_469\n        /* \"#utility.yul\":10791:10797   */\n      dup2\n        /* \"#utility.yul\":10786:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10783   */\n      0x20\n        /* \"#utility.yul\":10771:10777   */\n      dup8\n        /* \"#utility.yul\":10767:10784   */\n      add\n        /* \"#utility.yul\":10745:10798   */\n      tag_390\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10814:10830   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":10562:10836   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dde11f5f02514bdd821e60e7feb74ac0ba74eec965dbbaf011e82fae1f19cd9464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611967806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b4bf36b21161007c578063b4bf36b2146102c0578063b6b55f25146102d1578063c96f0e01146102e4578063f2fde38b1461030d578063f3fef3a314610320578063fad834841461033357600080fd5b80638da5cb5b146102655780639f1d926714610276578063aba317a914610289578063b0f479a11461029c578063b36684ac146102ad57600080fd5b8063340ac20f1161010a578063340ac20f146101cd5780634226626a146101e2578063463fd1af1461020b5780635c975abb1461021e5780635d602c0014610234578063715018a61461025d57600080fd5b80630c632bbe146101475780631101596c1461017157806317d7de7c14610192578063223888c1146101a75780632f4f21e2146101ba575b600080fd5b60ca546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61018461017f366004611556565b61033b565b604051908152602001610168565b61019a6103af565b60405161016891906115b5565b6101846101b53660046115e8565b610441565b6101846101c8366004611603565b610554565b6101e06101db3660046115e8565b6105b2565b005b6101846101f03660046115e8565b6001600160a01b0316600090815260cd602052604090205490565b6101e0610219366004611643565b61060e565b60655460ff166040519015158152602001610168565b6101846102423660046115e8565b6001600160a01b0316600090815260ce602052604090205490565b6101e0610776565b6033546001600160a01b0316610154565b610184610284366004611715565b61078a565b6101846102973660046115e8565b6107f6565b60cc546001600160a01b0316610154565b6101846102bb3660046115e8565b6108b2565b60cb546001600160a01b0316610154565b6101846102df366004611751565b6108f1565b6101846102f23660046115e8565b6001600160a01b0316600090815260cf602052604090205490565b6101e061031b3660046115e8565b610925565b61018461032e366004611603565b61099e565b6101846109d3565b60cc546000906001600160a01b031633146103715760405162461bcd60e51b81526004016103689061176a565b60405180910390fd5b600260975414156103945760405162461bcd60e51b815260040161036890611797565b60026097556103a38383610a45565b60016097559392505050565b606060c980546103be906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea906117ce565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b5050505050905090565b60405163aba317a960e01b81526001600160a01b03821660048201526000908190309063aba317a990602401602060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190611809565b6001600160a01b038416600090815260ce602052604090205490915081106104d95750600092915050565b6001600160a01b038316600090815260ce60205260408120546104fd908390611838565b6001600160a01b038516600090815260cd60205260409020549091508111610529575060009392505050565b6001600160a01b038416600090815260cd602052604090205461054c9082611838565b949350505050565b6000600260975414156105795760405162461bcd60e51b815260040161036890611797565b600260975560cc546001600160a01b031633146105a85760405162461bcd60e51b81526004016103689061176a565b6103a38383610b9c565b6105ba610d5d565b60cc80546001600160a01b0319166001600160a01b0383169081179091556040519081527f1085cec9a5108943412475d298086ae4d0abf09cfad47b05436b89fe887a820c9060200160405180910390a150565b600054610100900460ff161580801561062e5750600054600160ff909116105b806106485750303b158015610648575060005460ff166001145b6106ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610368565b6000805460ff1916600117905580156106ce576000805461ff0019166101001790555b6106d6610db7565b6106de610de6565b6106e6610e15565b83516106f99060c99060208701906114a1565b5060ca80546001600160a01b038086166001600160a01b03199283161790925560cb8054928516929091169190911790558015610770576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b61077e610d5d565b6107886000610e44565b565b6000600260975414156107af5760405162461bcd60e51b815260040161036890611797565b600260975560cc546001600160a01b031633146107de5760405162461bcd60e51b81526004016103689061176a565b6107e9848484610e96565b6001609755949350505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611809565b6001600160a01b038416600090815260cf6020526040902054909150670de0b6b3a7640000906108a190839061184f565b6108ab919061186e565b9392505050565b6000600260975414156108d75760405162461bcd60e51b815260040161036890611797565b60026097556108e63383610a45565b600160975592915050565b6000600260975414156109165760405162461bcd60e51b815260040161036890611797565b60026097556108e63383610b9c565b61092d610d5d565b6001600160a01b0381166109925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610368565b61099b81610e44565b50565b6000600260975414156109c35760405162461bcd60e51b815260040161036890611797565b60026097556103a3338484610e96565b60cb546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611809565b905090565b60405163223888c160e01b81526001600160a01b03831660048201526000908190309063223888c190602401602060405180830381865afa158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab29190611809565b905060008111610b045760405162461bcd60e51b815260206004820152601b60248201527f686173206e6f7420676f74207969656c647320746f20636c61696d00000000006044820152606401610368565b6001600160a01b038416600090815260cd602052604081208054839290610b2c908490611890565b909155505060cb54610b48906001600160a01b0316848361117e565b826001600160a01b0316846001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd399268383604051610b8d91815260200190565b60405180910390a39392505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611809565b60cb54909150610c31906001600160a01b03163330866111e6565b600081610c4685670de0b6b3a764000061184f565b610c50919061186e565b6001600160a01b038616600090815260ce6020526040812080549293508692909190610c7d908490611890565b90915550506001600160a01b038516600090815260cf602052604081208054839290610caa908490611890565b909155505060ca546040516340c10f1960e01b81526001600160a01b03878116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b158015610cfd57600080fd5b505af1158015610d11573d6000803e3d6000fd5b50506040518381526001600160a01b03881692503391507f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060200160405180910390a3949350505050565b6033546001600160a01b031633146107885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610368565b600054610100900460ff16610dde5760405162461bcd60e51b8152600401610368906118a8565b61078861121e565b600054610100900460ff16610e0d5760405162461bcd60e51b8152600401610368906118a8565b61078861124e565b600054610100900460ff16610e3c5760405162461bcd60e51b8152600401610368906118a8565b610788611281565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190611809565b90506000670de0b6b3a7640000610f27838661184f565b610f31919061186e565b60cb546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa29190611809565b1015610ff05760405162461bcd60e51b815260206004820152601c60248201527f6e6f74207375636820616d6f756e7420696e20746865207661756c74000000006044820152606401610368565b6001600160a01b038616600090815260cf6020526040902054848110156110505760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610368565b6001600160a01b038716600090815260cf602052604081208054879290611078908490611838565b909155505060ca54604051632770a7eb60e21b81526001600160a01b0389811660048301526024820188905290911690639dc29fac90604401600060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050506001600160a01b038716600090815260ce60205260408120805484929061110b908490611838565b909155505060cb54611127906001600160a01b0316878461117e565b856001600160a01b0316876001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8460405161116c91815260200190565b60405180910390a35095945050505050565b6040516001600160a01b0383166024820152604481018290526111e190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112af565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107709085906323b872dd60e01b906084016111aa565b600054610100900460ff166112455760405162461bcd60e51b8152600401610368906118a8565b61078833610e44565b600054610100900460ff166112755760405162461bcd60e51b8152600401610368906118a8565b6065805460ff19169055565b600054610100900460ff166112a85760405162461bcd60e51b8152600401610368906118a8565b6001609755565b6000611304826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113819092919063ffffffff16565b8051909150156111e1578080602001905181019061132291906118f3565b6111e15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610368565b606061054c848460008585600080866001600160a01b031685876040516113a89190611915565b60006040518083038185875af1925050503d80600081146113e5576040519150601f19603f3d011682016040523d82523d6000602084013e6113ea565b606091505b50915091506113fb87838387611406565b979650505050505050565b6060831561147257825161146b576001600160a01b0385163b61146b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610368565b508161054c565b61054c83838151156114875781518083602001fd5b8060405162461bcd60e51b815260040161036891906115b5565b8280546114ad906117ce565b90600052602060002090601f0160209004810192826114cf5760008555611515565b82601f106114e857805160ff1916838001178555611515565b82800160010185558215611515579182015b828111156115155782518255916020019190600101906114fa565b50611521929150611525565b5090565b5b808211156115215760008155600101611526565b80356001600160a01b038116811461155157600080fd5b919050565b6000806040838503121561156957600080fd5b6115728361153a565b91506115806020840161153a565b90509250929050565b60005b838110156115a457818101518382015260200161158c565b838111156107705750506000910152565b60208152600082518060208401526115d4816040850160208701611589565b601f01601f19169190910160400192915050565b6000602082840312156115fa57600080fd5b6108ab8261153a565b6000806040838503121561161657600080fd5b61161f8361153a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561165857600080fd5b833567ffffffffffffffff8082111561167057600080fd5b818601915086601f83011261168457600080fd5b8135818111156116965761169661162d565b604051601f8201601f19908116603f011681019083821181831017156116be576116be61162d565b816040528281528960208487010111156116d757600080fd5b8260208601602083013760006020848301015280975050505050506116fe6020850161153a565b915061170c6040850161153a565b90509250925092565b60008060006060848603121561172a57600080fd5b6117338461153a565b92506117416020850161153a565b9150604084013590509250925092565b60006020828403121561176357600080fd5b5035919050565b602080825260139082015272149bdd5d195c8e881b9bdd08185b1b1bddd959606a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600181811c908216806117e257607f821691505b6020821081141561180357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561181b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561184a5761184a611822565b500390565b600081600019048311821515161561186957611869611822565b500290565b60008261188b57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156118a3576118a3611822565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561190557600080fd5b815180151581146108ab57600080fd5b60008251611927818460208701611589565b919091019291505056fea2646970667358221220dde11f5f02514bdd821e60e7feb74ac0ba74eec965dbbaf011e82fae1f19cd9464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1967 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB4BF36B2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB4BF36B2 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC96F0E01 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xFAD83484 EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9F1D9267 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xABA317A9 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB36684AC EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x340AC20F GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x340AC20F EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x4226626A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x463FD1AF EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5D602C00 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC632BBE EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1101596C EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x223888C1 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x184 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x3A3 DUP4 DUP4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC9 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x437 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x437 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xABA317A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0xABA317A9 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x4D9 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4FD SWAP1 DUP4 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x529 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x54C SWAP1 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x3A3 DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xD5D JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1085CEC9A5108943412475D298086AE4D0ABF09CFAD47B05436B89FE887A820C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x62E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x648 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6D6 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x6DE PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0xE15 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x6F9 SWAP1 PUSH1 0xC9 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x14A1 JUMP JUMPDEST POP PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCB DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x77E PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x788 PUSH1 0x0 PUSH2 0xE44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x7E9 DUP5 DUP5 DUP5 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x8A1 SWAP1 DUP4 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8E6 CALLER DUP4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8E6 CALLER DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x92D PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0xE44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x3A3 CALLER DUP5 DUP5 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223888C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x223888C1 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686173206E6F7420676F74207969656C647320746F20636C61696D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB2C SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCB SLOAD PUSH2 0xB48 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0x117E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0xCB SLOAD SWAP1 SWAP2 POP PUSH2 0xC31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xC46 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC7D SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCAA SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF27 DUP4 DUP7 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST LT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207375636820616D6F756E7420696E20746865207661756C7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1078 SWAP1 DUP5 SWAP1 PUSH2 0x1838 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x110B SWAP1 DUP5 SWAP1 PUSH2 0x1838 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCB SLOAD PUSH2 0x1127 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 PUSH2 0x117E JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0x116C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11E1 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x12AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x770 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 CALLER PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1381 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1322 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x54C DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13FB DUP8 DUP4 DUP4 DUP8 PUSH2 0x1406 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1472 JUMPI DUP3 MLOAD PUSH2 0x146B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST POP DUP2 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x54C DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1487 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x14AD SWAP1 PUSH2 0x17CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x14CF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1515 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x14E8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1515 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1515 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1515 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x14FA JUMP JUMPDEST POP PUSH2 0x1521 SWAP3 SWAP2 POP PUSH2 0x1525 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1526 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1572 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x1580 PUSH1 0x20 DUP5 ADD PUSH2 0x153A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x158C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x770 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161F DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1696 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BE PUSH2 0x162D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH2 0x16FE PUSH1 0x20 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x170C PUSH1 0x40 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1733 DUP5 PUSH2 0x153A JUMP JUMPDEST SWAP3 POP PUSH2 0x1741 PUSH1 0x20 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149BDD5D195C8E881B9BDD08185B1B1BDDD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1803 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x184A JUMPI PUSH2 0x184A PUSH2 0x1822 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x1822 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x188B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18A3 JUMPI PUSH2 0x18A3 PUSH2 0x1822 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1927 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE1 0x1F 0x5F MUL MLOAD 0x4B 0xDD DUP3 0x1E PUSH1 0xE7 INVALID 0xB7 0x4A 0xC0 0xBA PUSH21 0xEEC965DBBAF011E82FAE1F19CD9464736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "501:6218:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 3511,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 4638,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_313": {
									"entryPoint": 3558,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_323": {
									"entryPoint": 4686,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_432": {
									"entryPoint": 3605,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_442": {
									"entryPoint": 4737,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1147": {
									"entryPoint": 4783,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 3421,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_claimYields_1759": {
									"entryPoint": 2629,
									"id": 1759,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_deposit_1676": {
									"entryPoint": 2972,
									"id": 1676,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1477": {
									"entryPoint": null,
									"id": 1477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 3652,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_withdraw_1891": {
									"entryPoint": 3734,
									"id": 1891,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@changeRouter_2030": {
									"entryPoint": 1458,
									"id": 2030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimYieldsFor_1696": {
									"entryPoint": 827,
									"id": 1696,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimYields_1713": {
									"entryPoint": 2226,
									"id": 1713,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositFor_1609": {
									"entryPoint": 1364,
									"id": 1609,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1589": {
									"entryPoint": 2289,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_1302": {
									"entryPoint": null,
									"id": 1302,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1238": {
									"entryPoint": 4993,
									"id": 1238,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAbnbcAddress_2060": {
									"entryPoint": null,
									"id": 2060,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCeTokenBalanceOf_1990": {
									"entryPoint": null,
									"id": 1990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCeToken_2049": {
									"entryPoint": null,
									"id": 2049,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getClaimedOf_2014": {
									"entryPoint": null,
									"id": 2014,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDepositOf_2002": {
									"entryPoint": null,
									"id": 2002,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getName_2038": {
									"entryPoint": 943,
									"id": 2038,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrincipalOf_1930": {
									"entryPoint": 2038,
									"id": 1930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRouter_2071": {
									"entryPoint": null,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalAmountInVault_1906": {
									"entryPoint": 2515,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getYieldFor_1978": {
									"entryPoint": 1089,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1572": {
									"entryPoint": 1550,
									"id": 1572,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_1166": {
									"entryPoint": null,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_348": {
									"entryPoint": null,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 1910,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_925": {
									"entryPoint": 4582,
									"id": 925,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_899": {
									"entryPoint": 4478,
									"id": 899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 2341,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1433": {
									"entryPoint": 5126,
									"id": 1433,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawFor_1802": {
									"entryPoint": 1930,
									"id": 1802,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1779": {
									"entryPoint": 2462,
									"id": 1779,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_addresst_address": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1432138692b33293f20a75ffe57a3eba98538287d100becd2f1bda674fecadab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_152a1874e8b8686d92038bc825d64408733f94538f9b3912f126fd9a606d35ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79777f5e6da7b07890e518d0a15d3273728dbeb54b87e6f0257c2ad451f585f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11196:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "271:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "281:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "290:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "373:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "385:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "332:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "343:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "358:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "363:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "354:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "354:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "367:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "350:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "350:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "339:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "339:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "329:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "329:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:50:13"
															},
															"nodeType": "YulIf",
															"src": "319:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "250:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "261:5:13",
														"type": ""
													}
												],
												"src": "222:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "533:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "542:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "545:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "535:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "535:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "535:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "508:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "517:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "504:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "529:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:32:13"
															},
															"nodeType": "YulIf",
															"src": "497:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "558:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "587:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "568:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "568:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "606:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "650:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "616:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "606:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "456:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "468:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "476:6:13",
														"type": ""
													}
												],
												"src": "400:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "776:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "788:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "799:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "776:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "818:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "811:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "811:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "746:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "757:4:13",
														"type": ""
													}
												],
												"src": "665:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "900:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "910:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "919:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "914:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "979:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1004:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1009:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1000:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1000:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1023:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1028:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1019:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1019:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1013:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1013:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "993:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "993:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "993:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "940:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "937:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "951:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "953:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "962:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "965:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "958:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "958:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "953:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "933:3:13",
																"statements": []
															},
															"src": "929:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1081:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1086:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1095:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1057:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1060:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1054:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:13:13"
															},
															"nodeType": "YulIf",
															"src": "1051:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "878:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "883:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "888:6:13",
														"type": ""
													}
												],
												"src": "847:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1231:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1248:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1241:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1271:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1291:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1307:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1384:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1350:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1425:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1441:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1460:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1468:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1456:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1456:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1477:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1473:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1473:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1452:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1437:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1433:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1425:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1200:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1211:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1222:4:13",
														"type": ""
													}
												],
												"src": "1110:383:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1568:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1614:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1623:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1626:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1616:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1616:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1616:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1589:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1598:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1585:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1585:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1581:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:32:13"
															},
															"nodeType": "YulIf",
															"src": "1578:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1639:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1668:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1649:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1534:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1545:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1557:6:13",
														"type": ""
													}
												],
												"src": "1498:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1776:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1822:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1806:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1793:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1793:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1789:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:32:13"
															},
															"nodeType": "YulIf",
															"src": "1786:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1847:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1857:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1857:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1895:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1933:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1905:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1734:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1745:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1757:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1765:6:13",
														"type": ""
													}
												],
												"src": "1689:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1980:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2000:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2037:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2040:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2030:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2030:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1948:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2194:966:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2240:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2249:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2242:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2242:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2215:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:32:13"
															},
															"nodeType": "YulIf",
															"src": "2204:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2265:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2292:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2279:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2269:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2311:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2321:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2315:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2354:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2362:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2351:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:14:13"
															},
															"nodeType": "YulIf",
															"src": "2348:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2391:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2405:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2401:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2395:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2471:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2473:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2473:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2473:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2450:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2454:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2446:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2446:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2461:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2442:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2442:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:35:13"
															},
															"nodeType": "YulIf",
															"src": "2432:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2496:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2519:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2506:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2500:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2545:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2547:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2547:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2537:2:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2541:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:10:13"
															},
															"nodeType": "YulIf",
															"src": "2531:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2576:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2590:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2586:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2580:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2602:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2616:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2606:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2634:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2656:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2680:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2684:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2676:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2676:13:13"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2691:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2672:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2672:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2696:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2668:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2668:31:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2701:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2638:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2764:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2766:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2723:10:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2720:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2743:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2740:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2717:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:46:13"
															},
															"nodeType": "YulIf",
															"src": "2714:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2802:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2806:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2841:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2826:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2892:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2894:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2867:2:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2871:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2863:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2863:11:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2876:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2883:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2856:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:35:13"
															},
															"nodeType": "YulIf",
															"src": "2853:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2942:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2953:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2957:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2949:13:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2964:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2917:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2991:6:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2999:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2987:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2987:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3011:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2976:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3022:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3032:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3047:50:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3080:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3091:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:20:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3057:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:40:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3106:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3139:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3150:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3135:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3135:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3116:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:38:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2144:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2155:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2167:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2175:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2183:6:13",
														"type": ""
													}
												],
												"src": "2080:1080:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3260:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3270:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3270:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3337:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3330:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3330:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3323:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3305:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3305:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3229:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3240:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3251:4:13",
														"type": ""
													}
												],
												"src": "3165:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3507:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3516:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3519:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3509:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3482:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3474:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:32:13"
															},
															"nodeType": "YulIf",
															"src": "3471:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3532:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3561:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3542:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3580:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3613:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3624:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3609:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3590:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3637:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3675:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3660:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3647:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3411:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3422:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3434:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3442:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3450:6:13",
														"type": ""
													}
												],
												"src": "3357:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3760:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3806:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3815:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3808:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3808:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3808:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3781:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3790:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3777:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3802:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3773:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:32:13"
															},
															"nodeType": "YulIf",
															"src": "3770:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3831:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3854:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3841:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3749:6:13",
														"type": ""
													}
												],
												"src": "3690:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4049:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4066:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4077:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4059:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4100:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4111:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4116:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4089:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4089:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4150:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:18:13"
																	},
																	{
																		"hexValue": "526f757465723a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4155:21:13",
																		"type": "",
																		"value": "Router: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4186:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4198:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4186:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79777f5e6da7b07890e518d0a15d3273728dbeb54b87e6f0257c2ad451f585f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4026:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4040:4:13",
														"type": ""
													}
												],
												"src": "3875:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4397:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4414:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4407:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4448:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4459:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4444:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4437:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4437:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4498:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4483:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4503:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4476:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4546:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4558:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4569:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4546:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4374:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4388:4:13",
														"type": ""
													}
												],
												"src": "4223:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4638:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4648:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4662:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4665:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4679:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4709:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4715:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4683:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4756:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4758:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4772:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4780:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4768:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4768:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4758:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4736:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:26:13"
															},
															"nodeType": "YulIf",
															"src": "4726:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4846:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4867:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4874:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4879:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4870:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4870:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4860:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4860:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4911:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4914:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4904:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4904:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4904:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4939:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4942:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4932:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4932:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4932:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4802:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4825:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4822:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4799:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:38:13"
															},
															"nodeType": "YulIf",
															"src": "4796:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4618:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4627:6:13",
														"type": ""
													}
												],
												"src": "4583:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5049:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5095:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5070:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5079:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5066:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5066:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5091:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5062:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:32:13"
															},
															"nodeType": "YulIf",
															"src": "5059:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5120:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5136:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5130:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5120:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5015:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5026:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5038:6:13",
														"type": ""
													}
												],
												"src": "4968:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5189:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5213:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5218:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5249:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5157:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5338:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5360:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5362:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5362:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5362:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5354:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5357:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5351:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:8:13"
															},
															"nodeType": "YulIf",
															"src": "5348:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5391:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5403:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5406:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5391:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5320:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5323:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5329:4:13",
														"type": ""
													}
												],
												"src": "5289:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5593:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5610:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5621:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5655:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5660:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5633:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5633:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5699:34:13",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5754:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5765:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5750:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5750:18:13"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5770:16:13",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5819:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5804:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5804:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5796:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5570:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5584:4:13",
														"type": ""
													}
												],
												"src": "5419:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5941:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5951:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5963:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5974:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5951:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5993:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6008:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5986:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5910:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5921:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5932:4:13",
														"type": ""
													}
												],
												"src": "5834:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6085:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6144:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6146:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6146:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6146:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6116:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6109:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6109:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6102:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6102:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6124:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6135:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6131:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6131:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6139:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6127:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6127:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6121:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:45:13"
															},
															"nodeType": "YulIf",
															"src": "6095:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6175:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6190:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6193:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6186:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6175:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6064:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6067:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6073:7:13",
														"type": ""
													}
												],
												"src": "6033:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6252:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6283:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6311:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6316:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6307:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6307:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6297:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6297:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6348:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6351:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6341:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6341:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6376:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6379:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6369:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6369:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6272:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6265:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:9:13"
															},
															"nodeType": "YulIf",
															"src": "6262:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6403:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6412:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6415:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6403:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6237:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6240:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6246:1:13",
														"type": ""
													}
												],
												"src": "6206:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6602:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6619:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6612:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6653:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6664:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6669:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6642:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6692:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6703:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6688:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6688:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6708:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6681:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6681:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6774:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6779:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6752:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6752:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6752:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6797:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6820:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6805:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6797:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6579:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6593:4:13",
														"type": ""
													}
												],
												"src": "6428:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7009:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7026:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7019:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7019:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7060:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7071:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7056:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7056:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7049:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7049:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7099:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7110:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7095:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:18:13"
																	},
																	{
																		"hexValue": "686173206e6f7420676f74207969656c647320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7115:29:13",
																		"type": "",
																		"value": "has not got yields to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7088:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7162:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7162:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7154:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_152a1874e8b8686d92038bc825d64408733f94538f9b3912f126fd9a606d35ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6986:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7000:4:13",
														"type": ""
													}
												],
												"src": "6835:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7239:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7266:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7268:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7268:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7268:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7255:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7262:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7258:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7258:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7252:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7252:13:13"
															},
															"nodeType": "YulIf",
															"src": "7249:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7297:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7308:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7311:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7304:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7222:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7225:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7231:3:13",
														"type": ""
													}
												],
												"src": "7191:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7463:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7475:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7463:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7505:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7520:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7536:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7541:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7532:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7532:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7545:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7528:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7528:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7516:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7569:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7580:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7565:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7565:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7585:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7558:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7414:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7425:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7433:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7444:4:13",
														"type": ""
													}
												],
												"src": "7324:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7777:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7794:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7787:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7839:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7844:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7817:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7867:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7878:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7863:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7863:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7883:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7856:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7856:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7927:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7939:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7950:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7935:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7935:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7927:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7754:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7768:4:13",
														"type": ""
													}
												],
												"src": "7603:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8138:233:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8155:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8166:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8189:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8185:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8205:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8178:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8228:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8239:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8244:34:13",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8299:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8310:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8295:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8295:18:13"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8315:13:13",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8288:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8338:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8350:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8361:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8346:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8338:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8115:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8129:4:13",
														"type": ""
													}
												],
												"src": "7964:407:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8550:178:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8567:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8601:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8612:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8597:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8640:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8651:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8636:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8636:18:13"
																	},
																	{
																		"hexValue": "6e6f74207375636820616d6f756e7420696e20746865207661756c74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8656:30:13",
																		"type": "",
																		"value": "not such amount in the vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8629:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8629:58:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8696:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8708:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8704:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8696:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1432138692b33293f20a75ffe57a3eba98538287d100becd2f1bda674fecadab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8527:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8541:4:13",
														"type": ""
													}
												],
												"src": "8376:352:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8924:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8935:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8917:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8958:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8969:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8954:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8954:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8974:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8947:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8947:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8947:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8997:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9008:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8993:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8993:18:13"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9013:22:13",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8986:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9045:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9053:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9053:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9045:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8884:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8898:4:13",
														"type": ""
													}
												],
												"src": "8733:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9239:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9249:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9261:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9272:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9257:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9249:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9284:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9302:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9307:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9298:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9311:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9294:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9294:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9288:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9329:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9344:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9352:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9340:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9340:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9322:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9376:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9387:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9372:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9372:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9396:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9404:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9392:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9392:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9365:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9365:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9365:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9428:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9444:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9192:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9203:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9211:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9219:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9230:4:13",
														"type": ""
													}
												],
												"src": "9082:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9540:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9586:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9595:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9598:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9588:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9588:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9588:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9561:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9557:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9553:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9553:32:13"
															},
															"nodeType": "YulIf",
															"src": "9550:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9611:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9630:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9624:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9615:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9693:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9702:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9705:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9695:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9695:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9695:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9662:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9683:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9676:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9676:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9669:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9669:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9659:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:40:13"
															},
															"nodeType": "YulIf",
															"src": "9649:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9718:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9728:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9718:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9506:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9517:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9529:6:13",
														"type": ""
													}
												],
												"src": "9462:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9918:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9935:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9946:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9928:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9928:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9928:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9969:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9980:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9965:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9965:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9985:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9958:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9958:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10008:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10019:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10004:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:18:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10024:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9997:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9997:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10090:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10075:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10075:18:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10095:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10068:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10068:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10068:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10117:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10129:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10140:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10117:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9895:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9909:4:13",
														"type": ""
													}
												],
												"src": "9744:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10329:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10346:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10357:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10380:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10391:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10376:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10376:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10396:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10369:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10430:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10415:18:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10435:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10408:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10490:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10501:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10486:18:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10506:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10479:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10524:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10536:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10547:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10524:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10306:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10320:4:13",
														"type": ""
													}
												],
												"src": "10155:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10699:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10709:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10729:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10723:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10713:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10771:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10779:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10786:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10791:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10745:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10745:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10807:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10818:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10814:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10814:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10807:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10675:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10691:3:13",
														"type": ""
													}
												],
												"src": "10562:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11015:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11032:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11043:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11025:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11025:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11025:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11066:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11077:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11062:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11082:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11055:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11055:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11055:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11105:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11116:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11101:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11101:18:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11121:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11094:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11094:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11162:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11174:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11185:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11170:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11162:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10992:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11006:4:13",
														"type": ""
													}
												],
												"src": "10841:353:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := abi_decode_address(add(headStart, 0x20))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_79777f5e6da7b07890e518d0a15d3273728dbeb54b87e6f0257c2ad451f585f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Router: not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_152a1874e8b8686d92038bc825d64408733f94538f9b3912f126fd9a606d35ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"has not got yields to claim\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1432138692b33293f20a75ffe57a3eba98538287d100becd2f1bda674fecadab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"not such amount in the vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b4bf36b21161007c578063b4bf36b2146102c0578063b6b55f25146102d1578063c96f0e01146102e4578063f2fde38b1461030d578063f3fef3a314610320578063fad834841461033357600080fd5b80638da5cb5b146102655780639f1d926714610276578063aba317a914610289578063b0f479a11461029c578063b36684ac146102ad57600080fd5b8063340ac20f1161010a578063340ac20f146101cd5780634226626a146101e2578063463fd1af1461020b5780635c975abb1461021e5780635d602c0014610234578063715018a61461025d57600080fd5b80630c632bbe146101475780631101596c1461017157806317d7de7c14610192578063223888c1146101a75780632f4f21e2146101ba575b600080fd5b60ca546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61018461017f366004611556565b61033b565b604051908152602001610168565b61019a6103af565b60405161016891906115b5565b6101846101b53660046115e8565b610441565b6101846101c8366004611603565b610554565b6101e06101db3660046115e8565b6105b2565b005b6101846101f03660046115e8565b6001600160a01b0316600090815260cd602052604090205490565b6101e0610219366004611643565b61060e565b60655460ff166040519015158152602001610168565b6101846102423660046115e8565b6001600160a01b0316600090815260ce602052604090205490565b6101e0610776565b6033546001600160a01b0316610154565b610184610284366004611715565b61078a565b6101846102973660046115e8565b6107f6565b60cc546001600160a01b0316610154565b6101846102bb3660046115e8565b6108b2565b60cb546001600160a01b0316610154565b6101846102df366004611751565b6108f1565b6101846102f23660046115e8565b6001600160a01b0316600090815260cf602052604090205490565b6101e061031b3660046115e8565b610925565b61018461032e366004611603565b61099e565b6101846109d3565b60cc546000906001600160a01b031633146103715760405162461bcd60e51b81526004016103689061176a565b60405180910390fd5b600260975414156103945760405162461bcd60e51b815260040161036890611797565b60026097556103a38383610a45565b60016097559392505050565b606060c980546103be906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea906117ce565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b5050505050905090565b60405163aba317a960e01b81526001600160a01b03821660048201526000908190309063aba317a990602401602060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190611809565b6001600160a01b038416600090815260ce602052604090205490915081106104d95750600092915050565b6001600160a01b038316600090815260ce60205260408120546104fd908390611838565b6001600160a01b038516600090815260cd60205260409020549091508111610529575060009392505050565b6001600160a01b038416600090815260cd602052604090205461054c9082611838565b949350505050565b6000600260975414156105795760405162461bcd60e51b815260040161036890611797565b600260975560cc546001600160a01b031633146105a85760405162461bcd60e51b81526004016103689061176a565b6103a38383610b9c565b6105ba610d5d565b60cc80546001600160a01b0319166001600160a01b0383169081179091556040519081527f1085cec9a5108943412475d298086ae4d0abf09cfad47b05436b89fe887a820c9060200160405180910390a150565b600054610100900460ff161580801561062e5750600054600160ff909116105b806106485750303b158015610648575060005460ff166001145b6106ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610368565b6000805460ff1916600117905580156106ce576000805461ff0019166101001790555b6106d6610db7565b6106de610de6565b6106e6610e15565b83516106f99060c99060208701906114a1565b5060ca80546001600160a01b038086166001600160a01b03199283161790925560cb8054928516929091169190911790558015610770576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b61077e610d5d565b6107886000610e44565b565b6000600260975414156107af5760405162461bcd60e51b815260040161036890611797565b600260975560cc546001600160a01b031633146107de5760405162461bcd60e51b81526004016103689061176a565b6107e9848484610e96565b6001609755949350505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611809565b6001600160a01b038416600090815260cf6020526040902054909150670de0b6b3a7640000906108a190839061184f565b6108ab919061186e565b9392505050565b6000600260975414156108d75760405162461bcd60e51b815260040161036890611797565b60026097556108e63383610a45565b600160975592915050565b6000600260975414156109165760405162461bcd60e51b815260040161036890611797565b60026097556108e63383610b9c565b61092d610d5d565b6001600160a01b0381166109925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610368565b61099b81610e44565b50565b6000600260975414156109c35760405162461bcd60e51b815260040161036890611797565b60026097556103a3338484610e96565b60cb546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611809565b905090565b60405163223888c160e01b81526001600160a01b03831660048201526000908190309063223888c190602401602060405180830381865afa158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab29190611809565b905060008111610b045760405162461bcd60e51b815260206004820152601b60248201527f686173206e6f7420676f74207969656c647320746f20636c61696d00000000006044820152606401610368565b6001600160a01b038416600090815260cd602052604081208054839290610b2c908490611890565b909155505060cb54610b48906001600160a01b0316848361117e565b826001600160a01b0316846001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd399268383604051610b8d91815260200190565b60405180910390a39392505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611809565b60cb54909150610c31906001600160a01b03163330866111e6565b600081610c4685670de0b6b3a764000061184f565b610c50919061186e565b6001600160a01b038616600090815260ce6020526040812080549293508692909190610c7d908490611890565b90915550506001600160a01b038516600090815260cf602052604081208054839290610caa908490611890565b909155505060ca546040516340c10f1960e01b81526001600160a01b03878116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b158015610cfd57600080fd5b505af1158015610d11573d6000803e3d6000fd5b50506040518381526001600160a01b03881692503391507f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060200160405180910390a3949350505050565b6033546001600160a01b031633146107885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610368565b600054610100900460ff16610dde5760405162461bcd60e51b8152600401610368906118a8565b61078861121e565b600054610100900460ff16610e0d5760405162461bcd60e51b8152600401610368906118a8565b61078861124e565b600054610100900460ff16610e3c5760405162461bcd60e51b8152600401610368906118a8565b610788611281565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190611809565b90506000670de0b6b3a7640000610f27838661184f565b610f31919061186e565b60cb546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa29190611809565b1015610ff05760405162461bcd60e51b815260206004820152601c60248201527f6e6f74207375636820616d6f756e7420696e20746865207661756c74000000006044820152606401610368565b6001600160a01b038616600090815260cf6020526040902054848110156110505760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610368565b6001600160a01b038716600090815260cf602052604081208054879290611078908490611838565b909155505060ca54604051632770a7eb60e21b81526001600160a01b0389811660048301526024820188905290911690639dc29fac90604401600060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050506001600160a01b038716600090815260ce60205260408120805484929061110b908490611838565b909155505060cb54611127906001600160a01b0316878461117e565b856001600160a01b0316876001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8460405161116c91815260200190565b60405180910390a35095945050505050565b6040516001600160a01b0383166024820152604481018290526111e190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112af565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107709085906323b872dd60e01b906084016111aa565b600054610100900460ff166112455760405162461bcd60e51b8152600401610368906118a8565b61078833610e44565b600054610100900460ff166112755760405162461bcd60e51b8152600401610368906118a8565b6065805460ff19169055565b600054610100900460ff166112a85760405162461bcd60e51b8152600401610368906118a8565b6001609755565b6000611304826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113819092919063ffffffff16565b8051909150156111e1578080602001905181019061132291906118f3565b6111e15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610368565b606061054c848460008585600080866001600160a01b031685876040516113a89190611915565b60006040518083038185875af1925050503d80600081146113e5576040519150601f19603f3d011682016040523d82523d6000602084013e6113ea565b606091505b50915091506113fb87838387611406565b979650505050505050565b6060831561147257825161146b576001600160a01b0385163b61146b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610368565b508161054c565b61054c83838151156114875781518083602001fd5b8060405162461bcd60e51b815260040161036891906115b5565b8280546114ad906117ce565b90600052602060002090601f0160209004810192826114cf5760008555611515565b82601f106114e857805160ff1916838001178555611515565b82800160010185558215611515579182015b828111156115155782518255916020019190600101906114fa565b50611521929150611525565b5090565b5b808211156115215760008155600101611526565b80356001600160a01b038116811461155157600080fd5b919050565b6000806040838503121561156957600080fd5b6115728361153a565b91506115806020840161153a565b90509250929050565b60005b838110156115a457818101518382015260200161158c565b838111156107705750506000910152565b60208152600082518060208401526115d4816040850160208701611589565b601f01601f19169190910160400192915050565b6000602082840312156115fa57600080fd5b6108ab8261153a565b6000806040838503121561161657600080fd5b61161f8361153a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561165857600080fd5b833567ffffffffffffffff8082111561167057600080fd5b818601915086601f83011261168457600080fd5b8135818111156116965761169661162d565b604051601f8201601f19908116603f011681019083821181831017156116be576116be61162d565b816040528281528960208487010111156116d757600080fd5b8260208601602083013760006020848301015280975050505050506116fe6020850161153a565b915061170c6040850161153a565b90509250925092565b60008060006060848603121561172a57600080fd5b6117338461153a565b92506117416020850161153a565b9150604084013590509250925092565b60006020828403121561176357600080fd5b5035919050565b602080825260139082015272149bdd5d195c8e881b9bdd08185b1b1bddd959606a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600181811c908216806117e257607f821691505b6020821081141561180357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561181b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561184a5761184a611822565b500390565b600081600019048311821515161561186957611869611822565b500290565b60008261188b57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156118a3576118a3611822565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561190557600080fd5b815180151581146108ab57600080fd5b60008251611927818460208701611589565b919091019291505056fea2646970667358221220dde11f5f02514bdd821e60e7feb74ac0ba74eec965dbbaf011e82fae1f19cd9464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB4BF36B2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB4BF36B2 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC96F0E01 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xFAD83484 EQ PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9F1D9267 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xABA317A9 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB36684AC EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x340AC20F GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x340AC20F EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x4226626A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x463FD1AF EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5D602C00 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC632BBE EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1101596C EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x223888C1 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x184 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1603 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x3A3 DUP4 DUP4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC9 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x437 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x437 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xABA317A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0xABA317A9 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x4D9 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4FD SWAP1 DUP4 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x529 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x54C SWAP1 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x3A3 DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xD5D JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1085CEC9A5108943412475D298086AE4D0ABF09CFAD47B05436B89FE887A820C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x62E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x648 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6D6 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x6DE PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0xE15 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x6F9 SWAP1 PUSH1 0xC9 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x14A1 JUMP JUMPDEST POP PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCB DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x77E PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x788 PUSH1 0x0 PUSH2 0xE44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x7E9 DUP5 DUP5 DUP5 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x8A1 SWAP1 DUP4 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8E6 CALLER DUP4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8E6 CALLER DUP4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x92D PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0xE44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x3A3 CALLER DUP5 DUP5 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x223888C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x223888C1 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686173206E6F7420676F74207969656C647320746F20636C61696D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB2C SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCB SLOAD PUSH2 0xB48 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0x117E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0xCB SLOAD SWAP1 SWAP2 POP PUSH2 0xC31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xC46 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC7D SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCAA SWAP1 DUP5 SWAP1 PUSH2 0x1890 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF27 DUP4 DUP7 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST LT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207375636820616D6F756E7420696E20746865207661756C7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1078 SWAP1 DUP5 SWAP1 PUSH2 0x1838 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCA SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x110B SWAP1 DUP5 SWAP1 PUSH2 0x1838 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xCB SLOAD PUSH2 0x1127 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 PUSH2 0x117E JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0x116C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11E1 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x12AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x770 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x788 CALLER PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1381 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1322 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x368 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x54C DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13FB DUP8 DUP4 DUP4 DUP8 PUSH2 0x1406 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1472 JUMPI DUP3 MLOAD PUSH2 0x146B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x368 JUMP JUMPDEST POP DUP2 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x54C DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1487 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x14AD SWAP1 PUSH2 0x17CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x14CF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1515 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x14E8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1515 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1515 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1515 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x14FA JUMP JUMPDEST POP PUSH2 0x1521 SWAP3 SWAP2 POP PUSH2 0x1525 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1526 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1572 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x1580 PUSH1 0x20 DUP5 ADD PUSH2 0x153A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x158C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x770 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161F DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1696 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BE PUSH2 0x162D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH2 0x16FE PUSH1 0x20 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x170C PUSH1 0x40 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1733 DUP5 PUSH2 0x153A JUMP JUMPDEST SWAP3 POP PUSH2 0x1741 PUSH1 0x20 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149BDD5D195C8E881B9BDD08185B1B1BDDD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1803 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x184A JUMPI PUSH2 0x184A PUSH2 0x1822 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x1822 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x188B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18A3 JUMPI PUSH2 0x18A3 PUSH2 0x1822 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1927 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE1 0x1F 0x5F MUL MLOAD 0x4B 0xDD DUP3 0x1E PUSH1 0xE7 INVALID 0xB7 0x4A 0xC0 0xBA PUSH21 0xEEC965DBBAF011E82FAE1F19CD9464736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "501:6218:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6424:94;6502:8;;-1:-1:-1;;;;;6502:8:10;6424:94;;;-1:-1:-1;;;;;178:32:13;;;160:51;;148:2;133:18;6424:94:10;;;;;;;;2414:196;;;;;;:::i;:::-;;:::i;:::-;;;811:25:13;;;799:2;784:18;2414:196:10;665:177:13;6333:86:10;;;:::i;:::-;;;;;;;:::i;5375:437::-;;;;;;:::i;:::-;;:::i;1677:190::-;;;;;;:::i;:::-;;:::i;6202:126::-;;;;;;:::i;:::-;;:::i;:::-;;6085:112;;;;;;:::i;:::-;-1:-1:-1;;;;;6173:17:10;6147:7;6173:17;;;:8;:17;;;;;;;6085:112;1140:343;;;;;;:::i;:::-;;:::i;1858:84:2:-;1928:7;;;;1858:84;;3330:14:13;;3323:22;3305:41;;3293:2;3278:18;1858:84:2;3165:187:13;5965:115:10;;;;;;:::i;:::-;-1:-1:-1;;;;;6053:20:10;6027:7;6053:20;;;:11;:20;;;;;;;5965:115;2071:101:0;;;:::i;1441:85::-;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;3504:220:10;;;;;;:::i;:::-;;:::i;4935:::-;;;;;;:::i;:::-;;:::i;6625:92::-;6702:7;;-1:-1:-1;;;;;6702:7:10;6625:92;;2634:168;;;;;;:::i;:::-;;:::i;6523:97::-;6606:6;;-1:-1:-1;;;;;6606:6:10;6523:97;;1503:154;;;;;;:::i;:::-;;:::i;5817:143::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5928:25:10;5898:7;5928:25;;;:16;:25;;;;;;;5817:143;2321:198:0;;;;;;:::i;:::-;;:::i;3297:186:10:-;;;;;;:::i;:::-;;:::i;4528:129::-;;;:::i;2414:196::-;1086:7;;2543;;-1:-1:-1;;;;;1086:7:10;1072:10;:21;1064:53;;;;-1:-1:-1;;;1064:53:10;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;2573:30:10::2;2586:5:::0;2593:9;2573:12:::2;:30::i;:::-;1772:1:3::1;2872:7;:22:::0;2566:37:10;2414:196;-1:-1:-1;;;2414:196:10:o;6333:86::-;6375:13;6407:5;6400:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6333:86;:::o;5375:437::-;5504:28;;-1:-1:-1;;;5504:28:10;;-1:-1:-1;;;;;178:32:13;;5504:28:10;;;160:51:13;5461:7:10;;;;5504:4;;:19;;133:18:13;;5504:28:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5559:20:10;;;;;;:11;:20;;;;;;5484:48;;-1:-1:-1;5546:33:10;;5542:72;;-1:-1:-1;5602:1:10;;5375:437;-1:-1:-1;;5375:437:10:o;5542:72::-;-1:-1:-1;;;;;5645:20:10;;5623:19;5645:20;;;:11;:20;;;;;;:32;;5668:9;;5645:32;:::i;:::-;-1:-1:-1;;;;;5706:17:10;;;;;;:8;:17;;;;;;5623:54;;-1:-1:-1;5691:32:10;;5687:71;;-1:-1:-1;5746:1:10;;5375:437;-1:-1:-1;;;5375:437:10:o;5687:71::-;-1:-1:-1;;;;;5788:17:10;;;;;;:8;:17;;;;;;5774:31;;:11;:31;:::i;:::-;5767:38;5375:437;-1:-1:-1;;;;5375:437:10:o;1677:190::-;1803:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1086:7:10::1;::::0;-1:-1:-1;;;;;1086:7:10::1;1072:10;:21;1064:53;;;;-1:-1:-1::0;;;1064:53:10::1;;;;;;;:::i;:::-;1833:27:::2;1842:9;1853:6;1833:8;:27::i;6202:126::-:0;1334:13:0;:11;:13::i;:::-;6269:7:10::1;:16:::0;;-1:-1:-1;;;;;;6269:16:10::1;-1:-1:-1::0;;;;;6269:16:10;::::1;::::0;;::::1;::::0;;;6300:21:::1;::::0;160:51:13;;;6300:21:10::1;::::0;148:2:13;133:18;6300:21:10::1;;;;;;;6202:126:::0;:::o;1140:343::-;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:4;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;5621:2:13;3157:201:1;;;5603:21:13;5660:2;5640:18;;;5633:30;5699:34;5679:18;;;5672:62;-1:-1:-1;;;5750:18:13;;;5743:44;5804:19;;3157:201:1;5419:410:13;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;1287:16:10::1;:14;:16::i;:::-;1313:17;:15;:17::i;:::-;1340:24;:22;:24::i;:::-;1374:12:::0;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1396:8:10::1;:37:::0;;-1:-1:-1;;;;;1396:37:10;;::::1;-1:-1:-1::0;;;;;;1396:37:10;;::::1;;::::0;;;1443:6:::1;:33:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3479:99:1;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;5986:36:13;;3553:14:1;;5974:2:13;5959:18;3553:14:1;;;;;;;3479:99;3101:483;1140:343:10;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3504:220:10:-;3656:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1086:7:10::1;::::0;-1:-1:-1;;;;;1086:7:10::1;1072:10;:21;1064:53;;;;-1:-1:-1::0;;;1064:53:10::1;;;;;;;:::i;:::-;3682:35:::2;3692:5;3699:9;3710:6;3682:9;:35::i;:::-;1772:1:3::0;2872:7;:22;3675:42:10;3504:220;-1:-1:-1;;;;3504:220:10:o;4935:::-;5024:7;5047:13;5063:6;;;;;;;;;-1:-1:-1;;;;;5063:6:10;-1:-1:-1;;;;;5063:12:10;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5095:25:10;;;;;;:16;:25;;;;;;5047:30;;-1:-1:-1;5132:4:10;;5095:33;;5047:30;;5095:33;:::i;:::-;5094:42;;;;:::i;:::-;5087:49;4935:220;-1:-1:-1;;;4935:220:10:o;2634:168::-;2730:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;2760:35:10::1;2773:10;2785:9:::0;2760:12:::1;:35::i;:::-;1772:1:3::0;2872:7;:22;2753:42:10;2634:168;-1:-1:-1;;2634:168:10:o;1503:154::-;1592:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1622:28:10::1;1631:10;1643:6:::0;1622:8:::1;:28::i;2321:198:0:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;6630:2:13;2401:73:0::1;::::0;::::1;6612:21:13::0;6669:2;6649:18;;;6642:30;6708:34;6688:18;;;6681:62;-1:-1:-1;;;6759:18:13;;;6752:36;6805:19;;2401:73:0::1;6428:402:13::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;3297:186:10:-;3406:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;3436:40:10::1;3446:10;3458:9:::0;3469:6;3436:9:::1;:40::i;4528:129::-:0;4619:6;;:31;;-1:-1:-1;;;4619:31:10;;4644:4;4619:31;;;160:51:13;4593:7:10;;-1:-1:-1;;;;;4619:6:10;;:16;;133:18:13;;4619:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4612:38;;4528:129;:::o;2807:469::-;2937:23;;-1:-1:-1;;;2937:23:10;;-1:-1:-1;;;;;178:32:13;;2937:23:10;;;160:51:13;2888:7:10;;;;2937:4;;:16;;133:18:13;;2937:23:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2911:49;;2996:1;2978:15;:19;2970:59;;;;-1:-1:-1;;;2970:59:10;;7037:2:13;2970:59:10;;;7019:21:13;7076:2;7056:18;;;7049:30;7115:29;7095:18;;;7088:57;7162:18;;2970:59:10;6835:351:13;2970:59:10;-1:-1:-1;;;;;3081:15:10;;;;;;:8;:15;;;;;:34;;3100:15;;3081;:34;;3100:15;;3081:34;:::i;:::-;;;;-1:-1:-1;;3132:6:10;;3125:55;;-1:-1:-1;;;;;3132:6:10;3153:9;3164:15;3125:27;:55::i;:::-;3210:9;-1:-1:-1;;;;;3195:42:10;3203:5;-1:-1:-1;;;;;3195:42:10;;3221:15;3195:42;;;;811:25:13;;799:2;784:18;;665:177;3195:42:10;;;;;;;;3254:15;2807:469;-1:-1:-1;;;2807:469:10:o;1887:522::-;1963:7;1986:13;2002:6;;;;;;;;;-1:-1:-1;;;;;2002:6:10;-1:-1:-1;;;;;2002:12:10;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2033:6;;1986:30;;-1:-1:-1;2026:66:10;;-1:-1:-1;;;;;2033:6:10;2058:10;2078:4;2085:6;2026:31;:66::i;:::-;2102:14;2137:5;2120:13;:6;2129:4;2120:13;:::i;:::-;2119:23;;;;:::i;:::-;-1:-1:-1;;;;;2152:20:10;;;;;;:11;:20;;;;;:30;;2102:40;;-1:-1:-1;2176:6:10;;2152:20;;;:30;;2176:6;;2152:30;:::i;:::-;;;;-1:-1:-1;;;;;;;2201:25:10;;;;;;:16;:25;;;;;:35;;2230:6;;2201:25;:35;;2230:6;;2201:35;:::i;:::-;;;;-1:-1:-1;;2295:8:10;;2284:42;;-1:-1:-1;;;2284:42:10;;-1:-1:-1;;;;;7516:32:13;;;2284:42:10;;;7498:51:13;7565:18;;;7558:34;;;2295:8:10;;;;2284:25;;7471:18:13;;2284:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2341:38:10;;811:25:13;;;-1:-1:-1;;;;;2341:38:10;;;-1:-1:-1;2351:10:10;;-1:-1:-1;2341:38:10;;799:2:13;784:18;2341:38:10;;;;;;;2396:6;1887:522;-1:-1:-1;;;;1887:522:10:o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:5;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;7805:2:13;1654:68:0;;;7787:21:13;;;7824:18;;;7817:30;7883:34;7863:18;;;7856:62;7935:18;;1654:68:0;7603:356:13;1003:95:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1063:97:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1126:27:2::1;:25;:27::i;1853:111:3:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1923:34:3::1;:32;:34::i;2673:187:0:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;3729:794:10:-;3845:7;3864:13;3880:6;;;;;;;;;-1:-1:-1;;;;;3880:6:10;-1:-1:-1;;;;;3880:12:10;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:30;-1:-1:-1;3904:18:10;3944:4;3926:14;3864:30;3926:6;:14;:::i;:::-;3925:23;;;;:::i;:::-;3979:6;;:31;;-1:-1:-1;;;3979:31:10;;4004:4;3979:31;;;160:51:13;3904:44:10;;-1:-1:-1;3904:44:10;;-1:-1:-1;;;;;3979:6:10;;;;:16;;133:18:13;;3979:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;3958:120;;;;-1:-1:-1;;;3958:120:10;;8578:2:13;3958:120:10;;;8560:21:13;8617:2;8597:18;;;8590:30;8656;8636:18;;;8629:58;8704:18;;3958:120:10;8376:352:13;3958:120:10;-1:-1:-1;;;;;4106:23:10;;4088:15;4106:23;;;:16;:23;;;;;;4147:17;;;;4139:50;;;;-1:-1:-1;;;4139:50:10;;8935:2:13;4139:50:10;;;8917:21:13;8974:2;8954:18;;;8947:30;-1:-1:-1;;;8993:18:13;;;8986:50;9053:18;;4139:50:10;8733:344:13;4139:50:10;-1:-1:-1;;;;;4199:23:10;;;;;;:16;:23;;;;;:33;;4226:6;;4199:23;:33;;4226:6;;4199:33;:::i;:::-;;;;-1:-1:-1;;4295:8:10;;4284:40;;-1:-1:-1;;;4284:40:10;;-1:-1:-1;;;;;7516:32:13;;;4284:40:10;;;7498:51:13;7565:18;;;7558:34;;;4295:8:10;;;;4284:25;;7471:18:13;;4284:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4334:18:10;;;;;;:11;:18;;;;;:32;;4356:10;;4334:18;:32;;4356:10;;4334:32;:::i;:::-;;;;-1:-1:-1;;4392:6:10;;4385:50;;-1:-1:-1;;;;;4392:6:10;4413:9;4424:10;4385:27;:50::i;:::-;4467:9;-1:-1:-1;;;;;4450:39:10;4460:5;-1:-1:-1;;;;;4450:39:10;;4478:10;4450:39;;;;811:25:13;;799:2;784:18;;665:177;4450:39:10;;;;;;;;-1:-1:-1;4506:10:10;3729:794;-1:-1:-1;;;;;3729:794:10:o;763:205:8:-;902:58;;-1:-1:-1;;;;;7516:32:13;;902:58:8;;;7498:51:13;7565:18;;;7558:34;;;875:86:8;;895:5;;-1:-1:-1;;;925:23:8;7471:18:13;;902:58:8;;;;-1:-1:-1;;902:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:8;-1:-1:-1;;;;;;902:58:8;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;974:241::-;1139:68;;-1:-1:-1;;;;;9340:15:13;;;1139:68:8;;;9322:34:13;9392:15;;9372:18;;;9365:43;9424:18;;;9417:34;;;1112:96:8;;1132:5;;-1:-1:-1;;;1162:27:8;9257:18:13;;1139:68:8;9082:375:13;1104:111:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:5::0;1176:18:0::1;:32::i;1166:95:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1239:7:2::1;:15:::0;;-1:-1:-1;;1239:15:2::1;::::0;;1166:95::o;1970:109:3:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1772:1:3::1;2050:7;:22:::0;1970:109::o;3747:706:8:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:8;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:8;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:8;;9946:2:13;4351:85:8;;;9928:21:13;9985:2;9965:18;;;9958:30;10024:34;10004:18;;;9997:62;-1:-1:-1;;;10075:18:13;;;10068:40;10125:19;;4351:85:8;9744:406:13;3873:223:9;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:9;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:9:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;-1:-1:-1;;;;;1476:19:4;;;7908:60:9;;;;-1:-1:-1;;;7908:60:9;;11043:2:13;7908:60:9;;;11025:21:13;11082:2;11062:18;;;11055:30;11121:31;11101:18;;;11094:59;11170:18;;7908:60:9;10841:353:13;7908:60:9;-1:-1:-1;8003:10:9;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:9;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;222:173:13;290:20;;-1:-1:-1;;;;;339:31:13;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:260::-;468:6;476;529:2;517:9;508:7;504:23;500:32;497:52;;;545:1;542;535:12;497:52;568:29;587:9;568:29;:::i;:::-;558:39;;616:38;650:2;639:9;635:18;616:38;:::i;:::-;606:48;;400:260;;;;;:::o;847:258::-;919:1;929:113;943:6;940:1;937:13;929:113;;;1019:11;;;1013:18;1000:11;;;993:39;965:2;958:10;929:113;;;1060:6;1057:1;1054:13;1051:48;;;-1:-1:-1;;1095:1:13;1077:16;;1070:27;847:258::o;1110:383::-;1259:2;1248:9;1241:21;1222:4;1291:6;1285:13;1334:6;1329:2;1318:9;1314:18;1307:34;1350:66;1409:6;1404:2;1393:9;1389:18;1384:2;1376:6;1372:15;1350:66;:::i;:::-;1477:2;1456:15;-1:-1:-1;;1452:29:13;1437:45;;;;1484:2;1433:54;;1110:383;-1:-1:-1;;1110:383:13:o;1498:186::-;1557:6;1610:2;1598:9;1589:7;1585:23;1581:32;1578:52;;;1626:1;1623;1616:12;1578:52;1649:29;1668:9;1649:29;:::i;1689:254::-;1757:6;1765;1818:2;1806:9;1797:7;1793:23;1789:32;1786:52;;;1834:1;1831;1824:12;1786:52;1857:29;1876:9;1857:29;:::i;:::-;1847:39;1933:2;1918:18;;;;1905:32;;-1:-1:-1;;;1689:254:13:o;1948:127::-;2009:10;2004:3;2000:20;1997:1;1990:31;2040:4;2037:1;2030:15;2064:4;2061:1;2054:15;2080:1080;2167:6;2175;2183;2236:2;2224:9;2215:7;2211:23;2207:32;2204:52;;;2252:1;2249;2242:12;2204:52;2292:9;2279:23;2321:18;2362:2;2354:6;2351:14;2348:34;;;2378:1;2375;2368:12;2348:34;2416:6;2405:9;2401:22;2391:32;;2461:7;2454:4;2450:2;2446:13;2442:27;2432:55;;2483:1;2480;2473:12;2432:55;2519:2;2506:16;2541:2;2537;2534:10;2531:36;;;2547:18;;:::i;:::-;2622:2;2616:9;2590:2;2676:13;;-1:-1:-1;;2672:22:13;;;2696:2;2668:31;2664:40;2652:53;;;2720:18;;;2740:22;;;2717:46;2714:72;;;2766:18;;:::i;:::-;2806:10;2802:2;2795:22;2841:2;2833:6;2826:18;2883:7;2876:4;2871:2;2867;2863:11;2859:22;2856:35;2853:55;;;2904:1;2901;2894:12;2853:55;2964:2;2957:4;2953:2;2949:13;2942:4;2934:6;2930:17;2917:50;3011:1;3004:4;2999:2;2991:6;2987:15;2983:26;2976:37;3032:6;3022:16;;;;;;;3057:40;3091:4;3080:9;3076:20;3057:40;:::i;:::-;3047:50;;3116:38;3150:2;3139:9;3135:18;3116:38;:::i;:::-;3106:48;;2080:1080;;;;;:::o;3357:328::-;3434:6;3442;3450;3503:2;3491:9;3482:7;3478:23;3474:32;3471:52;;;3519:1;3516;3509:12;3471:52;3542:29;3561:9;3542:29;:::i;:::-;3532:39;;3590:38;3624:2;3613:9;3609:18;3590:38;:::i;:::-;3580:48;;3675:2;3664:9;3660:18;3647:32;3637:42;;3357:328;;;;;:::o;3690:180::-;3749:6;3802:2;3790:9;3781:7;3777:23;3773:32;3770:52;;;3818:1;3815;3808:12;3770:52;-1:-1:-1;3841:23:13;;3690:180;-1:-1:-1;3690:180:13:o;3875:343::-;4077:2;4059:21;;;4116:2;4096:18;;;4089:30;-1:-1:-1;;;4150:2:13;4135:18;;4128:49;4209:2;4194:18;;3875:343::o;4223:355::-;4425:2;4407:21;;;4464:2;4444:18;;;4437:30;4503:33;4498:2;4483:18;;4476:61;4569:2;4554:18;;4223:355::o;4583:380::-;4662:1;4658:12;;;;4705;;;4726:61;;4780:4;4772:6;4768:17;4758:27;;4726:61;4833:2;4825:6;4822:14;4802:18;4799:38;4796:161;;;4879:10;4874:3;4870:20;4867:1;4860:31;4914:4;4911:1;4904:15;4942:4;4939:1;4932:15;4796:161;;4583:380;;;:::o;4968:184::-;5038:6;5091:2;5079:9;5070:7;5066:23;5062:32;5059:52;;;5107:1;5104;5097:12;5059:52;-1:-1:-1;5130:16:13;;4968:184;-1:-1:-1;4968:184:13:o;5157:127::-;5218:10;5213:3;5209:20;5206:1;5199:31;5249:4;5246:1;5239:15;5273:4;5270:1;5263:15;5289:125;5329:4;5357:1;5354;5351:8;5348:34;;;5362:18;;:::i;:::-;-1:-1:-1;5399:9:13;;5289:125::o;6033:168::-;6073:7;6139:1;6135;6131:6;6127:14;6124:1;6121:21;6116:1;6109:9;6102:17;6098:45;6095:71;;;6146:18;;:::i;:::-;-1:-1:-1;6186:9:13;;6033:168::o;6206:217::-;6246:1;6272;6262:132;;6316:10;6311:3;6307:20;6304:1;6297:31;6351:4;6348:1;6341:15;6379:4;6376:1;6369:15;6262:132;-1:-1:-1;6408:9:13;;6206:217::o;7191:128::-;7231:3;7262:1;7258:6;7255:1;7252:13;7249:39;;;7268:18;;:::i;:::-;-1:-1:-1;7304:9:13;;7191:128::o;7964:407::-;8166:2;8148:21;;;8205:2;8185:18;;;8178:30;8244:34;8239:2;8224:18;;8217:62;-1:-1:-1;;;8310:2:13;8295:18;;8288:41;8361:3;8346:19;;7964:407::o;9462:277::-;9529:6;9582:2;9570:9;9561:7;9557:23;9553:32;9550:52;;;9598:1;9595;9588:12;9550:52;9630:9;9624:16;9683:5;9676:13;9669:21;9662:5;9659:32;9649:60;;9705:1;9702;9695:12;10562:274;10691:3;10729:6;10723:13;10745:53;10791:6;10786:3;10779:4;10771:6;10767:17;10745:53;:::i;:::-;10814:16;;;;;10562:274;-1:-1:-1;;10562:274:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1300600",
								"executionCost": "1356",
								"totalCost": "1301956"
							},
							"external": {
								"changeRouter(address)": "27811",
								"claimYields(address)": "infinite",
								"claimYieldsFor(address,address)": "infinite",
								"deposit(uint256)": "infinite",
								"depositFor(address,uint256)": "infinite",
								"getAbnbcAddress()": "2342",
								"getCeToken()": "2333",
								"getCeTokenBalanceOf(address)": "2603",
								"getClaimedOf(address)": "2582",
								"getDepositOf(address)": "2648",
								"getName()": "infinite",
								"getPrincipalOf(address)": "infinite",
								"getRouter()": "2409",
								"getTotalAmountInVault()": "infinite",
								"getYieldFor(address)": "infinite",
								"initialize(string,address,address)": "infinite",
								"owner()": "2343",
								"paused()": "2381",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28424",
								"withdraw(address,uint256)": "infinite",
								"withdrawFor(address,address,uint256)": "infinite"
							},
							"internal": {
								"_claimYields(address,address)": "infinite",
								"_deposit(address,uint256)": "infinite",
								"_withdraw(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 6719,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dde11f5f02514bdd821e60e7feb74ac0ba74eec965dbbaf011e82fae1f19cd9464736f6c634300080a0033",
									".code": [
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "B4BF36B2"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "B4BF36B2"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "B6B55F25"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "C96F0E01"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "F3FEF3A3"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "FAD83484"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "9F1D9267"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "ABA317A9"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "B0F479A1"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "B36684AC"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "340AC20F"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "340AC20F"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "4226626A"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "463FD1AF"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "5D602C00"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "C632BBE"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "1101596C"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "17D7DE7C"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "223888C1"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "2F4F21E2"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 6719,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6510,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 6502,
											"end": 6510,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6510,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6518,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 811,
											"end": 836,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 842,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6197,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3344,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3345,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3165,
											"end": 3352,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 6080,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6625,
											"end": 6717,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 6625,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6625,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 6625,
											"end": 6717,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6620,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 6523,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6612,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 6606,
											"end": 6612,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6606,
											"end": 6612,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 6523,
											"end": 6620,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5960,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1093,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2573,
											"end": 2603,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2603,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2573,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2603,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2414,
											"end": 2610,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6388,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6407,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6419,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "ABA317A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "ABA317A9"
										},
										{
											"begin": 5504,
											"end": 5523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5504,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5542,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5656,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5665,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5714,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5723,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5691,
											"end": 5723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5723,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5687,
											"end": 5758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5746,
											"end": 5747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5747,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5687,
											"end": 5758,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5687,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5796,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5805,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5812,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1677,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1093,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1833,
											"end": 1860,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6269,
											"end": 6276,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "PUSH",
											"source": 10,
											"value": "1085CEC9A5108943412475D298086AE4D0ABF09CFAD47B05436B89FE887A820C"
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6321,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6328,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5662,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5663,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5733,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5787,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5419,
											"end": 5829,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1313,
											"end": 1330,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1330,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1313,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1340,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1340,
											"end": 1364,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1340,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1340,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1379,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 1374,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1476,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5986,
											"end": 6022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5986,
											"end": 6022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1483,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1093,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 1064,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3692,
											"end": 3697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3504,
											"end": 3724,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5060,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH",
											"source": 10,
											"value": "71CA337D"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5063,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5120,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5077,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5095,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 5094,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5136,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 5155,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2753,
											"end": 2795,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2634,
											"end": 2802,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1622,
											"end": 1650,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 6671,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6742,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6743,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6805,
											"end": 6824,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6805,
											"end": 6824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6428,
											"end": 6830,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3297,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 4619,
											"end": 4635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4619,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4657,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2807,
											"end": 3276,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2807,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "223888C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "223888C1"
										},
										{
											"begin": 2937,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7040,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7076,
											"end": 7078,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7049,
											"end": 7079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "PUSH",
											"source": 13,
											"value": "686173206E6F7420676F74207969656C647320746F20636C61696D0000000000"
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7088,
											"end": 7145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 6835,
											"end": 7186,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2970,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3089,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3115,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3115,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3125,
											"end": 3180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3125,
											"end": 3180,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3125,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3125,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3221,
											"end": 3236,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 811,
											"end": 836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 784,
											"end": 802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 842,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3237,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3269,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 3276,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 3276,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1887,
											"end": 2409,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1887,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2014,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "71CA337D"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1986,
											"end": 2016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1986,
											"end": 2016,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2068,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2082,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2026,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2120,
											"end": 2126,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2129,
											"end": 2133,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2163,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2142,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2142,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2182,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2236,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7549,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 2284,
											"end": 2309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2284,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 811,
											"end": 836,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7"
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2379,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 2409,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1887,
											"end": 2409,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7787,
											"end": 7808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 7808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7817,
											"end": 7847,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 7917,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7856,
											"end": 7918,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7603,
											"end": 7959,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1126,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3729,
											"end": 4523,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3729,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3892,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "71CA337D"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3948,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3926,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3925,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3948,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3995,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 3979,
											"end": 3995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4024,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 4024,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8620,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8656,
											"end": 8686,
											"name": "PUSH",
											"source": 13,
											"value": "6E6F74207375636820616D6F756E7420696E20746865207661756C7400000000"
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8629,
											"end": 8687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8376,
											"end": 8728,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3958,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4164,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 8976,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8947,
											"end": 8977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8993,
											"end": 9011,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8993,
											"end": 9011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8733,
											"end": 9077,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4139,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4215,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4232,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7549,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "PUSH",
											"source": 10,
											"value": "9DC29FAC"
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4284,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4345,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4366,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4385,
											"end": 4435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4434,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4385,
											"end": 4435,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4435,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4385,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4476,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4465,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "D1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB"
										},
										{
											"begin": 4478,
											"end": 4488,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 811,
											"end": 836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 811,
											"end": 836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 784,
											"end": 802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 842,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4489,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4516,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 4523,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 4523,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7549,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9340,
											"end": 9355,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9356,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9408,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9417,
											"end": 9451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9417,
											"end": 9451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9417,
											"end": 9451,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9082,
											"end": 9457,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9928,
											"end": 9949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 9987,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9958,
											"end": 9988,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10058,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9997,
											"end": 10059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10068,
											"end": 10108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10144,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10125,
											"end": 10144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 9744,
											"end": 10150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11046,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11055,
											"end": 11085,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11121,
											"end": 11152,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11094,
											"end": 11153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11170,
											"end": 11188,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11170,
											"end": 11188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 10841,
											"end": 11194,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "381"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "381"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "382"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "382"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "384"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "386"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "386"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 395,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 290,
											"end": 310,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 370,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 339,
											"end": 370,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 329,
											"end": 371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 329,
											"end": 371,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 319,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 385,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 383,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 375,
											"end": 387,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 319,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 222,
											"end": 395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 660,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 400,
											"end": 660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 468,
											"end": 474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 508,
											"end": 515,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 504,
											"end": 527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 500,
											"end": 532,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 549,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 497,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 497,
											"end": 549,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 543,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 535,
											"end": 547,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 549,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 497,
											"end": 549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 568,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 568,
											"end": 597,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 568,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 558,
											"end": 597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 558,
											"end": 597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 616,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 650,
											"end": 652,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 648,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 635,
											"end": 653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 616,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 616,
											"end": 654,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 616,
											"end": 654,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 616,
											"end": 654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 606,
											"end": 654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 400,
											"end": 660,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 847,
											"end": 1105,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 847,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 919,
											"end": 920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 940,
											"end": 941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 937,
											"end": 950,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 965,
											"end": 967,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 929,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1099,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1051,
											"end": 1099,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1070,
											"end": 1097,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 847,
											"end": 1105,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1110,
											"end": 1493,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1110,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1341,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1372,
											"end": 1387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1350,
											"end": 1416,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1416,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1350,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1487,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1493,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1498,
											"end": 1684,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1498,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1596,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1578,
											"end": 1630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1578,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 1578,
											"end": 1630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1578,
											"end": 1630,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 1578,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1649,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1668,
											"end": 1677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1649,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1649,
											"end": 1678,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1689,
											"end": 1943,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1689,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1789,
											"end": 1821,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1824,
											"end": 1836,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1786,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1857,
											"end": 1886,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1857,
											"end": 1886,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1857,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1886,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1937,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1937,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1943,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1948,
											"end": 2075,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1948,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2009,
											"end": 2019,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2004,
											"end": 2007,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2000,
											"end": 2020,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2030,
											"end": 2045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2069,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2239,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2204,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2382,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2348,
											"end": 2382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2382,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2348,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2446,
											"end": 2459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2469,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2432,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2432,
											"end": 2487,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2473,
											"end": 2485,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2432,
											"end": 2487,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2432,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2544,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2567,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2531,
											"end": 2567,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2704,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2763,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2714,
											"end": 2786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2714,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2714,
											"end": 2786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2806,
											"end": 2816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2883,
											"end": 2890,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2874,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2891,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2853,
											"end": 2908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2908,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2853,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2955,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 2962,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2940,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2930,
											"end": 2947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2967,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2983,
											"end": 3009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3091,
											"end": 3095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3057,
											"end": 3097,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3097,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3057,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3154,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 3160,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3506,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3517,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3542,
											"end": 3571,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3571,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3542,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3571,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3571,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3590,
											"end": 3628,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3590,
											"end": 3628,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3590,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3628,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3685,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3690,
											"end": 3870,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3690,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3804,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3805,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3808,
											"end": 3820,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3864,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3864,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3870,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3875,
											"end": 4218,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3875,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4079,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4059,
											"end": 4080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4059,
											"end": 4080,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4096,
											"end": 4114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149BDD5D195C8E881B9BDD08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4128,
											"end": 4177,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 4218,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4223,
											"end": 4578,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4223,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4428,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4428,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4467,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4536,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4498,
											"end": 4500,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4483,
											"end": 4501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4501,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4537,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4554,
											"end": 4572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4572,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4578,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4726,
											"end": 4787,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4780,
											"end": 4784,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 4772,
											"end": 4778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4787,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4726,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4837,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4889,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4874,
											"end": 4877,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4870,
											"end": 4890,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4918,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 4919,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4946,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4947,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4583,
											"end": 4963,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4968,
											"end": 5152,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4968,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5088,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5089,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5094,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 5059,
											"end": 5111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 5059,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5130,
											"end": 5146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 5152,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5157,
											"end": 5284,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5157,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5228,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5213,
											"end": 5216,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5209,
											"end": 5229,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5249,
											"end": 5253,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5239,
											"end": 5254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5414,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 5289,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5359,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5348,
											"end": 5382,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5348,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 5348,
											"end": 5382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5414,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6033,
											"end": 6201,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 6033,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6141,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6124,
											"end": 6125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6142,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6117,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6098,
											"end": 6143,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6095,
											"end": 6166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6201,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6206,
											"end": 6423,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 6206,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 6262,
											"end": 6394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6326,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6307,
											"end": 6327,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6341,
											"end": 6356,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6394,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 6262,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6423,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7191,
											"end": 7319,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 7191,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7265,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7319,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7964,
											"end": 8371,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 7964,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8169,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8244,
											"end": 8278,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 8239,
											"end": 8241,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8279,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8312,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8288,
											"end": 8329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8346,
											"end": 8365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 8371,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9462,
											"end": 9739,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 9462,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9561,
											"end": 9568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9580,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9553,
											"end": 9585,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9602,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9550,
											"end": 9602,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9600,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9602,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9550,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9683,
											"end": 9688,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9669,
											"end": 9690,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9662,
											"end": 9667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9691,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9649,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 9649,
											"end": 9709,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9705,
											"end": 9706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9702,
											"end": 9703,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9695,
											"end": 9707,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10836,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10562,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10723,
											"end": 10736,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 10791,
											"end": 10797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 10789,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10767,
											"end": 10784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 10745,
											"end": 10798,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10745,
											"end": 10798,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 10745,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10836,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10562,
											"end": 10836,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeRouter(address)": "340ac20f",
							"claimYields(address)": "b36684ac",
							"claimYieldsFor(address,address)": "1101596c",
							"deposit(uint256)": "b6b55f25",
							"depositFor(address,uint256)": "2f4f21e2",
							"getAbnbcAddress()": "b4bf36b2",
							"getCeToken()": "0c632bbe",
							"getCeTokenBalanceOf(address)": "c96f0e01",
							"getClaimedOf(address)": "4226626a",
							"getDepositOf(address)": "5d602c00",
							"getName()": "17d7de7c",
							"getPrincipalOf(address)": "aba317a9",
							"getRouter()": "b0f479a1",
							"getTotalAmountInVault()": "fad83484",
							"getYieldFor(address)": "223888c1",
							"initialize(string,address,address)": "463fd1af",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawFor(address,address,uint256)": "9f1d9267"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"CeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRatio\",\"type\":\"uint256\"}],\"name\":\"RatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYieldsFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAbnbcAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCeTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrincipalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmountInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ceTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aBNBcAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Events\"},\"RatioUpdated(uint256)\":{\"notice\":\"Methods\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/CeVault.sol\":\"CeVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"Heliocontracts/contracts/ceros/CeVault.sol\":{\"keccak256\":\"0x0d09b066154a21c06b504617247852418e38836024c686cfb32b8eab23f07c4e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://68573f049db71ed1c5433bfdc0d428c7fd10ff42c8f07e8d91f57ae5ed49078f\",\"dweb:/ipfs/QmWp6sTF7xApQbBPYis7wFE86bpuihx3FnnGGaYx3JdjkV\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 303,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_paused",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 423,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_status",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1498,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_name",
								"offset": 0,
								"slot": "201",
								"type": "t_string_storage"
							},
							{
								"astId": 1501,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_ceToken",
								"offset": 0,
								"slot": "202",
								"type": "t_contract(ICertToken)2117"
							},
							{
								"astId": 1504,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_aBNBc",
								"offset": 0,
								"slot": "203",
								"type": "t_contract(ICertToken)2117"
							},
							{
								"astId": 1506,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_router",
								"offset": 0,
								"slot": "204",
								"type": "t_address"
							},
							{
								"astId": 1510,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_claimed",
								"offset": 0,
								"slot": "205",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1514,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_depositors",
								"offset": 0,
								"slot": "206",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1518,
								"contract": "Heliocontracts/contracts/ceros/CeVault.sol:CeVault",
								"label": "_ceTokenBalances",
								"offset": 0,
								"slot": "207",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ICertToken)2117": {
								"encoding": "inplace",
								"label": "contract ICertToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Events"
							},
							"RatioUpdated(uint256)": {
								"notice": "Methods"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "CeTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentRatio",
									"type": "uint256"
								}
							],
							"name": "RatioUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYieldsFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCeTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimedOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPrincipalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAmountInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimYields(address)": "b36684ac",
							"claimYieldsFor(address,address)": "1101596c",
							"deposit(uint256)": "b6b55f25",
							"depositFor(address,uint256)": "2f4f21e2",
							"getCeTokenBalanceOf(address)": "c96f0e01",
							"getClaimedOf(address)": "4226626a",
							"getDepositOf(address)": "5d602c00",
							"getPrincipalOf(address)": "aba317a9",
							"getTotalAmountInVault()": "fad83484",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawFor(address,address,uint256)": "9f1d9267"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"CeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRatio\",\"type\":\"uint256\"}],\"name\":\"RatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYieldsFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCeTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrincipalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmountInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Events\"},\"RatioUpdated(uint256)\":{\"notice\":\"Methods\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Events"
							},
							"RatioUpdated(uint256)": {
								"notice": "Methods"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 754,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								753,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 712,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 711,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$711_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 486,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"PausableUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 754,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 283,
							"src": "172:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "697:13:2"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "697:13:2"
								},
								{
									"baseName": {
										"id": 290,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "712:18:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "712:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "216:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409,
								753,
								282
							],
							"name": "PausableUpgradeable",
							"nameLocation": "674:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "737:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 296,
									"name": "Paused",
									"nameLocation": "821:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "828:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:2"
									},
									"src": "815:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "851:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 301,
									"name": "Unpaused",
									"nameLocation": "932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "941:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:2"
									},
									"src": "926:32:2"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "977:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "964:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 302,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "964:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1116:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1126:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1126:27:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "991:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1099:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:2"
									},
									"scope": 409,
									"src": "1063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1229:32:2",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1239:15:2"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1212:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1175:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:2"
									},
									"scope": 409,
									"src": "1166:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1472:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1482:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1482:19:2"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1511:1:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1267:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 331,
									"name": "whenNotPaused",
									"nameLocation": "1456:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:2:2"
									},
									"src": "1447:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1719:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1729:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1729:16:2"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1525:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 339,
									"name": "whenPaused",
									"nameLocation": "1706:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:2"
									},
									"src": "1697:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1911:31:2",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "1928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "1921:14:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1769:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1867:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:6:2"
									},
									"scope": 409,
									"src": "1858:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2061:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2079:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 353,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2071:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2071:38:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1948:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2019:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:2"
									},
									"scope": 409,
									"src": "2010:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2236:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2254:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2122:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2197:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 409,
									"src": "2188:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2478:66:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2498:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2488:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2488:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2517:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2512:25:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2300:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2464:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2464:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2438:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 409,
									"src": "2429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2724:69:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2734:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2734:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2764:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2759:27:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2550:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 390,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 339,
												"src": "2713:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:2"
									},
									"scope": 409,
									"src": "2676:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2799:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 408,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3078:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "3058:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 407,
										"length": {
											"hexValue": "3439",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3058:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 410,
							"src": "656:2430:2",
							"usedErrors": []
						}
					],
					"src": "105:2982:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 283,
							"src": "121:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "964:13:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:3"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								282
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 418,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1732:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 421,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1779:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1823:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1913:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1923:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1896:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:3"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 468,
									"src": "1853:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2040:39:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2060:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 434,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2023:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:3"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 468,
									"src": "1970:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2480:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2569:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 447,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2580:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:3"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:3"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2872:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2882:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 462,
									"name": "nonReentrant",
									"nameLocation": "2465:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:3"
									},
									"src": "2456:445:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3166:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 466,
										"length": {
											"hexValue": "3439",
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "916:2278:3",
							"usedErrors": []
						}
					],
					"src": "97:3098:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1252:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 479,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "1476:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 484,
												"nodeType": "Return",
												"src": "1469:30:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1206:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1246:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:4"
									},
									"scope": 711,
									"src": "1186:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2494:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 497,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 495,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 500,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2537:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:4"
											},
											{
												"assignments": [
													506,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "2589:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 513,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 507,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2607:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 509,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2629:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "2658:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:4"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2442:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2469:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:4"
									},
									"scope": 711,
									"src": "2423:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3566:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3596:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3604:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 530,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															537,
															557
														],
														"referencedDeclaration": 557,
														"src": "3583:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 535,
												"nodeType": "Return",
												"src": "3576:67:4"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:4"
									},
									"scope": 711,
									"src": "3477:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "4019:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4066:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 553,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4075:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 549,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4036:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 548,
												"id": 555,
												"nodeType": "Return",
												"src": "4029:59:4"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3903:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3927:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3954:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4005:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:4"
									},
									"scope": 711,
									"src": "3872:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "4600:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4639:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4647:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 572,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 569,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4617:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 575,
												"nodeType": "Return",
												"src": "4610:94:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4497:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4521:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4548:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4586:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:4"
									},
									"scope": 711,
									"src": "4457:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5138:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 594,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 592,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 597,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5181:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 604,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5258:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5247:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:4"
											},
											{
												"assignments": [
													610,
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5311:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 609,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5325:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 611,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5378:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 613,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5352:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5371:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5417:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5426:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 623,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5438:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 620,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "5400:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 590,
												"id": 625,
												"nodeType": "Return",
												"src": "5393:58:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5023:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5050:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5073:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:4"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5124:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:4"
									},
									"scope": 711,
									"src": "4959:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5735:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5771:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5779:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 637,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															644,
															679
														],
														"referencedDeclaration": 679,
														"src": "5752:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 642,
												"nodeType": "Return",
												"src": "5745:80:4"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5663:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5679:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5721:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:4"
									},
									"scope": 711,
									"src": "5635:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6174:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 658,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6203:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 657,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "6192:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:4"
											},
											{
												"assignments": [
													664,
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6263:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6277:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 665,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6322:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 667,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6304:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "6361:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 674,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6370:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 675,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "6382:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 672,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "6344:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 677,
												"nodeType": "Return",
												"src": "6337:58:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6053:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6077:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6104:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6160:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:4"
									},
									"scope": 711,
									"src": "6016:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "6782:582:4",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "6796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "6853:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 695,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "6937:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 705,
																"nodeType": "Block",
																"src": "7295:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 702,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "7320:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 701,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 704,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:4"
																	}
																]
															},
															"id": 706,
															"nodeType": "IfStatement",
															"src": "6933:415:4",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "6960:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 699,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 708,
												"nodeType": "IfStatement",
												"src": "6792:566:4",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6805:42:4",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "6826:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "6819:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6657:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6679:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6712:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6768:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:4"
									},
									"scope": 711,
									"src": "6622:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "194:7172:4",
							"usedErrors": []
						}
					],
					"src": "101:7266:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 283,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:5"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "763:7:5",
										"statements": []
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 719,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:5"
									},
									"scope": 753,
									"src": "711:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "838:7:5",
										"statements": []
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:5"
									},
									"scope": 753,
									"src": "776:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "912:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 734,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 733,
												"id": 736,
												"nodeType": "Return",
												"src": "922:17:5"
											}
										]
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "903:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:5"
									},
									"scope": 753,
									"src": "850:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1019:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "1029:15:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1003:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:5"
									},
									"scope": 753,
									"src": "952:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 752,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "1316:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 749,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 751,
										"length": {
											"hexValue": "3530",
											"id": 750,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "651:693:5",
							"usedErrors": []
						}
					],
					"src": "86:1259:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC20",
							"nameLocation": "212:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 765,
									"name": "Transfer",
									"nameLocation": "394:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "403:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "425:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "445:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:6"
									},
									"src": "388:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 774,
									"name": "Approval",
									"nameLocation": "625:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "634:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "682:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:6"
									},
									"src": "619:78:6"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 831,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 831,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1211:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1223:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:6"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1257:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:6"
									},
									"scope": 831,
									"src": "1193:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1557:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1572:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1612:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:6"
									},
									"scope": 831,
									"src": "1538:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2291:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2308:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:6"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2342:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:6"
									},
									"scope": 831,
									"src": "2274:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:6",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2699:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2758:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:6"
									},
									"scope": 831,
									"src": "2646:118:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "202:2564:6",
							"usedErrors": []
						}
					],
					"src": "106:2661:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 834,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:7",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1471:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1494:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1519:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1542:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1568:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 844,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1585:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1604:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:7"
									},
									"scope": 867,
									"src": "1446:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1950:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1988:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:7"
									},
									"scope": 867,
									"src": "1934:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:7"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2240:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:7"
									},
									"scope": 867,
									"src": "2189:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "620:1631:7",
							"usedErrors": []
						}
					],
					"src": "114:2138:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1478
						],
						"IERC20": [
							831
						],
						"IERC20Permit": [
							867
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 832,
							"src": "140:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 868,
							"src": "164:46:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 1479,
							"src": "211:36:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 876,
									"libraryName": {
										"id": 874,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "737:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:8",
									"typeName": {
										"id": 875,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "865:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "895:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 890,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 798,
																		"src": "925:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 893,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "950:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 894,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "954:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 888,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 886,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "875:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "875:86:8"
											}
										]
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "794:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "794:6:8"
													},
													"referencedDeclaration": 831,
													"src": "794:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "816:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "836:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:8"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:8"
									},
									"scope": 1148,
									"src": "763:205:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1102:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "1132:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 915,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "1162:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 830,
																		"src": "1162:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 918,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "1191:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 919,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "1197:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1201:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 913,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 911,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1112:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:8"
											}
										]
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1009:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 900,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "1009:6:8"
													},
													"referencedDeclaration": 831,
													"src": "1009:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1031:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1053:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1073:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:8"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:8"
									},
									"scope": 1148,
									"src": "974:241:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1581:497:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "1830:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 945,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1148",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1148",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 944,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 943,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 947,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "1877:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 941,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 929,
																					"src": "1846:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$831",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 808,
																				"src": "1846:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "2001:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 960,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 929,
																			"src": "2031:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 818,
																		"src": "2031:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 963,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "2055:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 964,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "2064:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 958,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 956,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1981:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:8"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1505:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 927,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "1505:6:8"
													},
													"referencedDeclaration": 831,
													"src": "1505:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1527:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1552:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:8"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:8"
									},
									"scope": 1148,
									"src": "1475:603:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2200:194:8",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "2210:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 985,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1148",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1148",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 987,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2264:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 981,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2233:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$831",
																	"typeString": "contract IERC20"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 808,
															"src": "2233:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 989,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2275:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "2310:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 996,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "2340:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 818,
																		"src": "2340:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 999,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2364:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1000,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "2373:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 994,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 992,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2290:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:8"
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2124:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 970,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "2124:6:8"
													},
													"referencedDeclaration": 831,
													"src": "2124:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2146:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2171:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:8"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:8"
									},
									"scope": 1148,
									"src": "2084:310:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2516:370:8",
										"statements": [
											{
												"id": 1051,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:8",
												"statements": [
													{
														"assignments": [
															1016
														],
														"declarations": [
															{
																"constant": false,
																"id": 1016,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "2550:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1015,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1025,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1021,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1019,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1023,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2604:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1017,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2573:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 808,
																"src": "2573:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1027,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "2634:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1028,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "2650:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1026,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1032,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:8"
													},
													{
														"assignments": [
															1034
														],
														"declarations": [
															{
																"constant": false,
																"id": 1034,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "2715:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1033,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1038,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2738:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1036,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "2753:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1040,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2792:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1043,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "2822:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$831",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 818,
																				"src": "2822:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1046,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "2846:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1047,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "2855:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1041,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1039,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "2772:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:8"
													}
												]
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2440:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1006,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "2440:6:8"
													},
													"referencedDeclaration": 831,
													"src": "2440:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2462:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2487:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:8"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:8"
									},
									"scope": 1148,
									"src": "2400:486:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "3107:257:8",
										"statements": [
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "3117:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3152:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3139:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "3139:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3181:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "3188:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3197:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "3204:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1087,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3214:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1088,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "3217:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1089,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "3220:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1080,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 852,
														"src": "3168:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:8"
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "3232:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [
														{
															"id": 1096,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3266:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1094,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3253:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "3253:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "3290:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "3304:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:8"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2921:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$867",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 867,
														"src": "2921:12:8"
													},
													"referencedDeclaration": 867,
													"src": "2921:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$867",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2949:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2972:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2997:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3020:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3046:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1065,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3063:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3082:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:8"
									},
									"scope": 1148,
									"src": "2892:472:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "3817:636:8",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4166:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1118,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "4220:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1122,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4200:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1238,
														"src": "4192:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1129,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4275:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "4271:176:8",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "4298:149:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1136,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1119,
																				"src": "4370:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1138,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1137,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1139,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1134,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1133,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3776:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "3776:6:8"
													},
													"referencedDeclaration": 831,
													"src": "3776:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3790:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:8"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:8"
									},
									"scope": 1148,
									"src": "3747:706:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "707:3748:8",
							"usedErrors": []
						}
					],
					"src": "115:4341:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1478
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478
							],
							"name": "Address",
							"nameLocation": "202:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "1241:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1159,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "1465:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1164,
												"nodeType": "Return",
												"src": "1458:30:9"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1235:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:9"
									},
									"scope": 1478,
									"src": "1175:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "2483:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1177,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1175,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "2526:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:9"
											},
											{
												"assignments": [
													1186,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "2578:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1185,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1187,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "2596:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "2618:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2647:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:9"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2431:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2458:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:9"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:9"
									},
									"scope": 1478,
									"src": "2412:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "3555:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "3594:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "3602:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1210,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "3572:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1216,
												"nodeType": "Return",
												"src": "3565:79:9"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3504:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:9"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3541:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:9"
									},
									"scope": 1478,
									"src": "3466:185:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "4020:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "4059:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4067:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1234,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4076:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1230,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "4037:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1236,
												"nodeType": "Return",
												"src": "4030:59:9"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3904:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3928:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3955:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:9"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "4006:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:9"
									},
									"scope": 1478,
									"src": "3873:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "4601:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "4640:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "4648:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "4654:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1250,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "4618:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1256,
												"nodeType": "Return",
												"src": "4611:94:9"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4498:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4549:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:9"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4587:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:9"
									},
									"scope": 1478,
									"src": "4458:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "5139:267:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1275,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1278,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "5182:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:9"
											},
											{
												"assignments": [
													1284,
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "5241:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1283,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "5255:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1285,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"arguments": [
														{
															"id": 1291,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5308:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1287,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5282:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "5301:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5357:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5365:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1297,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "5374:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1298,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5386:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1294,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5330:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1300,
												"nodeType": "Return",
												"src": "5323:76:9"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5024:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5051:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5074:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5125:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:9"
									},
									"scope": 1478,
									"src": "4960:446:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "5683:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1313,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "5719:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5727:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1312,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1319,
															1348
														],
														"referencedDeclaration": 1348,
														"src": "5700:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1317,
												"nodeType": "Return",
												"src": "5693:80:9"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5611:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5627:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:9"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5669:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:9"
									},
									"scope": 1478,
									"src": "5583:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "6122:168:9",
										"statements": [
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "6133:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "6147:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1339,
												"initialValue": {
													"arguments": [
														{
															"id": 1337,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "6192:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1335,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "6174:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "6241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6249:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1343,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "6258:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1344,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "6270:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1340,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "6214:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1346,
												"nodeType": "Return",
												"src": "6207:76:9"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6001:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6025:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6052:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:9"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6108:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:9"
									},
									"scope": 1478,
									"src": "5964:326:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "6566:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6604:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "6612:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1358,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1365,
															1394
														],
														"referencedDeclaration": 1394,
														"src": "6583:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1363,
												"nodeType": "Return",
												"src": "6576:84:9"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6499:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6515:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:9"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6552:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:9"
									},
									"scope": 1478,
									"src": "6469:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "7008:170:9",
										"statements": [
											{
												"assignments": [
													1378,
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "7019:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "7033:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"id": 1383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "7080:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7060:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1387,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7129:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "7137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "7146:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "7158:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1386,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "7102:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1392,
												"nodeType": "Return",
												"src": "7095:76:9"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6892:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6916:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6943:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:9"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6994:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:9"
									},
									"scope": 1478,
									"src": "6853:325:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "7660:434:9",
										"statements": [
											{
												"condition": {
													"id": 1408,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1399,
													"src": "7674:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "8030:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "8052:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "8064:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1425,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "8044:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:9"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "7670:418:9",
												"trueBody": {
													"id": 1424,
													"nodeType": "Block",
													"src": "7683:341:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1409,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "7701:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1421,
															"nodeType": "IfStatement",
															"src": "7697:286:9",
															"trueBody": {
																"id": 1420,
																"nodeType": "Block",
																"src": "7725:258:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1415,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1397,
																							"src": "7927:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1414,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "7916:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1413,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1419,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1422,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "8003:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1423,
															"nodeType": "Return",
															"src": "7996:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7511:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7535:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7557:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7590:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7646:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:9"
									},
									"scope": 1478,
									"src": "7466:628:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "8475:135:9",
										"statements": [
											{
												"condition": {
													"id": 1445,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "8489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "8546:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1450,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "8568:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1451,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "8580:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1449,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "8560:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:9"
														}
													]
												},
												"id": 1455,
												"nodeType": "IfStatement",
												"src": "8485:119:9",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "8498:42:9",
													"statements": [
														{
															"expression": {
																"id": 1446,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "8519:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1444,
															"id": 1447,
															"nodeType": "Return",
															"src": "8512:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:9",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8350:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8372:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8405:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8461:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:9"
									},
									"scope": 1478,
									"src": "8315:295:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "8699:457:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1464,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "8775:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "9105:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1471,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "9126:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1470,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:9"
														}
													]
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "8771:379:9",
												"trueBody": {
													"id": 1469,
													"nodeType": "Block",
													"src": "8798:301:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1459,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1459,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:9",
																	"valueSize": 1
																}
															],
															"id": 1468,
															"nodeType": "InlineAssembly",
															"src": "8947:142:9"
														}
													]
												}
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8633:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8658:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:9"
									},
									"scope": 1478,
									"src": "8616:540:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1479,
							"src": "194:8964:9",
							"usedErrors": []
						}
					],
					"src": "101:9058:9"
				},
				"id": 9
			},
			"Heliocontracts/contracts/ceros/CeVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/CeVault.sol",
					"exportedSymbols": {
						"Address": [
							1478
						],
						"AddressUpgradeable": [
							711
						],
						"CeVault": [
							2072
						],
						"ContextUpgradeable": [
							753
						],
						"ICertToken": [
							2117
						],
						"IERC20": [
							831
						],
						"IERC20Permit": [
							867
						],
						"IVault": [
							2252
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						],
						"PausableUpgradeable": [
							409
						],
						"ReentrancyGuardUpgradeable": [
							468
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 2073,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 132,
							"src": "65:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 469,
							"src": "141:85:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 410,
							"src": "227:78:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 832,
							"src": "306:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1485,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 1149,
							"src": "363:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
							"file": "./interfaces/IVault.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 2253,
							"src": "429:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "./interfaces/ICertToken.sol",
							"id": 1487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2073,
							"sourceUnit": 2118,
							"src": "463:37:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1488,
										"name": "IVault",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2252,
										"src": "521:6:10"
									},
									"id": 1489,
									"nodeType": "InheritanceSpecifier",
									"src": "521:6:10"
								},
								{
									"baseName": {
										"id": 1490,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "529:18:10"
									},
									"id": 1491,
									"nodeType": "InheritanceSpecifier",
									"src": "529:18:10"
								},
								{
									"baseName": {
										"id": 1492,
										"name": "PausableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "549:19:10"
									},
									"id": 1493,
									"nodeType": "InheritanceSpecifier",
									"src": "549:19:10"
								},
								{
									"baseName": {
										"id": 1494,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "570:26:10"
									},
									"id": 1495,
									"nodeType": "InheritanceSpecifier",
									"src": "570:26:10"
								}
							],
							"canonicalName": "CeVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2072,
							"linearizedBaseContracts": [
								2072,
								468,
								409,
								131,
								753,
								282,
								2252
							],
							"name": "CeVault",
							"nameLocation": "510:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "603:28:10",
										"text": " Variables"
									},
									"id": 1498,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "651:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "636:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1497,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "636:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1501,
									"mutability": "mutable",
									"name": "_ceToken",
									"nameLocation": "695:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "676:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$2117",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 1500,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1499,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2117,
											"src": "676:10:10"
										},
										"referencedDeclaration": 2117,
										"src": "676:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$2117",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1504,
									"mutability": "mutable",
									"name": "_aBNBc",
									"nameLocation": "728:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "709:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$2117",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 1503,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1502,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2117,
											"src": "709:10:10"
										},
										"referencedDeclaration": 2117,
										"src": "709:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$2117",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1506,
									"mutability": "mutable",
									"name": "_router",
									"nameLocation": "756:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "740:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1505,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1510,
									"mutability": "mutable",
									"name": "_claimed",
									"nameLocation": "805:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "769:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1509,
										"keyType": {
											"id": 1507,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "769:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1508,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "788:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1514,
									"mutability": "mutable",
									"name": "_depositors",
									"nameLocation": "867:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "831:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1513,
										"keyType": {
											"id": 1511,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1512,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1518,
									"mutability": "mutable",
									"name": "_ceTokenBalances",
									"nameLocation": "932:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2072,
									"src": "896:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1517,
										"keyType": {
											"id": 1515,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "904:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "896:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1516,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "915:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"id": 1522,
									"libraryName": {
										"id": 1519,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "973:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "967:27:10",
									"typeName": {
										"id": 1521,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1520,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 831,
											"src": "987:6:10"
										},
										"referencedDeclaration": 831,
										"src": "987:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$831",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "1054:81:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1072:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1072:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1528,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "1086:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1072:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f757465723a206e6f7420616c6c6f776564",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1095:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79777f5e6da7b07890e518d0a15d3273728dbeb54b87e6f0257c2ad451f585f8",
																"typeString": "literal_string \"Router: not allowed\""
															},
															"value": "Router: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79777f5e6da7b07890e518d0a15d3273728dbeb54b87e6f0257c2ad451f585f8",
																"typeString": "literal_string \"Router: not allowed\""
															}
														],
														"id": 1525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1064:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "1064:53:10"
											},
											{
												"id": 1533,
												"nodeType": "PlaceholderStatement",
												"src": "1127:1:10"
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "999:28:10",
										"text": " Modifiers"
									},
									"id": 1535,
									"name": "onlyRouter",
									"nameLocation": "1041:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:2:10"
									},
									"src": "1032:103:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "1277:206:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1546,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1287:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "1287:16:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1549,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1313:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "1313:17:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1552,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1340:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "1340:24:10"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1555,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "1374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1556,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "1382:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1374:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "1374:12:10"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1559,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "1396:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2117",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1561,
																"name": "ceTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "1418:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1560,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "1407:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$2117_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1407:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2117",
															"typeString": "contract ICertToken"
														}
													},
													"src": "1396:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$2117",
														"typeString": "contract ICertToken"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "1396:37:10"
											},
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "_aBNBc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "1443:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2117",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1567,
																"name": "aBNBcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "1463:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1566,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "1452:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$2117_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1452:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2117",
															"typeString": "contract ICertToken"
														}
													},
													"src": "1443:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$2117",
														"typeString": "contract ICertToken"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1443:33:10"
											}
										]
									},
									"functionSelector": "463fd1af",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1544,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1543,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1265:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1265:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "1149:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1183:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "1169:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1169:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "ceTokenAddress",
												"nameLocation": "1205:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "1197:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "aBNBcAddress",
												"nameLocation": "1237:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "1229:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:96:10"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1277:0:10"
									},
									"scope": 2072,
									"src": "1140:343:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2166
									],
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "1605:52:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1583,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1631:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1631:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "1643:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1582,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "1622:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "1615:35:10"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1577,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "1566:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1566:12:10"
										}
									],
									"name": "deposit",
									"nameLocation": "1512:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1553:8:10"
									},
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1519:16:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1592:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:9:10"
									},
									"scope": 2072,
									"src": "1503:154:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2175
									],
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "1816:51:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "1842:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "1853:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1603,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "1833:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1833:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1607,
												"nodeType": "Return",
												"src": "1826:34:10"
											}
										]
									},
									"functionSelector": "2f4f21e2",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1596,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "1762:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1762:12:10"
										},
										{
											"id": 1599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1598,
												"name": "onlyRouter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1535,
												"src": "1779:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1779:10:10"
										}
									],
									"name": "depositFor",
									"nameLocation": "1686:10:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1749:8:10"
									},
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1705:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1697:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1724:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1716:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:35:10"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1803:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:9:10"
									},
									"scope": 2072,
									"src": "1677:190:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "1976:433:10",
										"statements": [
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1994:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "1986:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1620,
															"name": "_aBNBc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2002:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "2002:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1628,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2058:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2058:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1632,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2078:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CeVault_$2072",
																		"typeString": "contract CeVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CeVault_$2072",
																		"typeString": "contract CeVault"
																	}
																],
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2070:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2070:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2070:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "2085:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1625,
																	"name": "_aBNBc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "2033:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1624,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "2026:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2026:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "2026:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2026:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2026:66:10"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "toMint",
														"nameLocation": "2110:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2102:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2102:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1639,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "2120:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2129:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2120:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1642,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2119:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1643,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "2137:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2119:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:40:10"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1646,
															"name": "_depositors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "2152:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1648,
														"indexExpression": {
															"id": 1647,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2164:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2152:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1649,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "2176:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2152:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "2152:30:10"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "_ceTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "2201:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1654,
														"indexExpression": {
															"id": 1653,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2218:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2201:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1655,
														"name": "toMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2230:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2201:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "2201:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1662,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2310:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "toMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2319:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1659,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "2295:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1658,
																"name": "ICertToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "2284:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICertToken_$2117_$",
																	"typeString": "type(contract ICertToken)"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2284:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "2284:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2284:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "2284:42:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2351:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2351:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2363:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1670,
															"name": "toMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2372:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1666,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "2341:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "EmitStatement",
												"src": "2336:43:10"
											},
											{
												"expression": {
													"id": 1673,
													"name": "toMint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1638,
													"src": "2396:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1617,
												"id": 1674,
												"nodeType": "Return",
												"src": "2389:13:10"
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deposit",
									"nameLocation": "1896:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1913:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1905:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1930:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1922:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:33:10"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1963:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:9:10"
									},
									"scope": 2072,
									"src": "1887:522:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2191
									],
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "2556:54:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "2586:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "2593:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1690,
														"name": "_claimYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "2573:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) returns (uint256)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1694,
												"nodeType": "Return",
												"src": "2566:37:10"
											}
										]
									},
									"functionSelector": "1101596c",
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1683,
												"name": "onlyRouter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1535,
												"src": "2502:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2502:10:10"
										},
										{
											"id": 1686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2517:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2517:12:10"
										}
									],
									"name": "claimYieldsFor",
									"nameLocation": "2423:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1682,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2489:8:10"
									},
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2446:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2438:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2461:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2453:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:34:10"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "2543:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:9:10"
									},
									"scope": 2072,
									"src": "2414:196:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2182
									],
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "2743:59:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1707,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2773:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2773:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "2785:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1706,
														"name": "_claimYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "2760:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) returns (uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2760:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1711,
												"nodeType": "Return",
												"src": "2753:42:10"
											}
										]
									},
									"functionSelector": "b36684ac",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1701,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2704:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2704:12:10"
										}
									],
									"name": "claimYields",
									"nameLocation": "2643:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2691:8:10"
									},
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2663:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2655:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:19:10"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2730:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:10"
									},
									"scope": 2072,
									"src": "2634:168:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "2901:375:10",
										"statements": [
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "availableYields",
														"nameLocation": "2919:15:10",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "2911:23:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2911:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1728,
												"initialValue": {
													"arguments": [
														{
															"id": 1726,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "2954:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1724,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2937:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CeVault_$2072",
																"typeString": "contract CeVault"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getYieldFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1978,
														"src": "2937:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2937:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2911:49:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1730,
																"name": "availableYields",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "2978:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2996:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2978:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686173206e6f7420676f74207969656c647320746f20636c61696d",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2999:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_152a1874e8b8686d92038bc825d64408733f94538f9b3912f126fd9a606d35ed",
																"typeString": "literal_string \"has not got yields to claim\""
															},
															"value": "has not got yields to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_152a1874e8b8686d92038bc825d64408733f94538f9b3912f126fd9a606d35ed",
																"typeString": "literal_string \"has not got yields to claim\""
															}
														],
														"id": 1729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2970:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "2970:59:10"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1736,
															"name": "_claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "3081:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1738,
														"indexExpression": {
															"id": 1737,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3090:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3081:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1739,
														"name": "availableYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "3100:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3081:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "3081:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1746,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3153:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1747,
															"name": "availableYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "3164:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1743,
																	"name": "_aBNBc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "3132:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1742,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "3125:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3125:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "3125:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3125:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "3125:55:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1751,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3203:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3210:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1753,
															"name": "availableYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "3221:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1750,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "3195:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3195:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "EmitStatement",
												"src": "3190:47:10"
											},
											{
												"expression": {
													"id": 1756,
													"name": "availableYields",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1723,
													"src": "3254:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1757,
												"nodeType": "Return",
												"src": "3247:22:10"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimYields",
									"nameLocation": "2816:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2837:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2829:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2852:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2844:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:34:10"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2888:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:9:10"
									},
									"scope": 2072,
									"src": "2807:469:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2200
									],
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "3419:64:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1772,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3446:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3446:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1774,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "3458:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "3469:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1771,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "3436:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1777,
												"nodeType": "Return",
												"src": "3429:47:10"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1766,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3380:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:12:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "3306:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3367:8:10"
									},
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3323:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3315:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3342:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3334:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:35:10"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3406:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:9:10"
									},
									"scope": 2072,
									"src": "3297:186:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2211
									],
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "3665:59:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1796,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "3692:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1797,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "3699:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1798,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "3710:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1795,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "3682:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1800,
												"nodeType": "Return",
												"src": "3675:42:10"
											}
										]
									},
									"functionSelector": "9f1d9267",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1788,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3623:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3623:12:10"
										},
										{
											"id": 1791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1790,
												"name": "onlyRouter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1535,
												"src": "3636:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3636:10:10"
										}
									],
									"name": "withdrawFor",
									"nameLocation": "3513:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1787,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3614:8:10"
									},
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3542:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3534:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3565:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3557:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3592:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3584:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:80:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3656:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:9:10"
									},
									"scope": 2072,
									"src": "3504:220:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "3854:669:10",
										"statements": [
											{
												"assignments": [
													1814
												],
												"declarations": [
													{
														"constant": false,
														"id": 1814,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "3872:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "3864:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3864:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1815,
															"name": "_aBNBc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "3880:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "3880:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3864:30:10"
											},
											{
												"assignments": [
													1820
												],
												"declarations": [
													{
														"constant": false,
														"id": 1820,
														"mutability": "mutable",
														"name": "realAmount",
														"nameLocation": "3912:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "3904:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1821,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "3926:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1822,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "3935:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3926:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1824,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3925:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3944:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3925:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1833,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4004:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CeVault_$2072",
																					"typeString": "contract CeVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CeVault_$2072",
																					"typeString": "contract CeVault"
																				}
																			],
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3996:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3996:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3996:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1829,
																		"name": "_aBNBc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "3979:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICertToken_$2117",
																			"typeString": "contract ICertToken"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 788,
																	"src": "3979:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3979:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1836,
																"name": "realAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "4014:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3979:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207375636820616d6f756e7420696e20746865207661756c74",
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4038:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1432138692b33293f20a75ffe57a3eba98538287d100becd2f1bda674fecadab",
																"typeString": "literal_string \"not such amount in the vault\""
															},
															"value": "not such amount in the vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1432138692b33293f20a75ffe57a3eba98538287d100becd2f1bda674fecadab",
																"typeString": "literal_string \"not such amount in the vault\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3958:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:120:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "3958:120:10"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4096:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "4088:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4088:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"baseExpression": {
														"id": 1843,
														"name": "_ceTokenBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "4106:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1845,
													"indexExpression": {
														"id": 1844,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "4123:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4106:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4088:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "4147:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1849,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "4158:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4147:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4166:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4139:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "4139:50:10"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1854,
															"name": "_ceTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "4199:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1856,
														"indexExpression": {
															"id": 1855,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "4216:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4199:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1857,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "4226:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4199:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "4199:33:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "4310:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "4317:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1861,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "4295:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1860,
																"name": "ICertToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "4284:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICertToken_$2117_$",
																	"typeString": "type(contract ICertToken)"
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4284:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2085,
														"src": "4284:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4284:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "4284:40:10"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1868,
															"name": "_depositors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4334:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1870,
														"indexExpression": {
															"id": 1869,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "4346:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4334:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1871,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "4356:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4334:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "4334:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "4413:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1879,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "4424:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1875,
																	"name": "_aBNBc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "4392:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2117",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1874,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "4385:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4385:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "4385:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "4385:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1883,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "4460:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1884,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "4467:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1885,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "4478:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1882,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "4450:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4450:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "EmitStatement",
												"src": "4445:44:10"
											},
											{
												"expression": {
													"id": 1888,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1820,
													"src": "4506:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1889,
												"nodeType": "Return",
												"src": "4499:17:10"
											}
										]
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdraw",
									"nameLocation": "3738:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3757:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3788:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3780:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3815:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3807:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3747:80:10"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3845:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:9:10"
									},
									"scope": 2072,
									"src": "3729:794:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2230
									],
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "4602:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1901,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4644:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CeVault_$2072",
																		"typeString": "contract CeVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CeVault_$2072",
																		"typeString": "contract CeVault"
																	}
																],
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4636:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1899,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4636:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4636:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1897,
															"name": "_aBNBc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "4619:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "4619:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1904,
												"nodeType": "Return",
												"src": "4612:38:10"
											}
										]
									},
									"functionSelector": "fad83484",
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAmountInVault",
									"nameLocation": "4537:21:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1893,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4575:8:10"
									},
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4558:2:10"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4593:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:10"
									},
									"scope": 2072,
									"src": "4528:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2218
									],
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "5037:118:10",
										"statements": [
											{
												"assignments": [
													1915
												],
												"declarations": [
													{
														"constant": false,
														"id": 1915,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "5055:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "5047:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5047:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1916,
															"name": "_aBNBc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "5063:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "5063:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5063:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5047:30:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1920,
																		"name": "_ceTokenBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "5095:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1922,
																	"indexExpression": {
																		"id": 1921,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "5112:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5095:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1923,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "5123:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5095:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1925,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5094:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5132:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5094:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1928,
												"nodeType": "Return",
												"src": "5087:49:10"
											}
										]
									},
									"functionSelector": "aba317a9",
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrincipalOf",
									"nameLocation": "4944:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1910,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5002:8:10"
									},
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4967:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "4959:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4958:17:10"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5024:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:9:10"
									},
									"scope": 2072,
									"src": "4935:220:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2225
									],
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "5474:338:10",
										"statements": [
											{
												"assignments": [
													1939
												],
												"declarations": [
													{
														"constant": false,
														"id": 1939,
														"mutability": "mutable",
														"name": "principal",
														"nameLocation": "5492:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1977,
														"src": "5484:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5484:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1944,
												"initialValue": {
													"arguments": [
														{
															"id": 1942,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5524:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1940,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "5504:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CeVault_$2072",
																"typeString": "contract CeVault"
															}
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPrincipalOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "5504:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5484:48:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1945,
														"name": "principal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "5546:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"baseExpression": {
															"id": 1946,
															"name": "_depositors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "5559:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1948,
														"indexExpression": {
															"id": 1947,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5571:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5559:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5546:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1953,
												"nodeType": "IfStatement",
												"src": "5542:72:10",
												"trueBody": {
													"id": 1952,
													"nodeType": "Block",
													"src": "5581:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5602:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1937,
															"id": 1951,
															"nodeType": "Return",
															"src": "5595:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													1955
												],
												"declarations": [
													{
														"constant": false,
														"id": 1955,
														"mutability": "mutable",
														"name": "totalYields",
														"nameLocation": "5631:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1977,
														"src": "5623:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5623:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1956,
															"name": "_depositors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "5645:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1958,
														"indexExpression": {
															"id": 1957,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5657:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5645:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1959,
														"name": "principal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "5668:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5645:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5623:54:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1962,
														"name": "totalYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "5691:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"baseExpression": {
															"id": 1963,
															"name": "_claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "5706:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1965,
														"indexExpression": {
															"id": 1964,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5715:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5706:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5691:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1970,
												"nodeType": "IfStatement",
												"src": "5687:71:10",
												"trueBody": {
													"id": 1969,
													"nodeType": "Block",
													"src": "5725:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5746:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1937,
															"id": 1968,
															"nodeType": "Return",
															"src": "5739:8:10"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1971,
														"name": "totalYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "5774:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1972,
															"name": "_claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "5788:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1974,
														"indexExpression": {
															"id": 1973,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5797:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5788:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5774:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1976,
												"nodeType": "Return",
												"src": "5767:38:10"
											}
										]
									},
									"functionSelector": "223888c1",
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "5384:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1934,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5439:8:10"
									},
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5404:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5396:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:17:10"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "5461:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:9:10"
									},
									"scope": 2072,
									"src": "5375:437:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2237
									],
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "5911:49:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1985,
														"name": "_ceTokenBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "5928:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1987,
													"indexExpression": {
														"id": 1986,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1980,
														"src": "5945:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5928:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1984,
												"id": 1988,
												"nodeType": "Return",
												"src": "5921:32:10"
											}
										]
									},
									"functionSelector": "c96f0e01",
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeTokenBalanceOf",
									"nameLocation": "5826:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5854:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "5846:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5845:17:10"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "5898:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:9:10"
									},
									"scope": 2072,
									"src": "5817:143:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2244
									],
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "6036:44:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1997,
														"name": "_depositors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "6053:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1999,
													"indexExpression": {
														"id": 1998,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "6065:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6053:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1996,
												"id": 2000,
												"nodeType": "Return",
												"src": "6046:27:10"
											}
										]
									},
									"functionSelector": "5d602c00",
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositOf",
									"nameLocation": "5974:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5995:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "5987:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5986:17:10"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "6027:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:9:10"
									},
									"scope": 2072,
									"src": "5965:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2251
									],
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "6156:41:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2009,
														"name": "_claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "6173:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2011,
													"indexExpression": {
														"id": 2010,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "6182:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6173:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2012,
												"nodeType": "Return",
												"src": "6166:24:10"
											}
										]
									},
									"functionSelector": "4226626a",
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimedOf",
									"nameLocation": "6094:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6115:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "6107:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6107:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6106:17:10"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "6147:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:9:10"
									},
									"scope": 2072,
									"src": "6085:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "6259:69:10",
										"statements": [
											{
												"expression": {
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2021,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "6269:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2022,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "6279:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6269:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "6269:16:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2026,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "6314:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2025,
														"name": "RouterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "6300:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "EmitStatement",
												"src": "6295:26:10"
											}
										]
									},
									"functionSelector": "340ac20f",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2019,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2018,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6249:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6249:9:10"
										}
									],
									"name": "changeRouter",
									"nameLocation": "6211:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "6232:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "6224:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:16:10"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6259:0:10"
									},
									"scope": 2072,
									"src": "6202:126:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "6390:29:10",
										"statements": [
											{
												"expression": {
													"id": 2035,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1498,
													"src": "6407:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2036,
												"nodeType": "Return",
												"src": "6400:12:10"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "6342:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6349:2:10"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "6375:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6375:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6374:15:10"
									},
									"scope": 2072,
									"src": "6333:86:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "6477:41:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2045,
															"name": "_ceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "6502:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														],
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6494:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2043,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6494:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6494:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2042,
												"id": 2047,
												"nodeType": "Return",
												"src": "6487:24:10"
											}
										]
									},
									"functionSelector": "0c632bbe",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeToken",
									"nameLocation": "6433:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6443:2:10"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "6468:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6468:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6467:9:10"
									},
									"scope": 2072,
									"src": "6424:94:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "6581:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2056,
															"name": "_aBNBc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "6606:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ICertToken_$2117",
																"typeString": "contract ICertToken"
															}
														],
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6598:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2054,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6598:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6598:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2058,
												"nodeType": "Return",
												"src": "6591:22:10"
											}
										]
									},
									"functionSelector": "b4bf36b2",
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAbnbcAddress",
									"nameLocation": "6532:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6547:2:10"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "6572:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6571:9:10"
									},
									"scope": 2072,
									"src": "6523:97:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "6677:40:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2067,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "6702:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6694:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2065,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6694:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6694:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2064,
												"id": 2069,
												"nodeType": "Return",
												"src": "6687:23:10"
											}
										]
									},
									"functionSelector": "b0f479a1",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRouter",
									"nameLocation": "6634:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6643:2:10"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "6668:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:9:10"
									},
									"scope": 2072,
									"src": "6625:92:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2073,
							"src": "501:6218:10",
							"usedErrors": []
						}
					],
					"src": "41:6678:10"
				},
				"id": 10
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							2117
						],
						"IERC20": [
							831
						]
					},
					"id": 2118,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2074,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2075,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2118,
							"sourceUnit": 832,
							"src": "66:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2077,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "219:6:11"
									},
									"id": 2078,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:11"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2076,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:11",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2117,
							"linearizedBaseContracts": [
								2117,
								831
							],
							"name": "ICertToken",
							"nameLocation": "205:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 2085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "247:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "264:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:11"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:11"
									},
									"scope": 2117,
									"src": "233:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "309:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "326:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:11"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:11"
									},
									"scope": 2117,
									"src": "295:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 2099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "387:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:11"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "422:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:11"
									},
									"scope": 2117,
									"src": "357:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 2104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:11"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "477:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:11"
									},
									"scope": 2117,
									"src": "437:46:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 2109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "529:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:11"
									},
									"scope": 2117,
									"src": "489:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 2116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "567:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:11"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "606:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:11"
									},
									"scope": 2117,
									"src": "544:71:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2118,
							"src": "195:422:11",
							"usedErrors": []
						}
					],
					"src": "41:577:11"
				},
				"id": 11
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							2252
						]
					},
					"id": 2253,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2252,
							"linearizedBaseContracts": [
								2252
							],
							"name": "IVault",
							"nameLocation": "75:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "88:25:12",
										"text": " Events"
									},
									"id": 2128,
									"name": "Deposited",
									"nameLocation": "124:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "159:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "143:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "190:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "174:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "217:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "209:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:95:12"
									},
									"src": "118:111:12"
								},
								{
									"anonymous": false,
									"id": 2136,
									"name": "Claimed",
									"nameLocation": "240:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "273:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "257:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "304:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "288:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "331:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "323:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:95:12"
									},
									"src": "234:109:12"
								},
								{
									"anonymous": false,
									"id": 2144,
									"name": "Withdrawn",
									"nameLocation": "354:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "389:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "373:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "420:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "404:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "447:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "439:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:95:12"
									},
									"src": "348:111:12"
								},
								{
									"anonymous": false,
									"id": 2148,
									"name": "RouterChanged",
									"nameLocation": "470:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"indexed": false,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "492:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "484:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:16:12"
									},
									"src": "464:36:12"
								},
								{
									"anonymous": false,
									"id": 2154,
									"name": "CeTokenChanged",
									"nameLocation": "511:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldToken",
												"nameLocation": "534:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "526:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"indexed": false,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "552:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "544:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:36:12"
									},
									"src": "505:57:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "567:26:12",
										"text": " Methods"
									},
									"id": 2159,
									"name": "RatioUpdated",
									"nameLocation": "604:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentRatio",
												"nameLocation": "625:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "617:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:22:12"
									},
									"src": "598:41:12"
								},
								{
									"functionSelector": "b6b55f25",
									"id": 2166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "653:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "669:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "661:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:16:12"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "695:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:12"
									},
									"scope": 2252,
									"src": "644:60:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f4f21e2",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFor",
									"nameLocation": "718:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "737:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "729:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "756:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "748:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:35:12"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "790:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:9:12"
									},
									"scope": 2252,
									"src": "709:90:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b36684ac",
									"id": 2182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYields",
									"nameLocation": "813:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "833:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "825:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:19:12"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "862:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:12"
									},
									"scope": 2252,
									"src": "804:67:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1101596c",
									"id": 2191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYieldsFor",
									"nameLocation": "885:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "900:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "923:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "915:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:34:12"
									},
									"returnParameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "960:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:9:12"
									},
									"scope": 2252,
									"src": "876:93:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 2200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "983:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1000:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "992:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1019:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1011:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:35:12"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1053:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:9:12"
									},
									"scope": 2252,
									"src": "974:88:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f1d9267",
									"id": 2211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1076:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1105:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1097:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1128:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1120:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1147:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:80:12"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1186:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:12"
									},
									"scope": 2252,
									"src": "1067:128:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aba317a9",
									"id": 2218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrincipalOf",
									"nameLocation": "1209:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1232:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1224:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:17:12"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1264:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:9:12"
									},
									"scope": 2252,
									"src": "1200:73:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 2225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "1287:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1307:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "1299:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:17:12"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "1339:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:9:12"
									},
									"scope": 2252,
									"src": "1278:70:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fad83484",
									"id": 2230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAmountInVault",
									"nameLocation": "1362:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:12"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "1409:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:12"
									},
									"scope": 2252,
									"src": "1353:65:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c96f0e01",
									"id": 2237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCeTokenBalanceOf",
									"nameLocation": "1432:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1452:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:17:12"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1492:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:12"
									},
									"scope": 2252,
									"src": "1423:78:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d602c00",
									"id": 2244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositOf",
									"nameLocation": "1515:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1536:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "1528:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:17:12"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "1568:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:9:12"
									},
									"scope": 2252,
									"src": "1506:71:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4226626a",
									"id": 2251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimedOf",
									"nameLocation": "1591:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1612:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "1604:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:17:12"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "1644:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:12"
									},
									"scope": 2252,
									"src": "1582:71:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2253,
							"src": "65:1590:12",
							"usedErrors": []
						}
					],
					"src": "41:1614:12"
				},
				"id": 12
			}
		}
	}
}