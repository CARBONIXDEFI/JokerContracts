{
	"id": "33acdb717cee67d03bc70a4af04cdb6d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/ceros/HelioProvider.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/IDex.sol\";\nimport \"./interfaces/IDao.sol\";\nimport \"./interfaces/ICerosRouter.sol\";\nimport \"./interfaces/IHelioProvider.sol\";\nimport \"./interfaces/IBinancePool.sol\";\nimport \"./interfaces/ICertToken.sol\";\ncontract HelioProvider is\nIHelioProvider,\nOwnableUpgradeable,\nPausableUpgradeable,\nReentrancyGuardUpgradeable\n{\n    /**\n     * Variables\n     */\n    address public _operator;\n    // Tokens\n    address public _certToken;\n    address public _ceToken;\n    ICertToken public _collateralToken; // (default hBNB)\n    ICerosRouter public _ceRouter;\n    IDao public _dao;\n    IBinancePool public _pool;\n    address public _proxy;\n    using SafeERC20 for IERC20;\n    /**\n     * Modifiers\n     */\n    modifier onlyOperator() {\n        require(\n            msg.sender == owner() || msg.sender == _operator,\n            \"Operator: not allowed\"\n        );\n        _;\n    }\n    modifier onlyProxy() {\n        require(\n            msg.sender == owner() || msg.sender == _proxy,\n            \"AuctionProxy: not allowed\"\n        );\n        _;\n    }\n    function initialize(\n        address collateralToken,\n        address certToken,\n        address ceToken,\n        address ceRouter,\n        address daoAddress,\n        address pool\n    ) public initializer {\n        __Ownable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        _operator = msg.sender;\n        _collateralToken = ICertToken(collateralToken);\n        _certToken = certToken;\n        _ceToken = ceToken;\n        _ceRouter = ICerosRouter(ceRouter);\n        _dao = IDao(daoAddress);\n        _pool = IBinancePool(pool);\n        IERC20(_ceToken).safeApprove(daoAddress, type(uint256).max);\n    }\n    /**\n     * DEPOSIT\n     */\n    function provide()\n    external\n    payable\n    override\n    whenNotPaused\n    nonReentrant\n    returns (uint256 value)\n    {\n        value = _ceRouter.deposit{value: msg.value}();\n        // deposit ceToken as collateral\n        _provideCollateral(msg.sender, value);\n        emit Deposit(msg.sender, value);\n        return value;\n    }\n    function provideInABNBc(uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256 value)\n    {\n        revert(\"HelioProvider/Disabled\");\n        // value = _ceRouter.depositABNBcFrom(msg.sender, amount);\n        // // deposit ceToken as collateral\n        // _provideCollateral(msg.sender, value);\n        // emit Deposit(msg.sender, value);\n        // return value;\n    }\n    /**\n     * CLAIM\n     */\n    // claim in aBNBc\n    function claimInABNBc(address recipient)\n    external\n    override\n    nonReentrant\n    onlyOperator\n    returns (uint256 yields)\n    {\n        yields = _ceRouter.claim(recipient);\n        emit Claim(recipient, yields);\n        return yields;\n    }\n    /**\n     * RELEASE\n     */\n    // withdrawal in BNB via staking pool\n    function release(address recipient, uint256 amount)\n    external\n    override\n    whenNotPaused\n    nonReentrant\n    returns (uint256 realAmount)\n    {\n        uint256 minumumUnstake = _pool.getMinimumStake();\n        require(\n            amount >= minumumUnstake,\n            \"value must be greater than min unstake amount\"\n        );\n        _withdrawCollateral(msg.sender, amount);\n        realAmount = _ceRouter.withdrawFor(recipient, amount);\n        emit Withdrawal(msg.sender, recipient, amount);\n        return realAmount;\n    }\n    function releaseInABNBc(address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256 value)\n    {\n        _withdrawCollateral(msg.sender, amount);\n        value = _ceRouter.withdrawABNBc(recipient, amount);\n        emit Withdrawal(msg.sender, recipient, value);\n        return value;\n    }\n    /**\n     * DAO FUNCTIONALITY\n     */\n    function liquidation(address recipient, uint256 amount)\n    external\n    override\n    onlyProxy\n    nonReentrant\n    {\n        _ceRouter.withdrawABNBc(recipient, amount);\n    }\n    function daoBurn(address account, uint256 value)\n    external\n    override\n    onlyProxy\n    nonReentrant\n    {\n        _collateralToken.burn(account, value);\n    }\n    function daoMint(address account, uint256 value)\n    external\n    override\n    onlyProxy\n    nonReentrant\n    {\n        _collateralToken.mint(account, value);\n    }\n    function _provideCollateral(address account, uint256 amount) internal {\n        _dao.deposit(account, address(_ceToken), amount);\n        _collateralToken.mint(account, amount);\n    }\n    function _withdrawCollateral(address account, uint256 amount) internal {\n        _dao.withdraw(account, address(_ceToken), amount);\n        _collateralToken.burn(account, amount);\n    }\n    /**\n     * PAUSABLE FUNCTIONALITY\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n    function unPause() external onlyOwner {\n        _unpause();\n    }\n    /**\n     * UPDATING FUNCTIONALITY\n     */\n    function changeDao(address dao) external onlyOwner {\n        IERC20(_ceToken).safeApprove(address(_dao), 0);\n        _dao = IDao(dao);\n        IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max);\n        emit ChangeDao(dao);\n    }\n    function changeCeToken(address ceToken) external onlyOwner {\n        IERC20(_ceToken).safeApprove(address(_dao), 0);\n        _ceToken = ceToken;\n        IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max);\n        emit ChangeCeToken(ceToken);\n    }\n    function changeProxy(address auctionProxy) external onlyOwner {\n        _proxy = auctionProxy;\n        emit ChangeProxy(auctionProxy);\n    }\n    function changeCollateralToken(address collateralToken) external onlyOwner {\n        _collateralToken = ICertToken(collateralToken);\n        emit ChangeCollateralToken(collateralToken);\n    }\n    function changeOperator(address operator) external onlyOwner {\n        _operator = operator;\n        emit ChangeOperator(operator);\n    }\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBinancePool {\n    function stakeAndClaimCerts() external payable;\n\n    function unstakeCertsFor(address recipient, uint256 shares) external;\n\n    function getMinimumStake() external view returns (uint256);\n\n    function getRelayerFee() external view returns (uint256);\n\n    function pendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface IHelioProvider {\n    /**\n     * Events\n     */\n\n    event Deposit(address indexed account, uint256 amount);\n\n    event Claim(address indexed recipient, uint256 amount);\n\n    event Withdrawal(\n        address indexed owner,\n        address indexed recipient,\n        uint256 amount\n    );\n\n    event ChangeDao(address dao);\n\n    event ChangeCeToken(address ceToken);\n\n    event ChangeCollateralToken(address collateralToken);\n\n    event ChangeProxy(address auctionProxy);\n\n    event ChangeOperator(address operator);\n\n    /**\n     * Deposit\n     */\n\n    // in BNB\n    function provide() external payable returns (uint256);\n\n    // in aBNBc\n    function provideInABNBc(uint256 amount) external returns (uint256);\n\n    /**\n     * Claim\n     */\n\n    // claim in aBNBc\n    function claimInABNBc(address recipient) external returns (uint256);\n\n    /**\n     * Withdrawal\n     */\n\n    // BNB\n    function release(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // aBNBc\n    function releaseInABNBc(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    /**\n     * DAO FUNCTIONALITY\n     */\n\n    function liquidation(address recipient, uint256 amount) external;\n\n    function daoBurn(address account, uint256 value) external;\n\n    function daoMint(address account, uint256 value) external;\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface ICerosRouter {\n    /**\n     * Events\n     */\n\n    event Deposit(\n        address indexed account,\n        address indexed token,\n        uint256 amount,\n        uint256 profit\n    );\n\n    event Claim(\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event Withdrawal(\n        address indexed owner,\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event ChangeVault(address vault);\n\n    event ChangeDex(address dex);\n\n    event ChangePool(address pool);\n\n    event ChangeBNBStakingPool(address pool);\n\n    event ChangeDao(address dao);\n\n    event ChangeCeToken(address ceToken);\n\n    event ChangeCeTokenJoin(address ceTokenJoin);\n\n    event ChangeCertToken(address certToken);\n\n    event ChangeCollateralToken(address collateralToken);\n\n    event ChangeProvider(address provider);\n\n    /**\n     * Methods\n     */\n\n    /**\n     * Deposit\n     */\n\n    // in BNB\n    function deposit() external payable returns (uint256);\n\n    // in aBNBc\n    function depositABNBcFrom(address owner, uint256 amount)\n    external\n    returns (uint256);\n\n    function depositABNBc(uint256 amount) external returns (uint256);\n\n    /**\n     * Claim\n     */\n\n    // claim in aBNBc\n    function claim(address recipient) external returns (uint256);\n\n    function claimProfit(address recipient) external;\n\n    /**\n     * Withdrawal\n     */\n\n    // BNB\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawWithSlippage(\n        address recipient,\n        uint256 amount,\n        uint256 slippage\n    ) external returns (uint256);\n\n    // aBNBc\n    function withdrawABNBc(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    function getProfitFor(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns(uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/GemJoinLike.sol\";\n\n    struct CollateralType {\n    GemJoinLike gem;\n    bytes32 ilk;\n    uint32 live; //0 - inactive, 1 - started, 2 - stopped\n    address clip;\n}\n\ninterface IDao {\n\n    event Deposit(address indexed user, address collateral, uint256 amount, uint256 totalAmount);\n    event Borrow(address indexed user, address collateral, uint256 collateralAmount, uint256 amount, uint256 liquidationPrice);\n    event Payback(address indexed user, address collateral, uint256 amount, uint256 debt, uint256 liquidationPrice);\n    event Withdraw(address indexed user, uint256 amount);\n    event CollateralEnabled(address token, bytes32 ilk);\n    event CollateralDisabled(address token, bytes32 ilk);\n    event AuctionStarted(address indexed token, address user, uint256 amount, uint256 price);\n    event AuctionFinished(address indexed token, address keeper,  uint256 amount);\n\n    function deposit(\n        address participant,\n        address token,\n        uint256 dink\n    ) external returns (uint256);\n\n    function withdraw(\n        address participant,\n        address token,\n        uint256 dink\n    ) external returns (uint256);\n\n    function dropRewards(address token, address usr) external;\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.2;\n\ninterface IDex {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapTokensForExactTokens(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function quote(\n        uint256 amountA,\n        uint256 reserveA,\n        uint256 reserveB\n    ) external pure returns (uint256 amountB);\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountOut);\n\n    function getAmountIn(\n        uint256 amountOut,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountIn);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\ninterface IVault {\n    /**\n     * Events\n     */\n    event Deposited(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Claimed(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Withdrawn(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event RouterChanged(address router);\n    event CeTokenChanged(address oldToken, address newToken);\n    /**\n     * Methods\n     */\n    event RatioUpdated(uint256 currentRatio);\n    function deposit(uint256 amount) external returns (uint256);\n    function depositFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function claimYields(address recipient) external returns (uint256);\n    function claimYieldsFor(address owner, address recipient)\n    external\n    returns (uint256);\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function withdrawFor(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256);\n    function getPrincipalOf(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns (uint256);\n    function getTotalAmountInVault() external view returns (uint256);\n    function getCeTokenBalanceOf(address account) external view returns (uint256);\n    function getDepositOf(address account) external view returns (uint256);\n    function getClaimedOf(address account) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"./GemLike.sol\";\n\ninterface GemJoinLike {\n    function join(address usr, uint256 wad) external;\n\n    function exit(address usr, uint256 wad) external;\n\n    function gem() external view returns (GemLike);\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\ninterface GemLike is IERC20Upgradeable {\n    function decimals() external view returns (uint);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/draft-IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "51",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":740:4587  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":740:4587  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208cc15d7f88b56adb15c6b936ca9f2b7b8e6ad6558ecc34da5eaea64c1c5784f864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cc15d7f88b56adb15c6b936ca9f2b7b8e6ad6558ecc34da5eaea64c1c5784f864736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC1 0x5D PUSH32 0x88B56ADB15C6B936CA9F2B7B8E6AD6558ECC34DA5EAEA64C1C5784F864736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "740:3847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cc15d7f88b56adb15c6b936ca9f2b7b8e6ad6558ecc34da5eaea64c1c5784f864736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC1 0x5D PUSH32 0x88B56ADB15C6B936CA9F2B7B8E6AD6558ECC34DA5EAEA64C1C5784F864736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "740:3847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cc15d7f88b56adb15c6b936ca9f2b7b8e6ad6558ecc34da5eaea64c1c5784f864736f6c634300080a0033",
									".code": [
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF7 0xD3 DUP7 LOG1 0xE0 DUP16 PUSH31 0x27F98665828FB38A99BE70FF3899B87EAA947DB0DBA0313764736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:7172:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF7 0xD3 DUP7 LOG1 0xE0 DUP16 PUSH31 0x27F98665828FB38A99BE70FF3899B87EAA947DB0DBA0313764736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:7172:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH6 0x3BE51346B1E7 0xE1 0x2F 0xB5 DUP2 0xB1 0xEF SELFBALANCE GASLIMIT 0xCC 0xEE DUP13 PUSH22 0xA7EC388D271915E99B4442F64736F6C634300080A00 CALLER ",
							"sourceMap": "707:3748:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH6 0x3BE51346B1E7 0xE1 0x2F 0xB5 DUP2 0xB1 0xEF SELFBALANCE GASLIMIT 0xCC 0xEE DUP13 PUSH22 0xA7EC388D271915E99B4442F64736F6C634300080A00 CALLER ",
							"sourceMap": "707:3748:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SSTORE SWAP10 0xF9 CALLVALUE 0xEB 0x24 RETURNDATACOPY PUSH1 0xCF SMOD 0xC3 0xE EXP PUSH6 0xA1CF4679645A 0x4F 0xCE DUP12 0xB2 0xD4 PUSH23 0x348442187664736F6C634300080A003300000000000000 ",
							"sourceMap": "194:8964:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SSTORE SWAP10 0xF9 CALLVALUE 0xEB 0x24 RETURNDATACOPY PUSH1 0xCF SMOD 0xC3 0xE EXP PUSH6 0xA1CF4679645A 0x4F 0xCE DUP12 0xB2 0xD4 PUSH23 0x348442187664736F6C634300080A003300000000000000 ",
							"sourceMap": "194:8964:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/HelioProvider.sol": {
				"HelioProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ChangeOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "ChangeProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_ceRouter",
							"outputs": [
								{
									"internalType": "contract ICerosRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ceToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_certToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_collateralToken",
							"outputs": [
								{
									"internalType": "contract ICertToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_dao",
							"outputs": [
								{
									"internalType": "contract IDao",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_pool",
							"outputs": [
								{
									"internalType": "contract IBinancePool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_proxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "changeCeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "changeCollateralToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "changeDao",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "changeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "changeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "yields",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ceRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "daoAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "liquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "provide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "provideInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "releaseInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":687:6335  contract HelioProvider is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":687:6335  contract HelioProvider is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d6ae6f6\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xcc2effdc\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe0683726\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe0683726\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe3b0963a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf7b188a5\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0xcc2effdc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd8826fec\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdf3d23ae\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x9479cfa2\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9479cfa2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb9472535\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc4031841\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcc2a9a5b\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x7d6ae6f6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x51c3e7be\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x6e8d9a18\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6e8d9a18\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6f2bb86a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70b0a843\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x51c3e7be\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x636fc28b\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x232da7fe\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x232da7fe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32b038a3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x358b2b1a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3fd44f17\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x0357371d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06394c9b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14866aef\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3306:3842  function release(address recipient, uint256 amount)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6196:6333  function changeOperator(address operator) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4570:4734  function daoMint(address account, uint256 value)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6000:6191  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2530:2924  function provideInABNBc(uint256 amount)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":940:974  ICertToken public _collateralToken */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5591:5850  function changeCeToken(address ceToken) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":998:1027  ICerosRouter public _ceRouter */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1055:1080  IBinancePool public _pool */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":911:934  address public _ceToken */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4220:4396  function liquidation(address recipient, uint256 amount)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":836:860  address public _operator */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3847:4174  function releaseInABNBc(address recipient, uint256 amount)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5163:5224  function pause() external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":880:905  address public _certToken */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2188:2525  function provide()... */\n    tag_20:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5855:5995  function changeProxy(address auctionProxy) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1522:2152  function initialize(... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1086:1107  address public _proxy */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5345:5586  function changeDao(address dao) external onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4401:4565  function daoBurn(address account, uint256 value)... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1033:1049  IDao public _dao */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2980:3228  function claimInABNBc(address recipient)... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5229:5294  function unPause() external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      stop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3306:3842  function release(address recipient, uint256 amount)... */\n    tag_41:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3432:3450  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3466:3488  uint256 minumumUnstake */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3491:3496  _pool */\n      0xcf\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3491:3512  _pool.getMinimumStake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9bbd278\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3491:3514  _pool.getMinimumStake() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3466:3514  uint256 minumumUnstake = _pool.getMinimumStake() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3555:3569  minumumUnstake */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3545:3551  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3545:3569  amount >= minumumUnstake */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3524:3640  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3650:3689  _withdrawCollateral(msg.sender, amount) */\n      tag_175\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3670:3680  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3682:3688  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3650:3669  _withdrawCollateral */\n      tag_176\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3650:3689  _withdrawCollateral(msg.sender, amount) */\n      jump\t// in\n    tag_175:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3712:3721  _ceRouter */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3712:3733  _ceRouter.withdrawFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb518db2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3734:3743  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3745:3751  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3712:3752  _ceRouter.withdrawFor(recipient, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_181:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3699:3752  realAmount = _ceRouter.withdrawFor(recipient, amount) */\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3790:3799  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3767:3808  Withdrawal(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3778:3788  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3767:3808  Withdrawal(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3801:3807  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3767:3808  Withdrawal(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3818:3835  return realAmount */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3306:3842  function release(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6196:6333  function changeOperator(address operator) external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6279:6287  operator */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6267:6276  _operator */\n      0xc9\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6267:6287  _operator = operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6302:6326  ChangeOperator(operator) */\n      0x8eb831fe42156caaf4721a87ad40c6e662b893dbeee76d7a3ed2564a318b091c\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6317:6325  operator */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6302:6326  ChangeOperator(operator) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6196:6333  function changeOperator(address operator) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4570:4734  function daoMint(address account, uint256 value)... */\n    tag_52:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      tag_189\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1422  owner */\n      tag_113\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      jump\t// in\n    tag_189:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1413  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1442:1448  _proxy */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1438  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n    tag_190:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1382:1499  require(... */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_166\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4690:4706  _collateralToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4690:4711  _collateralToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4712:4719  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4721:4726  value */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4690:4727  _collateralToken.mint(account, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_198:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4570:4734  function daoMint(address account, uint256 value)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6000:6191  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_203:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6115:6130  collateralToken */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6085:6101  _collateralToken */\n      0xcc\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6085:6131  _collateralToken = ICertToken(collateralToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6146:6184  ChangeCollateralToken(collateralToken) */\n      0x5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d064832\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6168:6183  collateralToken */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6146:6184  ChangeCollateralToken(collateralToken) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":6000:6191  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2530:2924  function provideInABNBc(uint256 amount)... */\n    tag_61:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2626:2639  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_166\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2655:2687  revert(\"HelioProvider/Disabled\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":940:974  ICertToken public _collateralToken */\n    tag_65:\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5591:5850  function changeCeToken(address ceToken) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5660:5706  IERC20(_ceToken).safeApprove(address(_dao), 0) */\n      tag_215\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5697:5701  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5704:5705  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5667:5675  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5660:5688  IERC20(_ceToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5660:5706  IERC20(_ceToken).safeApprove(address(_dao), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5727:5734  ceToken */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5716:5724  _ceToken */\n      0xcb\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5716:5734  _ceToken = ceToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5744:5806  IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max) */\n      tag_217\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5781:5785  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5788:5805  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5751:5759  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5744:5772  IERC20(_ceToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5744:5806  IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5821:5843  ChangeCeToken(ceToken) */\n      0x1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5835:5842  ceToken */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5821:5843  ChangeCeToken(ceToken) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5591:5850  function changeCeToken(address ceToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":998:1027  ICerosRouter public _ceRouter */\n    tag_74:\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1905:1909  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1921:1935  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1055:1080  IBinancePool public _pool */\n    tag_84:\n      0xcf\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":911:934  address public _ceToken */\n    tag_89:\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4220:4396  function liquidation(address recipient, uint256 amount)... */\n    tag_95:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      tag_221\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1422  owner */\n      tag_113\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      jump\t// in\n    tag_221:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1413  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n      dup1\n      tag_222\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1442:1448  _proxy */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1438  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n    tag_222:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1382:1499  require(... */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_193\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_166\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4347:4356  _ceRouter */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4347:4370  _ceRouter.withdrawABNBc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x03550d56\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4371:4380  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4382:4388  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4347:4389  _ceRouter.withdrawABNBc(recipient, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_232:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4220:4396  function liquidation(address recipient, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":836:860  address public _operator */\n    tag_98:\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3847:4174  function releaseInABNBc(address recipient, uint256 amount)... */\n    tag_106:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3962:3975  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_166\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3991:4030  _withdrawCollateral(msg.sender, amount) */\n      tag_242\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4011:4021  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4023:4029  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3991:4010  _withdrawCollateral */\n      tag_176\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3991:4030  _withdrawCollateral(msg.sender, amount) */\n      jump\t// in\n    tag_242:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4048:4057  _ceRouter */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4048:4071  _ceRouter.withdrawABNBc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x03550d56\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4072:4081  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4083:4089  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4048:4090  _ceRouter.withdrawABNBc(recipient, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_243:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_246:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4040:4090  value = _ceRouter.withdrawABNBc(recipient, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4128:4137  recipient */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4105:4145  Withdrawal(msg.sender, recipient, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4116:4126  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4105:4145  Withdrawal(msg.sender, recipient, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4139:4144  value */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4105:4145  Withdrawal(msg.sender, recipient, value) */\n      mload(0x40)\n      tag_247\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3847:4174  function releaseInABNBc(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5163:5224  function pause() external onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5209:5217  _pause() */\n      tag_251\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5209:5215  _pause */\n      tag_252\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5209:5217  _pause() */\n      jump\t// in\n    tag_251:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5163:5224  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1487:1494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1519  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":880:905  address public _certToken */\n    tag_117:\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2188:2525  function provide()... */\n    tag_120:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2293:2306  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_166\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2330:2339  _ceRouter */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2330:2347  _ceRouter.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2355:2364  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2330:2367  _ceRouter.deposit{value: msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_262:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2322:2367  value = _ceRouter.deposit{value: msg.value}() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2418:2455  _provideCollateral(msg.sender, value) */\n      tag_263\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2437:2447  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2449:2454  value */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2418:2436  _provideCollateral */\n      tag_264\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2418:2455  _provideCollateral(msg.sender, value) */\n      jump\t// in\n    tag_263:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2478:2488  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2470:2496  Deposit(msg.sender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2490:2495  value */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2470:2496  Deposit(msg.sender, value) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2188:2525  function provide()... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5855:5995  function changeProxy(address auctionProxy) external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5936:5948  auctionProxy */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5927:5933  _proxy */\n      0xd0\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5927:5948  _proxy = auctionProxy */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5963:5988  ChangeProxy(auctionProxy) */\n      0xcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5975:5987  auctionProxy */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5963:5988  ChangeProxy(auctionProxy) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5855:5995  function changeProxy(address auctionProxy) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1522:2152  function initialize(... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3147  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3193  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_271\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_272\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3264  AddressUpgradeable.isContract(address(this)) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3249  AddressUpgradeable.isContract */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3264  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3264  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3284:3285  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3398:3412  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3444:3448  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_279:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1738:1754  __Ownable_init() */\n      tag_281\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1738:1752  __Ownable_init */\n      tag_282\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1738:1754  __Ownable_init() */\n      jump\t// in\n    tag_281:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1764:1781  __Pausable_init() */\n      tag_283\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1764:1779  __Pausable_init */\n      tag_284\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1764:1781  __Pausable_init() */\n      jump\t// in\n    tag_283:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1791:1815  __ReentrancyGuard_init() */\n      tag_285\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1791:1813  __ReentrancyGuard_init */\n      tag_286\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1791:1815  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_285:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1837:1847  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1825:1834  _operator */\n      0xc9\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1825:1847  _operator = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1887:1902  collateralToken */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1857:1873  _collateralToken */\n      0xcc\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1857:1903  _collateralToken = ICertToken(collateralToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1926:1935  certToken */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1913:1923  _certToken */\n      0xca\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1913:1935  _certToken = certToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1956:1963  ceToken */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1945:1953  _ceToken */\n      0xcb\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1945:1963  _ceToken = ceToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1998:2006  ceRouter */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1973:1982  _ceRouter */\n      0xcd\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1973:2007  _ceRouter = ICerosRouter(ceRouter) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2029:2039  daoAddress */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2017:2021  _dao */\n      0xce\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2017:2040  _dao = IDao(daoAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2071:2075  pool */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2050:2055  _pool */\n      0xcf\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2050:2076  _pool = IBinancePool(pool) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2086:2145  IERC20(_ceToken).safeApprove(daoAddress, type(uint256).max) */\n      tag_287\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2115:2125  daoAddress */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2127:2144  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2093:2101  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2086:2114  IERC20(_ceToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2086:2145  IERC20(_ceToken).safeApprove(daoAddress, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3526  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3565:3566  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1522:2152  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1086:1107  address public _proxy */\n    tag_133:\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5345:5586  function changeDao(address dao) external onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5406:5452  IERC20(_ceToken).safeApprove(address(_dao), 0) */\n      tag_294\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5443:5447  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5450:5451  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5413:5421  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5406:5434  IERC20(_ceToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5406:5452  IERC20(_ceToken).safeApprove(address(_dao), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5474:5477  dao */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5462:5466  _dao */\n      0xce\n      0x00\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5462:5478  _dao = IDao(dao) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5488:5550  IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max) */\n      tag_295\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5525:5529  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5532:5549  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5495:5503  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5488:5516  IERC20(_ceToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5488:5550  IERC20(_ceToken).safeApprove(address(_dao), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5565:5579  ChangeDao(dao) */\n      0x31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5575:5578  dao */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5565:5579  ChangeDao(dao) */\n      mload(0x40)\n      tag_296\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5345:5586  function changeDao(address dao) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4401:4565  function daoBurn(address account, uint256 value)... */\n    tag_142:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      tag_298\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1422  owner */\n      tag_113\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1417:1424  owner() */\n      jump\t// in\n    tag_298:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1413  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1424  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n      dup1\n      tag_299\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1442:1448  _proxy */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1438  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1428:1448  msg.sender == _proxy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1403:1448  msg.sender == owner() || msg.sender == _proxy */\n    tag_299:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1382:1499  require(... */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_193\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_166\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4521:4537  _collateralToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4521:4542  _collateralToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4543:4550  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4552:4557  value */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4521:4558  _collateralToken.burn(account, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_306:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4401:4565  function daoBurn(address account, uint256 value)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1033:1049  IDao public _dao */\n    tag_145:\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2980:3228  function claimInABNBc(address recipient)... */\n    tag_151:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3094:3108  uint256 yields */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_166\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1247:1254  owner() */\n      tag_314\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1247:1252  owner */\n      tag_113\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1247:1254  owner() */\n      jump\t// in\n    tag_314:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1233:1254  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1233:1243  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1233:1254  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1233:1281  msg.sender == owner() || msg.sender == _operator */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1272:1281  _operator */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1258:1281  msg.sender == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1258:1268  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1258:1281  msg.sender == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1233:1281  msg.sender == owner() || msg.sender == _operator */\n    tag_315:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":1212:1328  require(... */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3133:3142  _ceRouter */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3133:3148  _ceRouter.claim */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1e83409a\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3149:3158  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3133:3159  _ceRouter.claim(recipient) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_320:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_323:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3124:3159  yields = _ceRouter.claim(recipient) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3180:3189  recipient */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3174:3198  Claim(recipient, yields) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3191:3197  yields */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":3174:3198  Claim(recipient, yields) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":2980:3228  function claimInABNBc(address recipient)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2429:2430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2417  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5229:5294  function unPause() external onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_333:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5277:5287  _unpause() */\n      tag_335\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5277:5285  _unpause */\n      tag_336\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5277:5287  _unpause() */\n      jump\t// in\n    tag_335:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5229:5294  function unPause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2010:2116  function _requireNotPaused() internal view virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2080:2088  paused() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2080:2086  paused */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2080:2088  paused() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2079:2088  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2010:2116  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4927:5112  function _withdrawCollateral(address account, uint256 amount) internal {... */\n    tag_176:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5008:5012  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5008:5021  _dao.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9caed12\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5022:5029  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5039:5047  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5050:5056  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5008:5057  _dao.withdraw(account, address(_ceToken), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_347\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_347:\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5067:5083  _collateralToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5067:5088  _collateralToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5089:5096  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5098:5104  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":5067:5105  _collateralToken.burn(account, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_348:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_349:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4927:5112  function _withdrawCollateral(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1683  _msgSender */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1835  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1840  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_360\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1889:1890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1851  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1861  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1870:1874  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1877:1884  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1885  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap3\n      swap2\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_365\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1890  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1808:1971  require(... */\n      tag_366\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_369\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2001:2006  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2031:2053  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2055:2062  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2064:2069  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2008:2070  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_370\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2000  _callOptionalReturn */\n      tag_371\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2771  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2798  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2787  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2844:2852  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2834:2842  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2498:2502  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2495  _paused */\n      0x65\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2502  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2534  _msgSender */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      mload(0x40)\n      tag_377\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4739:4922  function _provideCollateral(address account, uint256 amount) internal {... */\n    tag_264:\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4819:4823  _dao */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4819:4831  _dao.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8340f549\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4832:4839  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4849:4857  _ceToken */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4860:4866  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4819:4867  _dao.deposit(account, address(_ceToken), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_379:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_381\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_381:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_382\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_382:\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4877:4893  _collateralToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4877:4898  _collateralToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4899:4906  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4908:4914  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4877:4915  _collateralToken.mint(account, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_383:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_384\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_384:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_386\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_386:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/HelioProvider.sol\":4739:4922  function _provideCollateral(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1246:1250  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1483  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1469:1499  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap1\n      tag_391\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1151  __Pausable_init_unchained */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap1\n      tag_391\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2676:2793  function _unpause() internal virtual whenPaused {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1743  _requirePaused */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2744:2749  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2741  _paused */\n      0x65\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2749  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2764:2786  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2773:2785  _msgSender() */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2773:2783  _msgSender */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2773:2785  _msgSender() */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2764:2786  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_412\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2676:2793  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_415\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_416\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_418\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap1\n      tag_422\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_425\n      swap1\n      tag_391\n      jump\t// in\n    tag_425:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      tag_428\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1205  _msgSender */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap1\n      tag_391\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1249:1254  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1246  _paused */\n      0x65\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1254  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_435\n      swap1\n      tag_391\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2057  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2072  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2188:2294  function _requirePaused() internal view virtual {... */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2254:2262  paused() */\n      tag_438\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2254:2260  paused */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2254:2262  paused() */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_440\n      swap1\n      tag_441\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2188:2294  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_443\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_444\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_444:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_446:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_449\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_453\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_452)\n    tag_453:\n      0x60\n      swap2\n      pop\n    tag_452:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_454\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_455\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_455:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_457\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      iszero\n      tag_458\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_459\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_460\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_461\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_462\n      swap1\n      tag_463\n      jump\t// in\n    tag_462:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_461:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_456)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_465\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_466\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_465:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_456:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_460:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_471\n      swap2\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_474:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_476:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_477:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_549\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_476\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_478:\n        /* \"#utility.yul\":641:665   */\n      tag_551\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_477\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_552:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_479:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_554\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_478\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_480:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_481:\n        /* \"#utility.yul\":997:1021   */\n      tag_557\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_480\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_558:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_482:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_560\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_481\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_40:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_563\n      tag_474\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":1290:1409   */\n    tag_562:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_564\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_479\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_565\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_482\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_483:\n        /* \"#utility.yul\":1764:1788   */\n      tag_567\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_480\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_43:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_569\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_483\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_47:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_572\n      tag_474\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":2105:2224   */\n    tag_571:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_573\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_479\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_60:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_576\n      tag_474\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":2440:2559   */\n    tag_575:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_577\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_482\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2759   */\n    tag_484:\n        /* \"#utility.yul\":2727:2730   */\n      0x00\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2741:2753   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2765:2907   */\n    tag_485:\n        /* \"#utility.yul\":2815:2824   */\n      0x00\n        /* \"#utility.yul\":2848:2901   */\n      tag_580\n        /* \"#utility.yul\":2866:2900   */\n      tag_581\n        /* \"#utility.yul\":2875:2899   */\n      tag_582\n        /* \"#utility.yul\":2893:2898   */\n      dup5\n        /* \"#utility.yul\":2875:2899   */\n      tag_476\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":2866:2900   */\n      tag_484\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":2848:2901   */\n      tag_476\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":2835:2901   */\n      swap1\n      pop\n        /* \"#utility.yul\":2765:2907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2913:3039   */\n    tag_486:\n        /* \"#utility.yul\":2963:2972   */\n      0x00\n        /* \"#utility.yul\":2996:3033   */\n      tag_584\n        /* \"#utility.yul\":3027:3032   */\n      dup3\n        /* \"#utility.yul\":2996:3033   */\n      tag_485\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":2983:3033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2913:3039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3045:3190   */\n    tag_487:\n        /* \"#utility.yul\":3114:3123   */\n      0x00\n        /* \"#utility.yul\":3147:3184   */\n      tag_586\n        /* \"#utility.yul\":3178:3183   */\n      dup3\n        /* \"#utility.yul\":3147:3184   */\n      tag_486\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":3134:3184   */\n      swap1\n      pop\n        /* \"#utility.yul\":3045:3190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3365   */\n    tag_488:\n        /* \"#utility.yul\":3302:3358   */\n      tag_588\n        /* \"#utility.yul\":3352:3357   */\n      dup2\n        /* \"#utility.yul\":3302:3358   */\n      tag_487\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":3297:3300   */\n      dup3\n        /* \"#utility.yul\":3290:3359   */\n      mstore\n        /* \"#utility.yul\":3196:3365   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3631   */\n    tag_67:\n        /* \"#utility.yul\":3483:3487   */\n      0x00\n        /* \"#utility.yul\":3521:3523   */\n      0x20\n        /* \"#utility.yul\":3510:3519   */\n      dup3\n        /* \"#utility.yul\":3506:3524   */\n      add\n        /* \"#utility.yul\":3498:3524   */\n      swap1\n      pop\n        /* \"#utility.yul\":3534:3624   */\n      tag_590\n        /* \"#utility.yul\":3621:3622   */\n      0x00\n        /* \"#utility.yul\":3610:3619   */\n      dup4\n        /* \"#utility.yul\":3606:3623   */\n      add\n        /* \"#utility.yul\":3597:3603   */\n      dup5\n        /* \"#utility.yul\":3534:3624   */\n      tag_488\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":3371:3631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3784   */\n    tag_489:\n        /* \"#utility.yul\":3708:3717   */\n      0x00\n        /* \"#utility.yul\":3741:3778   */\n      tag_592\n        /* \"#utility.yul\":3772:3777   */\n      dup3\n        /* \"#utility.yul\":3741:3778   */\n      tag_486\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":3728:3778   */\n      swap1\n      pop\n        /* \"#utility.yul\":3637:3784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3790:3963   */\n    tag_490:\n        /* \"#utility.yul\":3898:3956   */\n      tag_594\n        /* \"#utility.yul\":3950:3955   */\n      dup2\n        /* \"#utility.yul\":3898:3956   */\n      tag_489\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":3893:3896   */\n      dup3\n        /* \"#utility.yul\":3886:3957   */\n      mstore\n        /* \"#utility.yul\":3790:3963   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3969:4233   */\n    tag_76:\n        /* \"#utility.yul\":4083:4087   */\n      0x00\n        /* \"#utility.yul\":4121:4123   */\n      0x20\n        /* \"#utility.yul\":4110:4119   */\n      dup3\n        /* \"#utility.yul\":4106:4124   */\n      add\n        /* \"#utility.yul\":4098:4124   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4226   */\n      tag_596\n        /* \"#utility.yul\":4223:4224   */\n      0x00\n        /* \"#utility.yul\":4212:4221   */\n      dup4\n        /* \"#utility.yul\":4208:4225   */\n      add\n        /* \"#utility.yul\":4199:4205   */\n      dup5\n        /* \"#utility.yul\":4134:4226   */\n      tag_490\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":3969:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4329   */\n    tag_491:\n        /* \"#utility.yul\":4273:4280   */\n      0x00\n        /* \"#utility.yul\":4316:4321   */\n      dup2\n        /* \"#utility.yul\":4309:4322   */\n      iszero\n        /* \"#utility.yul\":4302:4323   */\n      iszero\n        /* \"#utility.yul\":4291:4323   */\n      swap1\n      pop\n        /* \"#utility.yul\":4239:4329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4444   */\n    tag_492:\n        /* \"#utility.yul\":4416:4437   */\n      tag_599\n        /* \"#utility.yul\":4431:4436   */\n      dup2\n        /* \"#utility.yul\":4416:4437   */\n      tag_491\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":4411:4414   */\n      dup3\n        /* \"#utility.yul\":4404:4438   */\n      mstore\n        /* \"#utility.yul\":4335:4444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4450:4660   */\n    tag_81:\n        /* \"#utility.yul\":4537:4541   */\n      0x00\n        /* \"#utility.yul\":4575:4577   */\n      0x20\n        /* \"#utility.yul\":4564:4573   */\n      dup3\n        /* \"#utility.yul\":4560:4578   */\n      add\n        /* \"#utility.yul\":4552:4578   */\n      swap1\n      pop\n        /* \"#utility.yul\":4588:4653   */\n      tag_601\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4639:4648   */\n      dup4\n        /* \"#utility.yul\":4635:4652   */\n      add\n        /* \"#utility.yul\":4626:4632   */\n      dup5\n        /* \"#utility.yul\":4588:4653   */\n      tag_492\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":4450:4660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:4813   */\n    tag_493:\n        /* \"#utility.yul\":4737:4746   */\n      0x00\n        /* \"#utility.yul\":4770:4807   */\n      tag_603\n        /* \"#utility.yul\":4801:4806   */\n      dup3\n        /* \"#utility.yul\":4770:4807   */\n      tag_486\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":4757:4807   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:4992   */\n    tag_494:\n        /* \"#utility.yul\":4927:4985   */\n      tag_605\n        /* \"#utility.yul\":4979:4984   */\n      dup2\n        /* \"#utility.yul\":4927:4985   */\n      tag_493\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":4922:4925   */\n      dup3\n        /* \"#utility.yul\":4915:4986   */\n      mstore\n        /* \"#utility.yul\":4819:4992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4998:5262   */\n    tag_86:\n        /* \"#utility.yul\":5112:5116   */\n      0x00\n        /* \"#utility.yul\":5150:5152   */\n      0x20\n        /* \"#utility.yul\":5139:5148   */\n      dup3\n        /* \"#utility.yul\":5135:5153   */\n      add\n        /* \"#utility.yul\":5127:5153   */\n      swap1\n      pop\n        /* \"#utility.yul\":5163:5255   */\n      tag_607\n        /* \"#utility.yul\":5252:5253   */\n      0x00\n        /* \"#utility.yul\":5241:5250   */\n      dup4\n        /* \"#utility.yul\":5237:5254   */\n      add\n        /* \"#utility.yul\":5228:5234   */\n      dup5\n        /* \"#utility.yul\":5163:5255   */\n      tag_494\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":4998:5262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5268:5386   */\n    tag_495:\n        /* \"#utility.yul\":5355:5379   */\n      tag_609\n        /* \"#utility.yul\":5373:5378   */\n      dup2\n        /* \"#utility.yul\":5355:5379   */\n      tag_477\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":5350:5353   */\n      dup3\n        /* \"#utility.yul\":5343:5380   */\n      mstore\n        /* \"#utility.yul\":5268:5386   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5392:5614   */\n    tag_91:\n        /* \"#utility.yul\":5485:5489   */\n      0x00\n        /* \"#utility.yul\":5523:5525   */\n      0x20\n        /* \"#utility.yul\":5512:5521   */\n      dup3\n        /* \"#utility.yul\":5508:5526   */\n      add\n        /* \"#utility.yul\":5500:5526   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5607   */\n      tag_611\n        /* \"#utility.yul\":5604:5605   */\n      0x00\n        /* \"#utility.yul\":5593:5602   */\n      dup4\n        /* \"#utility.yul\":5589:5606   */\n      add\n        /* \"#utility.yul\":5580:5586   */\n      dup5\n        /* \"#utility.yul\":5536:5607   */\n      tag_495\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":5392:5614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5620:6677   */\n    tag_129:\n        /* \"#utility.yul\":5724:5730   */\n      0x00\n        /* \"#utility.yul\":5732:5738   */\n      dup1\n        /* \"#utility.yul\":5740:5746   */\n      0x00\n        /* \"#utility.yul\":5748:5754   */\n      dup1\n        /* \"#utility.yul\":5756:5762   */\n      0x00\n        /* \"#utility.yul\":5764:5770   */\n      dup1\n        /* \"#utility.yul\":5813:5816   */\n      0xc0\n        /* \"#utility.yul\":5801:5810   */\n      dup8\n        /* \"#utility.yul\":5792:5799   */\n      dup10\n        /* \"#utility.yul\":5788:5811   */\n      sub\n        /* \"#utility.yul\":5784:5817   */\n      slt\n        /* \"#utility.yul\":5781:5901   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":5820:5899   */\n      tag_614\n      tag_474\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":5781:5901   */\n    tag_613:\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5965:6018   */\n      tag_615\n        /* \"#utility.yul\":6010:6017   */\n      dup10\n        /* \"#utility.yul\":6001:6007   */\n      dup3\n        /* \"#utility.yul\":5990:5999   */\n      dup11\n        /* \"#utility.yul\":5986:6008   */\n      add\n        /* \"#utility.yul\":5965:6018   */\n      tag_479\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":5955:6018   */\n      swap7\n      pop\n        /* \"#utility.yul\":5911:6028   */\n      pop\n        /* \"#utility.yul\":6067:6069   */\n      0x20\n        /* \"#utility.yul\":6093:6146   */\n      tag_616\n        /* \"#utility.yul\":6138:6145   */\n      dup10\n        /* \"#utility.yul\":6129:6135   */\n      dup3\n        /* \"#utility.yul\":6118:6127   */\n      dup11\n        /* \"#utility.yul\":6114:6136   */\n      add\n        /* \"#utility.yul\":6093:6146   */\n      tag_479\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":6083:6146   */\n      swap6\n      pop\n        /* \"#utility.yul\":6038:6156   */\n      pop\n        /* \"#utility.yul\":6195:6197   */\n      0x40\n        /* \"#utility.yul\":6221:6274   */\n      tag_617\n        /* \"#utility.yul\":6266:6273   */\n      dup10\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6246:6255   */\n      dup11\n        /* \"#utility.yul\":6242:6264   */\n      add\n        /* \"#utility.yul\":6221:6274   */\n      tag_479\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":6211:6274   */\n      swap5\n      pop\n        /* \"#utility.yul\":6166:6284   */\n      pop\n        /* \"#utility.yul\":6323:6325   */\n      0x60\n        /* \"#utility.yul\":6349:6402   */\n      tag_618\n        /* \"#utility.yul\":6394:6401   */\n      dup10\n        /* \"#utility.yul\":6385:6391   */\n      dup3\n        /* \"#utility.yul\":6374:6383   */\n      dup11\n        /* \"#utility.yul\":6370:6392   */\n      add\n        /* \"#utility.yul\":6349:6402   */\n      tag_479\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":6339:6402   */\n      swap4\n      pop\n        /* \"#utility.yul\":6294:6412   */\n      pop\n        /* \"#utility.yul\":6451:6454   */\n      0x80\n        /* \"#utility.yul\":6478:6531   */\n      tag_619\n        /* \"#utility.yul\":6523:6530   */\n      dup10\n        /* \"#utility.yul\":6514:6520   */\n      dup3\n        /* \"#utility.yul\":6503:6512   */\n      dup11\n        /* \"#utility.yul\":6499:6521   */\n      add\n        /* \"#utility.yul\":6478:6531   */\n      tag_479\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":6468:6531   */\n      swap3\n      pop\n        /* \"#utility.yul\":6422:6541   */\n      pop\n        /* \"#utility.yul\":6580:6583   */\n      0xa0\n        /* \"#utility.yul\":6607:6660   */\n      tag_620\n        /* \"#utility.yul\":6652:6659   */\n      dup10\n        /* \"#utility.yul\":6643:6649   */\n      dup3\n        /* \"#utility.yul\":6632:6641   */\n      dup11\n        /* \"#utility.yul\":6628:6650   */\n      add\n        /* \"#utility.yul\":6607:6660   */\n      tag_479\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":6597:6660   */\n      swap2\n      pop\n        /* \"#utility.yul\":6551:6670   */\n      pop\n        /* \"#utility.yul\":5620:6677   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":6683:6822   */\n    tag_496:\n        /* \"#utility.yul\":6746:6755   */\n      0x00\n        /* \"#utility.yul\":6779:6816   */\n      tag_622\n        /* \"#utility.yul\":6810:6815   */\n      dup3\n        /* \"#utility.yul\":6779:6816   */\n      tag_486\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":6766:6816   */\n      swap1\n      pop\n        /* \"#utility.yul\":6683:6822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6828:6985   */\n    tag_497:\n        /* \"#utility.yul\":6928:6978   */\n      tag_624\n        /* \"#utility.yul\":6972:6977   */\n      dup2\n        /* \"#utility.yul\":6928:6978   */\n      tag_496\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":6923:6926   */\n      dup3\n        /* \"#utility.yul\":6916:6979   */\n      mstore\n        /* \"#utility.yul\":6828:6985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6991:7239   */\n    tag_147:\n        /* \"#utility.yul\":7097:7101   */\n      0x00\n        /* \"#utility.yul\":7135:7137   */\n      0x20\n        /* \"#utility.yul\":7124:7133   */\n      dup3\n        /* \"#utility.yul\":7120:7138   */\n      add\n        /* \"#utility.yul\":7112:7138   */\n      swap1\n      pop\n        /* \"#utility.yul\":7148:7232   */\n      tag_626\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7218:7227   */\n      dup4\n        /* \"#utility.yul\":7214:7231   */\n      add\n        /* \"#utility.yul\":7205:7211   */\n      dup5\n        /* \"#utility.yul\":7148:7232   */\n      tag_497\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":6991:7239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7245:7414   */\n    tag_498:\n        /* \"#utility.yul\":7329:7340   */\n      0x00\n        /* \"#utility.yul\":7363:7369   */\n      dup3\n        /* \"#utility.yul\":7358:7361   */\n      dup3\n        /* \"#utility.yul\":7351:7370   */\n      mstore\n        /* \"#utility.yul\":7403:7407   */\n      0x20\n        /* \"#utility.yul\":7398:7401   */\n      dup3\n        /* \"#utility.yul\":7394:7408   */\n      add\n        /* \"#utility.yul\":7379:7408   */\n      swap1\n      pop\n        /* \"#utility.yul\":7245:7414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7420:7601   */\n    tag_499:\n        /* \"#utility.yul\":7560:7593   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7556:7557   */\n      0x00\n        /* \"#utility.yul\":7548:7554   */\n      dup3\n        /* \"#utility.yul\":7544:7558   */\n      add\n        /* \"#utility.yul\":7537:7594   */\n      mstore\n        /* \"#utility.yul\":7420:7601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7607:7973   */\n    tag_500:\n        /* \"#utility.yul\":7749:7752   */\n      0x00\n        /* \"#utility.yul\":7770:7837   */\n      tag_630\n        /* \"#utility.yul\":7834:7836   */\n      0x1f\n        /* \"#utility.yul\":7829:7832   */\n      dup4\n        /* \"#utility.yul\":7770:7837   */\n      tag_498\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":7763:7837   */\n      swap2\n      pop\n        /* \"#utility.yul\":7846:7939   */\n      tag_631\n        /* \"#utility.yul\":7935:7938   */\n      dup3\n        /* \"#utility.yul\":7846:7939   */\n      tag_499\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":7964:7966   */\n      0x20\n        /* \"#utility.yul\":7959:7962   */\n      dup3\n        /* \"#utility.yul\":7955:7967   */\n      add\n        /* \"#utility.yul\":7948:7967   */\n      swap1\n      pop\n        /* \"#utility.yul\":7607:7973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8398   */\n    tag_166:\n        /* \"#utility.yul\":8145:8149   */\n      0x00\n        /* \"#utility.yul\":8183:8185   */\n      0x20\n        /* \"#utility.yul\":8172:8181   */\n      dup3\n        /* \"#utility.yul\":8168:8186   */\n      add\n        /* \"#utility.yul\":8160:8186   */\n      swap1\n      pop\n        /* \"#utility.yul\":8232:8241   */\n      dup2\n        /* \"#utility.yul\":8226:8230   */\n      dup2\n        /* \"#utility.yul\":8222:8242   */\n      sub\n        /* \"#utility.yul\":8218:8219   */\n      0x00\n        /* \"#utility.yul\":8207:8216   */\n      dup4\n        /* \"#utility.yul\":8203:8220   */\n      add\n        /* \"#utility.yul\":8196:8243   */\n      mstore\n        /* \"#utility.yul\":8260:8391   */\n      tag_633\n        /* \"#utility.yul\":8386:8390   */\n      dup2\n        /* \"#utility.yul\":8260:8391   */\n      tag_500\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":8252:8391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:8398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8404:8547   */\n    tag_501:\n        /* \"#utility.yul\":8461:8466   */\n      0x00\n        /* \"#utility.yul\":8492:8498   */\n      dup2\n        /* \"#utility.yul\":8486:8499   */\n      mload\n        /* \"#utility.yul\":8477:8499   */\n      swap1\n      pop\n        /* \"#utility.yul\":8508:8541   */\n      tag_635\n        /* \"#utility.yul\":8535:8540   */\n      dup2\n        /* \"#utility.yul\":8508:8541   */\n      tag_481\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":8404:8547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8553:8904   */\n    tag_171:\n        /* \"#utility.yul\":8623:8629   */\n      0x00\n        /* \"#utility.yul\":8672:8674   */\n      0x20\n        /* \"#utility.yul\":8660:8669   */\n      dup3\n        /* \"#utility.yul\":8651:8658   */\n      dup5\n        /* \"#utility.yul\":8647:8670   */\n      sub\n        /* \"#utility.yul\":8643:8675   */\n      slt\n        /* \"#utility.yul\":8640:8759   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":8678:8757   */\n      tag_638\n      tag_474\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":8640:8759   */\n    tag_637:\n        /* \"#utility.yul\":8798:8799   */\n      0x00\n        /* \"#utility.yul\":8823:8887   */\n      tag_639\n        /* \"#utility.yul\":8879:8886   */\n      dup5\n        /* \"#utility.yul\":8870:8876   */\n      dup3\n        /* \"#utility.yul\":8859:8868   */\n      dup6\n        /* \"#utility.yul\":8855:8877   */\n      add\n        /* \"#utility.yul\":8823:8887   */\n      tag_501\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":8813:8887   */\n      swap2\n      pop\n        /* \"#utility.yul\":8769:8897   */\n      pop\n        /* \"#utility.yul\":8553:8904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8910:9142   */\n    tag_502:\n        /* \"#utility.yul\":9050:9084   */\n      0x76616c7565206d7573742062652067726561746572207468616e206d696e2075\n        /* \"#utility.yul\":9046:9047   */\n      0x00\n        /* \"#utility.yul\":9038:9044   */\n      dup3\n        /* \"#utility.yul\":9034:9048   */\n      add\n        /* \"#utility.yul\":9027:9085   */\n      mstore\n        /* \"#utility.yul\":9119:9134   */\n      0x6e7374616b6520616d6f756e7400000000000000000000000000000000000000\n        /* \"#utility.yul\":9114:9116   */\n      0x20\n        /* \"#utility.yul\":9106:9112   */\n      dup3\n        /* \"#utility.yul\":9102:9117   */\n      add\n        /* \"#utility.yul\":9095:9135   */\n      mstore\n        /* \"#utility.yul\":8910:9142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9148:9514   */\n    tag_503:\n        /* \"#utility.yul\":9290:9293   */\n      0x00\n        /* \"#utility.yul\":9311:9378   */\n      tag_642\n        /* \"#utility.yul\":9375:9377   */\n      0x2d\n        /* \"#utility.yul\":9370:9373   */\n      dup4\n        /* \"#utility.yul\":9311:9378   */\n      tag_498\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":9304:9378   */\n      swap2\n      pop\n        /* \"#utility.yul\":9387:9480   */\n      tag_643\n        /* \"#utility.yul\":9476:9479   */\n      dup3\n        /* \"#utility.yul\":9387:9480   */\n      tag_502\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":9505:9507   */\n      0x40\n        /* \"#utility.yul\":9500:9503   */\n      dup3\n        /* \"#utility.yul\":9496:9508   */\n      add\n        /* \"#utility.yul\":9489:9508   */\n      swap1\n      pop\n        /* \"#utility.yul\":9148:9514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9520:9939   */\n    tag_174:\n        /* \"#utility.yul\":9686:9690   */\n      0x00\n        /* \"#utility.yul\":9724:9726   */\n      0x20\n        /* \"#utility.yul\":9713:9722   */\n      dup3\n        /* \"#utility.yul\":9709:9727   */\n      add\n        /* \"#utility.yul\":9701:9727   */\n      swap1\n      pop\n        /* \"#utility.yul\":9773:9782   */\n      dup2\n        /* \"#utility.yul\":9767:9771   */\n      dup2\n        /* \"#utility.yul\":9763:9783   */\n      sub\n        /* \"#utility.yul\":9759:9760   */\n      0x00\n        /* \"#utility.yul\":9748:9757   */\n      dup4\n        /* \"#utility.yul\":9744:9761   */\n      add\n        /* \"#utility.yul\":9737:9784   */\n      mstore\n        /* \"#utility.yul\":9801:9932   */\n      tag_645\n        /* \"#utility.yul\":9927:9931   */\n      dup2\n        /* \"#utility.yul\":9801:9932   */\n      tag_503\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":9793:9932   */\n      swap1\n      pop\n        /* \"#utility.yul\":9520:9939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9945:10277   */\n    tag_178:\n        /* \"#utility.yul\":10066:10070   */\n      0x00\n        /* \"#utility.yul\":10104:10106   */\n      0x40\n        /* \"#utility.yul\":10093:10102   */\n      dup3\n        /* \"#utility.yul\":10089:10107   */\n      add\n        /* \"#utility.yul\":10081:10107   */\n      swap1\n      pop\n        /* \"#utility.yul\":10117:10188   */\n      tag_647\n        /* \"#utility.yul\":10185:10186   */\n      0x00\n        /* \"#utility.yul\":10174:10183   */\n      dup4\n        /* \"#utility.yul\":10170:10187   */\n      add\n        /* \"#utility.yul\":10161:10167   */\n      dup6\n        /* \"#utility.yul\":10117:10188   */\n      tag_495\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":10198:10270   */\n      tag_648\n        /* \"#utility.yul\":10266:10268   */\n      0x20\n        /* \"#utility.yul\":10255:10264   */\n      dup4\n        /* \"#utility.yul\":10251:10269   */\n      add\n        /* \"#utility.yul\":10242:10248   */\n      dup5\n        /* \"#utility.yul\":10198:10270   */\n      tag_483\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":9945:10277   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10283:10458   */\n    tag_504:\n        /* \"#utility.yul\":10423:10450   */\n      0x41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000\n        /* \"#utility.yul\":10419:10420   */\n      0x00\n        /* \"#utility.yul\":10411:10417   */\n      dup3\n        /* \"#utility.yul\":10407:10421   */\n      add\n        /* \"#utility.yul\":10400:10451   */\n      mstore\n        /* \"#utility.yul\":10283:10458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10464:10830   */\n    tag_505:\n        /* \"#utility.yul\":10606:10609   */\n      0x00\n        /* \"#utility.yul\":10627:10694   */\n      tag_651\n        /* \"#utility.yul\":10691:10693   */\n      0x19\n        /* \"#utility.yul\":10686:10689   */\n      dup4\n        /* \"#utility.yul\":10627:10694   */\n      tag_498\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":10620:10694   */\n      swap2\n      pop\n        /* \"#utility.yul\":10703:10796   */\n      tag_652\n        /* \"#utility.yul\":10792:10795   */\n      dup3\n        /* \"#utility.yul\":10703:10796   */\n      tag_504\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":10821:10823   */\n      0x20\n        /* \"#utility.yul\":10816:10819   */\n      dup3\n        /* \"#utility.yul\":10812:10824   */\n      add\n        /* \"#utility.yul\":10805:10824   */\n      swap1\n      pop\n        /* \"#utility.yul\":10464:10830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10836:11255   */\n    tag_193:\n        /* \"#utility.yul\":11002:11006   */\n      0x00\n        /* \"#utility.yul\":11040:11042   */\n      0x20\n        /* \"#utility.yul\":11029:11038   */\n      dup3\n        /* \"#utility.yul\":11025:11043   */\n      add\n        /* \"#utility.yul\":11017:11043   */\n      swap1\n      pop\n        /* \"#utility.yul\":11089:11098   */\n      dup2\n        /* \"#utility.yul\":11083:11087   */\n      dup2\n        /* \"#utility.yul\":11079:11099   */\n      sub\n        /* \"#utility.yul\":11075:11076   */\n      0x00\n        /* \"#utility.yul\":11064:11073   */\n      dup4\n        /* \"#utility.yul\":11060:11077   */\n      add\n        /* \"#utility.yul\":11053:11100   */\n      mstore\n        /* \"#utility.yul\":11117:11248   */\n      tag_654\n        /* \"#utility.yul\":11243:11247   */\n      dup2\n        /* \"#utility.yul\":11117:11248   */\n      tag_505\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":11109:11248   */\n      swap1\n      pop\n        /* \"#utility.yul\":10836:11255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11261:11433   */\n    tag_506:\n        /* \"#utility.yul\":11401:11425   */\n      0x48656c696f50726f76696465722f44697361626c656400000000000000000000\n        /* \"#utility.yul\":11397:11398   */\n      0x00\n        /* \"#utility.yul\":11389:11395   */\n      dup3\n        /* \"#utility.yul\":11385:11399   */\n      add\n        /* \"#utility.yul\":11378:11426   */\n      mstore\n        /* \"#utility.yul\":11261:11433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11439:11805   */\n    tag_507:\n        /* \"#utility.yul\":11581:11584   */\n      0x00\n        /* \"#utility.yul\":11602:11669   */\n      tag_657\n        /* \"#utility.yul\":11666:11668   */\n      0x16\n        /* \"#utility.yul\":11661:11664   */\n      dup4\n        /* \"#utility.yul\":11602:11669   */\n      tag_498\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":11595:11669   */\n      swap2\n      pop\n        /* \"#utility.yul\":11678:11771   */\n      tag_658\n        /* \"#utility.yul\":11767:11770   */\n      dup3\n        /* \"#utility.yul\":11678:11771   */\n      tag_506\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":11796:11798   */\n      0x20\n        /* \"#utility.yul\":11791:11794   */\n      dup3\n        /* \"#utility.yul\":11787:11799   */\n      add\n        /* \"#utility.yul\":11780:11799   */\n      swap1\n      pop\n        /* \"#utility.yul\":11439:11805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12230   */\n    tag_211:\n        /* \"#utility.yul\":11977:11981   */\n      0x00\n        /* \"#utility.yul\":12015:12017   */\n      0x20\n        /* \"#utility.yul\":12004:12013   */\n      dup3\n        /* \"#utility.yul\":12000:12018   */\n      add\n        /* \"#utility.yul\":11992:12018   */\n      swap1\n      pop\n        /* \"#utility.yul\":12064:12073   */\n      dup2\n        /* \"#utility.yul\":12058:12062   */\n      dup2\n        /* \"#utility.yul\":12054:12074   */\n      sub\n        /* \"#utility.yul\":12050:12051   */\n      0x00\n        /* \"#utility.yul\":12039:12048   */\n      dup4\n        /* \"#utility.yul\":12035:12052   */\n      add\n        /* \"#utility.yul\":12028:12075   */\n      mstore\n        /* \"#utility.yul\":12092:12223   */\n      tag_660\n        /* \"#utility.yul\":12218:12222   */\n      dup2\n        /* \"#utility.yul\":12092:12223   */\n      tag_507\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":12084:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":11811:12230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12469   */\n    tag_508:\n        /* \"#utility.yul\":12376:12410   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":12372:12373   */\n      0x00\n        /* \"#utility.yul\":12364:12370   */\n      dup3\n        /* \"#utility.yul\":12360:12374   */\n      add\n        /* \"#utility.yul\":12353:12411   */\n      mstore\n        /* \"#utility.yul\":12445:12461   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":12440:12442   */\n      0x20\n        /* \"#utility.yul\":12432:12438   */\n      dup3\n        /* \"#utility.yul\":12428:12443   */\n      add\n        /* \"#utility.yul\":12421:12462   */\n      mstore\n        /* \"#utility.yul\":12236:12469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12475:12841   */\n    tag_509:\n        /* \"#utility.yul\":12617:12620   */\n      0x00\n        /* \"#utility.yul\":12638:12705   */\n      tag_663\n        /* \"#utility.yul\":12702:12704   */\n      0x2e\n        /* \"#utility.yul\":12697:12700   */\n      dup4\n        /* \"#utility.yul\":12638:12705   */\n      tag_498\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":12631:12705   */\n      swap2\n      pop\n        /* \"#utility.yul\":12714:12807   */\n      tag_664\n        /* \"#utility.yul\":12803:12806   */\n      dup3\n        /* \"#utility.yul\":12714:12807   */\n      tag_508\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":12832:12834   */\n      0x40\n        /* \"#utility.yul\":12827:12830   */\n      dup3\n        /* \"#utility.yul\":12823:12835   */\n      add\n        /* \"#utility.yul\":12816:12835   */\n      swap1\n      pop\n        /* \"#utility.yul\":12475:12841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12847:13266   */\n    tag_278:\n        /* \"#utility.yul\":13013:13017   */\n      0x00\n        /* \"#utility.yul\":13051:13053   */\n      0x20\n        /* \"#utility.yul\":13040:13049   */\n      dup3\n        /* \"#utility.yul\":13036:13054   */\n      add\n        /* \"#utility.yul\":13028:13054   */\n      swap1\n      pop\n        /* \"#utility.yul\":13100:13109   */\n      dup2\n        /* \"#utility.yul\":13094:13098   */\n      dup2\n        /* \"#utility.yul\":13090:13110   */\n      sub\n        /* \"#utility.yul\":13086:13087   */\n      0x00\n        /* \"#utility.yul\":13075:13084   */\n      dup4\n        /* \"#utility.yul\":13071:13088   */\n      add\n        /* \"#utility.yul\":13064:13111   */\n      mstore\n        /* \"#utility.yul\":13128:13259   */\n      tag_666\n        /* \"#utility.yul\":13254:13258   */\n      dup2\n        /* \"#utility.yul\":13128:13259   */\n      tag_509\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":13120:13259   */\n      swap1\n      pop\n        /* \"#utility.yul\":12847:13266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13272:13357   */\n    tag_510:\n        /* \"#utility.yul\":13317:13324   */\n      0x00\n        /* \"#utility.yul\":13346:13351   */\n      dup2\n        /* \"#utility.yul\":13335:13351   */\n      swap1\n      pop\n        /* \"#utility.yul\":13272:13357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13363:13449   */\n    tag_511:\n        /* \"#utility.yul\":13398:13405   */\n      0x00\n        /* \"#utility.yul\":13438:13442   */\n      0xff\n        /* \"#utility.yul\":13431:13436   */\n      dup3\n        /* \"#utility.yul\":13427:13443   */\n      and\n        /* \"#utility.yul\":13416:13443   */\n      swap1\n      pop\n        /* \"#utility.yul\":13363:13449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13455:13609   */\n    tag_512:\n        /* \"#utility.yul\":13511:13520   */\n      0x00\n        /* \"#utility.yul\":13544:13603   */\n      tag_670\n        /* \"#utility.yul\":13560:13602   */\n      tag_671\n        /* \"#utility.yul\":13569:13601   */\n      tag_672\n        /* \"#utility.yul\":13595:13600   */\n      dup5\n        /* \"#utility.yul\":13569:13601   */\n      tag_510\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":13560:13602   */\n      tag_484\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":13544:13603   */\n      tag_511\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":13531:13603   */\n      swap1\n      pop\n        /* \"#utility.yul\":13455:13609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13615:13758   */\n    tag_513:\n        /* \"#utility.yul\":13708:13751   */\n      tag_674\n        /* \"#utility.yul\":13745:13750   */\n      dup2\n        /* \"#utility.yul\":13708:13751   */\n      tag_512\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":13703:13706   */\n      dup3\n        /* \"#utility.yul\":13696:13752   */\n      mstore\n        /* \"#utility.yul\":13615:13758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13764:13998   */\n    tag_290:\n        /* \"#utility.yul\":13863:13867   */\n      0x00\n        /* \"#utility.yul\":13901:13903   */\n      0x20\n        /* \"#utility.yul\":13890:13899   */\n      dup3\n        /* \"#utility.yul\":13886:13904   */\n      add\n        /* \"#utility.yul\":13878:13904   */\n      swap1\n      pop\n        /* \"#utility.yul\":13914:13991   */\n      tag_676\n        /* \"#utility.yul\":13988:13989   */\n      0x00\n        /* \"#utility.yul\":13977:13986   */\n      dup4\n        /* \"#utility.yul\":13973:13990   */\n      add\n        /* \"#utility.yul\":13964:13970   */\n      dup5\n        /* \"#utility.yul\":13914:13991   */\n      tag_513\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":13764:13998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14004:14175   */\n    tag_514:\n        /* \"#utility.yul\":14144:14167   */\n      0x4f70657261746f723a206e6f7420616c6c6f7765640000000000000000000000\n        /* \"#utility.yul\":14140:14141   */\n      0x00\n        /* \"#utility.yul\":14132:14138   */\n      dup3\n        /* \"#utility.yul\":14128:14142   */\n      add\n        /* \"#utility.yul\":14121:14168   */\n      mstore\n        /* \"#utility.yul\":14004:14175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14181:14547   */\n    tag_515:\n        /* \"#utility.yul\":14323:14326   */\n      0x00\n        /* \"#utility.yul\":14344:14411   */\n      tag_679\n        /* \"#utility.yul\":14408:14410   */\n      0x15\n        /* \"#utility.yul\":14403:14406   */\n      dup4\n        /* \"#utility.yul\":14344:14411   */\n      tag_498\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":14337:14411   */\n      swap2\n      pop\n        /* \"#utility.yul\":14420:14513   */\n      tag_680\n        /* \"#utility.yul\":14509:14512   */\n      dup3\n        /* \"#utility.yul\":14420:14513   */\n      tag_514\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":14538:14540   */\n      0x20\n        /* \"#utility.yul\":14533:14536   */\n      dup3\n        /* \"#utility.yul\":14529:14541   */\n      add\n        /* \"#utility.yul\":14522:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14181:14547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14553:14972   */\n    tag_318:\n        /* \"#utility.yul\":14719:14723   */\n      0x00\n        /* \"#utility.yul\":14757:14759   */\n      0x20\n        /* \"#utility.yul\":14746:14755   */\n      dup3\n        /* \"#utility.yul\":14742:14760   */\n      add\n        /* \"#utility.yul\":14734:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14806:14815   */\n      dup2\n        /* \"#utility.yul\":14800:14804   */\n      dup2\n        /* \"#utility.yul\":14796:14816   */\n      sub\n        /* \"#utility.yul\":14792:14793   */\n      0x00\n        /* \"#utility.yul\":14781:14790   */\n      dup4\n        /* \"#utility.yul\":14777:14794   */\n      add\n        /* \"#utility.yul\":14770:14817   */\n      mstore\n        /* \"#utility.yul\":14834:14965   */\n      tag_682\n        /* \"#utility.yul\":14960:14964   */\n      dup2\n        /* \"#utility.yul\":14834:14965   */\n      tag_515\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":14826:14965   */\n      swap1\n      pop\n        /* \"#utility.yul\":14553:14972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14978:15203   */\n    tag_516:\n        /* \"#utility.yul\":15118:15152   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15114:15115   */\n      0x00\n        /* \"#utility.yul\":15106:15112   */\n      dup3\n        /* \"#utility.yul\":15102:15116   */\n      add\n        /* \"#utility.yul\":15095:15153   */\n      mstore\n        /* \"#utility.yul\":15187:15195   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15182:15184   */\n      0x20\n        /* \"#utility.yul\":15174:15180   */\n      dup3\n        /* \"#utility.yul\":15170:15185   */\n      add\n        /* \"#utility.yul\":15163:15196   */\n      mstore\n        /* \"#utility.yul\":14978:15203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15209:15575   */\n    tag_517:\n        /* \"#utility.yul\":15351:15354   */\n      0x00\n        /* \"#utility.yul\":15372:15439   */\n      tag_685\n        /* \"#utility.yul\":15436:15438   */\n      0x26\n        /* \"#utility.yul\":15431:15434   */\n      dup4\n        /* \"#utility.yul\":15372:15439   */\n      tag_498\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":15365:15439   */\n      swap2\n      pop\n        /* \"#utility.yul\":15448:15541   */\n      tag_686\n        /* \"#utility.yul\":15537:15540   */\n      dup3\n        /* \"#utility.yul\":15448:15541   */\n      tag_516\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":15566:15568   */\n      0x40\n        /* \"#utility.yul\":15561:15564   */\n      dup3\n        /* \"#utility.yul\":15557:15569   */\n      add\n        /* \"#utility.yul\":15550:15569   */\n      swap1\n      pop\n        /* \"#utility.yul\":15209:15575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15581:16000   */\n    tag_330:\n        /* \"#utility.yul\":15747:15751   */\n      0x00\n        /* \"#utility.yul\":15785:15787   */\n      0x20\n        /* \"#utility.yul\":15774:15783   */\n      dup3\n        /* \"#utility.yul\":15770:15788   */\n      add\n        /* \"#utility.yul\":15762:15788   */\n      swap1\n      pop\n        /* \"#utility.yul\":15834:15843   */\n      dup2\n        /* \"#utility.yul\":15828:15832   */\n      dup2\n        /* \"#utility.yul\":15824:15844   */\n      sub\n        /* \"#utility.yul\":15820:15821   */\n      0x00\n        /* \"#utility.yul\":15809:15818   */\n      dup4\n        /* \"#utility.yul\":15805:15822   */\n      add\n        /* \"#utility.yul\":15798:15845   */\n      mstore\n        /* \"#utility.yul\":15862:15993   */\n      tag_688\n        /* \"#utility.yul\":15988:15992   */\n      dup2\n        /* \"#utility.yul\":15862:15993   */\n      tag_517\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":15854:15993   */\n      swap1\n      pop\n        /* \"#utility.yul\":15581:16000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16006:16172   */\n    tag_518:\n        /* \"#utility.yul\":16146:16164   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":16142:16143   */\n      0x00\n        /* \"#utility.yul\":16134:16140   */\n      dup3\n        /* \"#utility.yul\":16130:16144   */\n      add\n        /* \"#utility.yul\":16123:16165   */\n      mstore\n        /* \"#utility.yul\":16006:16172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16178:16544   */\n    tag_519:\n        /* \"#utility.yul\":16320:16323   */\n      0x00\n        /* \"#utility.yul\":16341:16408   */\n      tag_691\n        /* \"#utility.yul\":16405:16407   */\n      0x10\n        /* \"#utility.yul\":16400:16403   */\n      dup4\n        /* \"#utility.yul\":16341:16408   */\n      tag_498\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":16334:16408   */\n      swap2\n      pop\n        /* \"#utility.yul\":16417:16510   */\n      tag_692\n        /* \"#utility.yul\":16506:16509   */\n      dup3\n        /* \"#utility.yul\":16417:16510   */\n      tag_518\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":16535:16537   */\n      0x20\n        /* \"#utility.yul\":16530:16533   */\n      dup3\n        /* \"#utility.yul\":16526:16538   */\n      add\n        /* \"#utility.yul\":16519:16538   */\n      swap1\n      pop\n        /* \"#utility.yul\":16178:16544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16550:16969   */\n    tag_341:\n        /* \"#utility.yul\":16716:16720   */\n      0x00\n        /* \"#utility.yul\":16754:16756   */\n      0x20\n        /* \"#utility.yul\":16743:16752   */\n      dup3\n        /* \"#utility.yul\":16739:16757   */\n      add\n        /* \"#utility.yul\":16731:16757   */\n      swap1\n      pop\n        /* \"#utility.yul\":16803:16812   */\n      dup2\n        /* \"#utility.yul\":16797:16801   */\n      dup2\n        /* \"#utility.yul\":16793:16813   */\n      sub\n        /* \"#utility.yul\":16789:16790   */\n      0x00\n        /* \"#utility.yul\":16778:16787   */\n      dup4\n        /* \"#utility.yul\":16774:16791   */\n      add\n        /* \"#utility.yul\":16767:16814   */\n      mstore\n        /* \"#utility.yul\":16831:16962   */\n      tag_694\n        /* \"#utility.yul\":16957:16961   */\n      dup2\n        /* \"#utility.yul\":16831:16962   */\n      tag_519\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":16823:16962   */\n      swap1\n      pop\n        /* \"#utility.yul\":16550:16969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16975:17417   */\n    tag_344:\n        /* \"#utility.yul\":17124:17128   */\n      0x00\n        /* \"#utility.yul\":17162:17164   */\n      0x60\n        /* \"#utility.yul\":17151:17160   */\n      dup3\n        /* \"#utility.yul\":17147:17165   */\n      add\n        /* \"#utility.yul\":17139:17165   */\n      swap1\n      pop\n        /* \"#utility.yul\":17175:17246   */\n      tag_696\n        /* \"#utility.yul\":17243:17244   */\n      0x00\n        /* \"#utility.yul\":17232:17241   */\n      dup4\n        /* \"#utility.yul\":17228:17245   */\n      add\n        /* \"#utility.yul\":17219:17225   */\n      dup7\n        /* \"#utility.yul\":17175:17246   */\n      tag_495\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":17256:17328   */\n      tag_697\n        /* \"#utility.yul\":17324:17326   */\n      0x20\n        /* \"#utility.yul\":17313:17322   */\n      dup4\n        /* \"#utility.yul\":17309:17327   */\n      add\n        /* \"#utility.yul\":17300:17306   */\n      dup6\n        /* \"#utility.yul\":17256:17328   */\n      tag_495\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":17338:17410   */\n      tag_698\n        /* \"#utility.yul\":17406:17408   */\n      0x40\n        /* \"#utility.yul\":17395:17404   */\n      dup4\n        /* \"#utility.yul\":17391:17409   */\n      add\n        /* \"#utility.yul\":17382:17388   */\n      dup5\n        /* \"#utility.yul\":17338:17410   */\n      tag_483\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":16975:17417   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17423:17605   */\n    tag_520:\n        /* \"#utility.yul\":17563:17597   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17559:17560   */\n      0x00\n        /* \"#utility.yul\":17551:17557   */\n      dup3\n        /* \"#utility.yul\":17547:17561   */\n      add\n        /* \"#utility.yul\":17540:17598   */\n      mstore\n        /* \"#utility.yul\":17423:17605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17611:17977   */\n    tag_521:\n        /* \"#utility.yul\":17753:17756   */\n      0x00\n        /* \"#utility.yul\":17774:17841   */\n      tag_701\n        /* \"#utility.yul\":17838:17840   */\n      0x20\n        /* \"#utility.yul\":17833:17836   */\n      dup4\n        /* \"#utility.yul\":17774:17841   */\n      tag_498\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":17767:17841   */\n      swap2\n      pop\n        /* \"#utility.yul\":17850:17943   */\n      tag_702\n        /* \"#utility.yul\":17939:17942   */\n      dup3\n        /* \"#utility.yul\":17850:17943   */\n      tag_520\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":17968:17970   */\n      0x20\n        /* \"#utility.yul\":17963:17966   */\n      dup3\n        /* \"#utility.yul\":17959:17971   */\n      add\n        /* \"#utility.yul\":17952:17971   */\n      swap1\n      pop\n        /* \"#utility.yul\":17611:17977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17983:18402   */\n    tag_358:\n        /* \"#utility.yul\":18149:18153   */\n      0x00\n        /* \"#utility.yul\":18187:18189   */\n      0x20\n        /* \"#utility.yul\":18176:18185   */\n      dup3\n        /* \"#utility.yul\":18172:18190   */\n      add\n        /* \"#utility.yul\":18164:18190   */\n      swap1\n      pop\n        /* \"#utility.yul\":18236:18245   */\n      dup2\n        /* \"#utility.yul\":18230:18234   */\n      dup2\n        /* \"#utility.yul\":18226:18246   */\n      sub\n        /* \"#utility.yul\":18222:18223   */\n      0x00\n        /* \"#utility.yul\":18211:18220   */\n      dup4\n        /* \"#utility.yul\":18207:18224   */\n      add\n        /* \"#utility.yul\":18200:18247   */\n      mstore\n        /* \"#utility.yul\":18264:18395   */\n      tag_704\n        /* \"#utility.yul\":18390:18394   */\n      dup2\n        /* \"#utility.yul\":18264:18395   */\n      tag_521\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":18256:18395   */\n      swap1\n      pop\n        /* \"#utility.yul\":17983:18402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18408:18740   */\n    tag_362:\n        /* \"#utility.yul\":18529:18533   */\n      0x00\n        /* \"#utility.yul\":18567:18569   */\n      0x40\n        /* \"#utility.yul\":18556:18565   */\n      dup3\n        /* \"#utility.yul\":18552:18570   */\n      add\n        /* \"#utility.yul\":18544:18570   */\n      swap1\n      pop\n        /* \"#utility.yul\":18580:18651   */\n      tag_706\n        /* \"#utility.yul\":18648:18649   */\n      0x00\n        /* \"#utility.yul\":18637:18646   */\n      dup4\n        /* \"#utility.yul\":18633:18650   */\n      add\n        /* \"#utility.yul\":18624:18630   */\n      dup6\n        /* \"#utility.yul\":18580:18651   */\n      tag_495\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":18661:18733   */\n      tag_707\n        /* \"#utility.yul\":18729:18731   */\n      0x20\n        /* \"#utility.yul\":18718:18727   */\n      dup4\n        /* \"#utility.yul\":18714:18732   */\n      add\n        /* \"#utility.yul\":18705:18711   */\n      dup5\n        /* \"#utility.yul\":18661:18733   */\n      tag_495\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":18408:18740   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18746:18987   */\n    tag_522:\n        /* \"#utility.yul\":18886:18920   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":18882:18883   */\n      0x00\n        /* \"#utility.yul\":18874:18880   */\n      dup3\n        /* \"#utility.yul\":18870:18884   */\n      add\n        /* \"#utility.yul\":18863:18921   */\n      mstore\n        /* \"#utility.yul\":18955:18979   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":18950:18952   */\n      0x20\n        /* \"#utility.yul\":18942:18948   */\n      dup3\n        /* \"#utility.yul\":18938:18953   */\n      add\n        /* \"#utility.yul\":18931:18980   */\n      mstore\n        /* \"#utility.yul\":18746:18987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18993:19359   */\n    tag_523:\n        /* \"#utility.yul\":19135:19138   */\n      0x00\n        /* \"#utility.yul\":19156:19223   */\n      tag_710\n        /* \"#utility.yul\":19220:19222   */\n      0x36\n        /* \"#utility.yul\":19215:19218   */\n      dup4\n        /* \"#utility.yul\":19156:19223   */\n      tag_498\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":19149:19223   */\n      swap2\n      pop\n        /* \"#utility.yul\":19232:19325   */\n      tag_711\n        /* \"#utility.yul\":19321:19324   */\n      dup3\n        /* \"#utility.yul\":19232:19325   */\n      tag_522\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":19350:19352   */\n      0x40\n        /* \"#utility.yul\":19345:19348   */\n      dup3\n        /* \"#utility.yul\":19341:19353   */\n      add\n        /* \"#utility.yul\":19334:19353   */\n      swap1\n      pop\n        /* \"#utility.yul\":18993:19359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19365:19784   */\n    tag_368:\n        /* \"#utility.yul\":19531:19535   */\n      0x00\n        /* \"#utility.yul\":19569:19571   */\n      0x20\n        /* \"#utility.yul\":19558:19567   */\n      dup3\n        /* \"#utility.yul\":19554:19572   */\n      add\n        /* \"#utility.yul\":19546:19572   */\n      swap1\n      pop\n        /* \"#utility.yul\":19618:19627   */\n      dup2\n        /* \"#utility.yul\":19612:19616   */\n      dup2\n        /* \"#utility.yul\":19608:19628   */\n      sub\n        /* \"#utility.yul\":19604:19605   */\n      0x00\n        /* \"#utility.yul\":19593:19602   */\n      dup4\n        /* \"#utility.yul\":19589:19606   */\n      add\n        /* \"#utility.yul\":19582:19629   */\n      mstore\n        /* \"#utility.yul\":19646:19777   */\n      tag_713\n        /* \"#utility.yul\":19772:19776   */\n      dup2\n        /* \"#utility.yul\":19646:19777   */\n      tag_523\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":19638:19777   */\n      swap1\n      pop\n        /* \"#utility.yul\":19365:19784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19790:20020   */\n    tag_524:\n        /* \"#utility.yul\":19930:19964   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":19926:19927   */\n      0x00\n        /* \"#utility.yul\":19918:19924   */\n      dup3\n        /* \"#utility.yul\":19914:19928   */\n      add\n        /* \"#utility.yul\":19907:19965   */\n      mstore\n        /* \"#utility.yul\":19999:20012   */\n      0x6e697469616c697a696e67000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19994:19996   */\n      0x20\n        /* \"#utility.yul\":19986:19992   */\n      dup3\n        /* \"#utility.yul\":19982:19997   */\n      add\n        /* \"#utility.yul\":19975:20013   */\n      mstore\n        /* \"#utility.yul\":19790:20020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20026:20392   */\n    tag_525:\n        /* \"#utility.yul\":20168:20171   */\n      0x00\n        /* \"#utility.yul\":20189:20256   */\n      tag_716\n        /* \"#utility.yul\":20253:20255   */\n      0x2b\n        /* \"#utility.yul\":20248:20251   */\n      dup4\n        /* \"#utility.yul\":20189:20256   */\n      tag_498\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":20182:20256   */\n      swap2\n      pop\n        /* \"#utility.yul\":20265:20358   */\n      tag_717\n        /* \"#utility.yul\":20354:20357   */\n      dup3\n        /* \"#utility.yul\":20265:20358   */\n      tag_524\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":20383:20385   */\n      0x40\n        /* \"#utility.yul\":20378:20381   */\n      dup3\n        /* \"#utility.yul\":20374:20386   */\n      add\n        /* \"#utility.yul\":20367:20386   */\n      swap1\n      pop\n        /* \"#utility.yul\":20026:20392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20398:20817   */\n    tag_391:\n        /* \"#utility.yul\":20564:20568   */\n      0x00\n        /* \"#utility.yul\":20602:20604   */\n      0x20\n        /* \"#utility.yul\":20591:20600   */\n      dup3\n        /* \"#utility.yul\":20587:20605   */\n      add\n        /* \"#utility.yul\":20579:20605   */\n      swap1\n      pop\n        /* \"#utility.yul\":20651:20660   */\n      dup2\n        /* \"#utility.yul\":20645:20649   */\n      dup2\n        /* \"#utility.yul\":20641:20661   */\n      sub\n        /* \"#utility.yul\":20637:20638   */\n      0x00\n        /* \"#utility.yul\":20626:20635   */\n      dup4\n        /* \"#utility.yul\":20622:20639   */\n      add\n        /* \"#utility.yul\":20615:20662   */\n      mstore\n        /* \"#utility.yul\":20679:20810   */\n      tag_719\n        /* \"#utility.yul\":20805:20809   */\n      dup2\n        /* \"#utility.yul\":20679:20810   */\n      tag_525\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":20671:20810   */\n      swap1\n      pop\n        /* \"#utility.yul\":20398:20817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20823:20939   */\n    tag_526:\n        /* \"#utility.yul\":20893:20914   */\n      tag_721\n        /* \"#utility.yul\":20908:20913   */\n      dup2\n        /* \"#utility.yul\":20893:20914   */\n      tag_491\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":20886:20891   */\n      dup2\n        /* \"#utility.yul\":20883:20915   */\n      eq\n        /* \"#utility.yul\":20873:20933   */\n      tag_722\n      jumpi\n        /* \"#utility.yul\":20929:20930   */\n      0x00\n        /* \"#utility.yul\":20926:20927   */\n      dup1\n        /* \"#utility.yul\":20919:20931   */\n      revert\n        /* \"#utility.yul\":20873:20933   */\n    tag_722:\n        /* \"#utility.yul\":20823:20939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20945:21082   */\n    tag_527:\n        /* \"#utility.yul\":20999:21004   */\n      0x00\n        /* \"#utility.yul\":21030:21036   */\n      dup2\n        /* \"#utility.yul\":21024:21037   */\n      mload\n        /* \"#utility.yul\":21015:21037   */\n      swap1\n      pop\n        /* \"#utility.yul\":21046:21076   */\n      tag_724\n        /* \"#utility.yul\":21070:21075   */\n      dup2\n        /* \"#utility.yul\":21046:21076   */\n      tag_526\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":20945:21082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21088:21433   */\n    tag_419:\n        /* \"#utility.yul\":21155:21161   */\n      0x00\n        /* \"#utility.yul\":21204:21206   */\n      0x20\n        /* \"#utility.yul\":21192:21201   */\n      dup3\n        /* \"#utility.yul\":21183:21190   */\n      dup5\n        /* \"#utility.yul\":21179:21202   */\n      sub\n        /* \"#utility.yul\":21175:21207   */\n      slt\n        /* \"#utility.yul\":21172:21291   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":21210:21289   */\n      tag_727\n      tag_474\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":21172:21291   */\n    tag_726:\n        /* \"#utility.yul\":21330:21331   */\n      0x00\n        /* \"#utility.yul\":21355:21416   */\n      tag_728\n        /* \"#utility.yul\":21408:21415   */\n      dup5\n        /* \"#utility.yul\":21399:21405   */\n      dup3\n        /* \"#utility.yul\":21388:21397   */\n      dup6\n        /* \"#utility.yul\":21384:21406   */\n      add\n        /* \"#utility.yul\":21355:21416   */\n      tag_527\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":21345:21416   */\n      swap2\n      pop\n        /* \"#utility.yul\":21301:21426   */\n      pop\n        /* \"#utility.yul\":21088:21433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21439:21668   */\n    tag_528:\n        /* \"#utility.yul\":21579:21613   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21575:21576   */\n      0x00\n        /* \"#utility.yul\":21567:21573   */\n      dup3\n        /* \"#utility.yul\":21563:21577   */\n      add\n        /* \"#utility.yul\":21556:21614   */\n      mstore\n        /* \"#utility.yul\":21648:21660   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21643:21645   */\n      0x20\n        /* \"#utility.yul\":21635:21641   */\n      dup3\n        /* \"#utility.yul\":21631:21646   */\n      add\n        /* \"#utility.yul\":21624:21661   */\n      mstore\n        /* \"#utility.yul\":21439:21668   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21674:22040   */\n    tag_529:\n        /* \"#utility.yul\":21816:21819   */\n      0x00\n        /* \"#utility.yul\":21837:21904   */\n      tag_731\n        /* \"#utility.yul\":21901:21903   */\n      0x2a\n        /* \"#utility.yul\":21896:21899   */\n      dup4\n        /* \"#utility.yul\":21837:21904   */\n      tag_498\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":21830:21904   */\n      swap2\n      pop\n        /* \"#utility.yul\":21913:22006   */\n      tag_732\n        /* \"#utility.yul\":22002:22005   */\n      dup3\n        /* \"#utility.yul\":21913:22006   */\n      tag_528\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":22031:22033   */\n      0x40\n        /* \"#utility.yul\":22026:22029   */\n      dup3\n        /* \"#utility.yul\":22022:22034   */\n      add\n        /* \"#utility.yul\":22015:22034   */\n      swap1\n      pop\n        /* \"#utility.yul\":21674:22040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22046:22465   */\n    tag_422:\n        /* \"#utility.yul\":22212:22216   */\n      0x00\n        /* \"#utility.yul\":22250:22252   */\n      0x20\n        /* \"#utility.yul\":22239:22248   */\n      dup3\n        /* \"#utility.yul\":22235:22253   */\n      add\n        /* \"#utility.yul\":22227:22253   */\n      swap1\n      pop\n        /* \"#utility.yul\":22299:22308   */\n      dup2\n        /* \"#utility.yul\":22293:22297   */\n      dup2\n        /* \"#utility.yul\":22289:22309   */\n      sub\n        /* \"#utility.yul\":22285:22286   */\n      0x00\n        /* \"#utility.yul\":22274:22283   */\n      dup4\n        /* \"#utility.yul\":22270:22287   */\n      add\n        /* \"#utility.yul\":22263:22310   */\n      mstore\n        /* \"#utility.yul\":22327:22458   */\n      tag_734\n        /* \"#utility.yul\":22453:22457   */\n      dup2\n        /* \"#utility.yul\":22327:22458   */\n      tag_529\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":22319:22458   */\n      swap1\n      pop\n        /* \"#utility.yul\":22046:22465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22471:22641   */\n    tag_530:\n        /* \"#utility.yul\":22611:22633   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":22607:22608   */\n      0x00\n        /* \"#utility.yul\":22599:22605   */\n      dup3\n        /* \"#utility.yul\":22595:22609   */\n      add\n        /* \"#utility.yul\":22588:22634   */\n      mstore\n        /* \"#utility.yul\":22471:22641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22647:23013   */\n    tag_531:\n        /* \"#utility.yul\":22789:22792   */\n      0x00\n        /* \"#utility.yul\":22810:22877   */\n      tag_737\n        /* \"#utility.yul\":22874:22876   */\n      0x14\n        /* \"#utility.yul\":22869:22872   */\n      dup4\n        /* \"#utility.yul\":22810:22877   */\n      tag_498\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":22803:22877   */\n      swap2\n      pop\n        /* \"#utility.yul\":22886:22979   */\n      tag_738\n        /* \"#utility.yul\":22975:22978   */\n      dup3\n        /* \"#utility.yul\":22886:22979   */\n      tag_530\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":23004:23006   */\n      0x20\n        /* \"#utility.yul\":22999:23002   */\n      dup3\n        /* \"#utility.yul\":22995:23007   */\n      add\n        /* \"#utility.yul\":22988:23007   */\n      swap1\n      pop\n        /* \"#utility.yul\":22647:23013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23019:23438   */\n    tag_441:\n        /* \"#utility.yul\":23185:23189   */\n      0x00\n        /* \"#utility.yul\":23223:23225   */\n      0x20\n        /* \"#utility.yul\":23212:23221   */\n      dup3\n        /* \"#utility.yul\":23208:23226   */\n      add\n        /* \"#utility.yul\":23200:23226   */\n      swap1\n      pop\n        /* \"#utility.yul\":23272:23281   */\n      dup2\n        /* \"#utility.yul\":23266:23270   */\n      dup2\n        /* \"#utility.yul\":23262:23282   */\n      sub\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23247:23256   */\n      dup4\n        /* \"#utility.yul\":23243:23260   */\n      add\n        /* \"#utility.yul\":23236:23283   */\n      mstore\n        /* \"#utility.yul\":23300:23431   */\n      tag_740\n        /* \"#utility.yul\":23426:23430   */\n      dup2\n        /* \"#utility.yul\":23300:23431   */\n      tag_531\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":23292:23431   */\n      swap1\n      pop\n        /* \"#utility.yul\":23019:23438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23444:23669   */\n    tag_532:\n        /* \"#utility.yul\":23584:23618   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23580:23581   */\n      0x00\n        /* \"#utility.yul\":23572:23578   */\n      dup3\n        /* \"#utility.yul\":23568:23582   */\n      add\n        /* \"#utility.yul\":23561:23619   */\n      mstore\n        /* \"#utility.yul\":23653:23661   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23648:23650   */\n      0x20\n        /* \"#utility.yul\":23640:23646   */\n      dup3\n        /* \"#utility.yul\":23636:23651   */\n      add\n        /* \"#utility.yul\":23629:23662   */\n      mstore\n        /* \"#utility.yul\":23444:23669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23675:24041   */\n    tag_533:\n        /* \"#utility.yul\":23817:23820   */\n      0x00\n        /* \"#utility.yul\":23838:23905   */\n      tag_743\n        /* \"#utility.yul\":23902:23904   */\n      0x26\n        /* \"#utility.yul\":23897:23900   */\n      dup4\n        /* \"#utility.yul\":23838:23905   */\n      tag_498\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":23831:23905   */\n      swap2\n      pop\n        /* \"#utility.yul\":23914:24007   */\n      tag_744\n        /* \"#utility.yul\":24003:24006   */\n      dup3\n        /* \"#utility.yul\":23914:24007   */\n      tag_532\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":24032:24034   */\n      0x40\n        /* \"#utility.yul\":24027:24030   */\n      dup3\n        /* \"#utility.yul\":24023:24035   */\n      add\n        /* \"#utility.yul\":24016:24035   */\n      swap1\n      pop\n        /* \"#utility.yul\":23675:24041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24047:24466   */\n    tag_448:\n        /* \"#utility.yul\":24213:24217   */\n      0x00\n        /* \"#utility.yul\":24251:24253   */\n      0x20\n        /* \"#utility.yul\":24240:24249   */\n      dup3\n        /* \"#utility.yul\":24236:24254   */\n      add\n        /* \"#utility.yul\":24228:24254   */\n      swap1\n      pop\n        /* \"#utility.yul\":24300:24309   */\n      dup2\n        /* \"#utility.yul\":24294:24298   */\n      dup2\n        /* \"#utility.yul\":24290:24310   */\n      sub\n        /* \"#utility.yul\":24286:24287   */\n      0x00\n        /* \"#utility.yul\":24275:24284   */\n      dup4\n        /* \"#utility.yul\":24271:24288   */\n      add\n        /* \"#utility.yul\":24264:24311   */\n      mstore\n        /* \"#utility.yul\":24328:24459   */\n      tag_746\n        /* \"#utility.yul\":24454:24458   */\n      dup2\n        /* \"#utility.yul\":24328:24459   */\n      tag_533\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":24320:24459   */\n      swap1\n      pop\n        /* \"#utility.yul\":24047:24466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24472:24570   */\n    tag_534:\n        /* \"#utility.yul\":24523:24529   */\n      0x00\n        /* \"#utility.yul\":24557:24562   */\n      dup2\n        /* \"#utility.yul\":24551:24563   */\n      mload\n        /* \"#utility.yul\":24541:24563   */\n      swap1\n      pop\n        /* \"#utility.yul\":24472:24570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24576:24723   */\n    tag_535:\n        /* \"#utility.yul\":24677:24688   */\n      0x00\n        /* \"#utility.yul\":24714:24717   */\n      dup2\n        /* \"#utility.yul\":24699:24717   */\n      swap1\n      pop\n        /* \"#utility.yul\":24576:24723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24729:25036   */\n    tag_536:\n        /* \"#utility.yul\":24797:24798   */\n      0x00\n        /* \"#utility.yul\":24807:24920   */\n    tag_750:\n        /* \"#utility.yul\":24821:24827   */\n      dup4\n        /* \"#utility.yul\":24818:24819   */\n      dup2\n        /* \"#utility.yul\":24815:24828   */\n      lt\n        /* \"#utility.yul\":24807:24920   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":24906:24907   */\n      dup1\n        /* \"#utility.yul\":24901:24904   */\n      dup3\n        /* \"#utility.yul\":24897:24908   */\n      add\n        /* \"#utility.yul\":24891:24909   */\n      mload\n        /* \"#utility.yul\":24887:24888   */\n      dup2\n        /* \"#utility.yul\":24882:24885   */\n      dup5\n        /* \"#utility.yul\":24878:24889   */\n      add\n        /* \"#utility.yul\":24871:24910   */\n      mstore\n        /* \"#utility.yul\":24843:24845   */\n      0x20\n        /* \"#utility.yul\":24840:24841   */\n      dup2\n        /* \"#utility.yul\":24836:24846   */\n      add\n        /* \"#utility.yul\":24831:24846   */\n      swap1\n      pop\n        /* \"#utility.yul\":24807:24920   */\n      jump(tag_750)\n    tag_752:\n        /* \"#utility.yul\":24938:24944   */\n      dup4\n        /* \"#utility.yul\":24935:24936   */\n      dup2\n        /* \"#utility.yul\":24932:24945   */\n      gt\n        /* \"#utility.yul\":24929:25030   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":25018:25019   */\n      0x00\n        /* \"#utility.yul\":25009:25015   */\n      dup5\n        /* \"#utility.yul\":25004:25007   */\n      dup5\n        /* \"#utility.yul\":25000:25016   */\n      add\n        /* \"#utility.yul\":24993:25020   */\n      mstore\n        /* \"#utility.yul\":24929:25030   */\n    tag_753:\n        /* \"#utility.yul\":24778:25036   */\n      pop\n        /* \"#utility.yul\":24729:25036   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25042:25415   */\n    tag_537:\n        /* \"#utility.yul\":25146:25149   */\n      0x00\n        /* \"#utility.yul\":25174:25212   */\n      tag_755\n        /* \"#utility.yul\":25206:25211   */\n      dup3\n        /* \"#utility.yul\":25174:25212   */\n      tag_534\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":25228:25316   */\n      tag_756\n        /* \"#utility.yul\":25309:25315   */\n      dup2\n        /* \"#utility.yul\":25304:25307   */\n      dup6\n        /* \"#utility.yul\":25228:25316   */\n      tag_535\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":25221:25316   */\n      swap4\n      pop\n        /* \"#utility.yul\":25325:25377   */\n      tag_757\n        /* \"#utility.yul\":25370:25376   */\n      dup2\n        /* \"#utility.yul\":25365:25368   */\n      dup6\n        /* \"#utility.yul\":25358:25362   */\n      0x20\n        /* \"#utility.yul\":25351:25356   */\n      dup7\n        /* \"#utility.yul\":25347:25363   */\n      add\n        /* \"#utility.yul\":25325:25377   */\n      tag_536\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":25402:25408   */\n      dup1\n        /* \"#utility.yul\":25397:25400   */\n      dup5\n        /* \"#utility.yul\":25393:25409   */\n      add\n        /* \"#utility.yul\":25386:25409   */\n      swap2\n      pop\n        /* \"#utility.yul\":25150:25415   */\n      pop\n        /* \"#utility.yul\":25042:25415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25421:25692   */\n    tag_450:\n        /* \"#utility.yul\":25551:25554   */\n      0x00\n        /* \"#utility.yul\":25573:25666   */\n      tag_759\n        /* \"#utility.yul\":25662:25665   */\n      dup3\n        /* \"#utility.yul\":25653:25659   */\n      dup5\n        /* \"#utility.yul\":25573:25666   */\n      tag_537\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":25566:25666   */\n      swap2\n      pop\n        /* \"#utility.yul\":25683:25686   */\n      dup2\n        /* \"#utility.yul\":25676:25686   */\n      swap1\n      pop\n        /* \"#utility.yul\":25421:25692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25698:25877   */\n    tag_538:\n        /* \"#utility.yul\":25838:25869   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":25834:25835   */\n      0x00\n        /* \"#utility.yul\":25826:25832   */\n      dup3\n        /* \"#utility.yul\":25822:25836   */\n      add\n        /* \"#utility.yul\":25815:25870   */\n      mstore\n        /* \"#utility.yul\":25698:25877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25883:26249   */\n    tag_539:\n        /* \"#utility.yul\":26025:26028   */\n      0x00\n        /* \"#utility.yul\":26046:26113   */\n      tag_762\n        /* \"#utility.yul\":26110:26112   */\n      0x1d\n        /* \"#utility.yul\":26105:26108   */\n      dup4\n        /* \"#utility.yul\":26046:26113   */\n      tag_498\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":26039:26113   */\n      swap2\n      pop\n        /* \"#utility.yul\":26122:26215   */\n      tag_763\n        /* \"#utility.yul\":26211:26214   */\n      dup3\n        /* \"#utility.yul\":26122:26215   */\n      tag_538\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":26240:26242   */\n      0x20\n        /* \"#utility.yul\":26235:26238   */\n      dup3\n        /* \"#utility.yul\":26231:26243   */\n      add\n        /* \"#utility.yul\":26224:26243   */\n      swap1\n      pop\n        /* \"#utility.yul\":25883:26249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26255:26674   */\n    tag_463:\n        /* \"#utility.yul\":26421:26425   */\n      0x00\n        /* \"#utility.yul\":26459:26461   */\n      0x20\n        /* \"#utility.yul\":26448:26457   */\n      dup3\n        /* \"#utility.yul\":26444:26462   */\n      add\n        /* \"#utility.yul\":26436:26462   */\n      swap1\n      pop\n        /* \"#utility.yul\":26508:26517   */\n      dup2\n        /* \"#utility.yul\":26502:26506   */\n      dup2\n        /* \"#utility.yul\":26498:26518   */\n      sub\n        /* \"#utility.yul\":26494:26495   */\n      0x00\n        /* \"#utility.yul\":26483:26492   */\n      dup4\n        /* \"#utility.yul\":26479:26496   */\n      add\n        /* \"#utility.yul\":26472:26519   */\n      mstore\n        /* \"#utility.yul\":26536:26667   */\n      tag_765\n        /* \"#utility.yul\":26662:26666   */\n      dup2\n        /* \"#utility.yul\":26536:26667   */\n      tag_539\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":26528:26667   */\n      swap1\n      pop\n        /* \"#utility.yul\":26255:26674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26680:26779   */\n    tag_540:\n        /* \"#utility.yul\":26732:26738   */\n      0x00\n        /* \"#utility.yul\":26766:26771   */\n      dup2\n        /* \"#utility.yul\":26760:26772   */\n      mload\n        /* \"#utility.yul\":26750:26772   */\n      swap1\n      pop\n        /* \"#utility.yul\":26680:26779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26785:26887   */\n    tag_541:\n        /* \"#utility.yul\":26826:26832   */\n      0x00\n        /* \"#utility.yul\":26877:26879   */\n      0x1f\n        /* \"#utility.yul\":26873:26880   */\n      not\n        /* \"#utility.yul\":26868:26870   */\n      0x1f\n        /* \"#utility.yul\":26861:26866   */\n      dup4\n        /* \"#utility.yul\":26857:26871   */\n      add\n        /* \"#utility.yul\":26853:26881   */\n      and\n        /* \"#utility.yul\":26843:26881   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26893:27257   */\n    tag_542:\n        /* \"#utility.yul\":26981:26984   */\n      0x00\n        /* \"#utility.yul\":27009:27048   */\n      tag_769\n        /* \"#utility.yul\":27042:27047   */\n      dup3\n        /* \"#utility.yul\":27009:27048   */\n      tag_540\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":27064:27135   */\n      tag_770\n        /* \"#utility.yul\":27128:27134   */\n      dup2\n        /* \"#utility.yul\":27123:27126   */\n      dup6\n        /* \"#utility.yul\":27064:27135   */\n      tag_498\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":27057:27135   */\n      swap4\n      pop\n        /* \"#utility.yul\":27144:27196   */\n      tag_771\n        /* \"#utility.yul\":27189:27195   */\n      dup2\n        /* \"#utility.yul\":27184:27187   */\n      dup6\n        /* \"#utility.yul\":27177:27181   */\n      0x20\n        /* \"#utility.yul\":27170:27175   */\n      dup7\n        /* \"#utility.yul\":27166:27182   */\n      add\n        /* \"#utility.yul\":27144:27196   */\n      tag_536\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":27221:27250   */\n      tag_772\n        /* \"#utility.yul\":27243:27249   */\n      dup2\n        /* \"#utility.yul\":27221:27250   */\n      tag_541\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":27216:27219   */\n      dup5\n        /* \"#utility.yul\":27212:27251   */\n      add\n        /* \"#utility.yul\":27205:27251   */\n      swap2\n      pop\n        /* \"#utility.yul\":26985:27257   */\n      pop\n        /* \"#utility.yul\":26893:27257   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27263:27576   */\n    tag_472:\n        /* \"#utility.yul\":27376:27380   */\n      0x00\n        /* \"#utility.yul\":27414:27416   */\n      0x20\n        /* \"#utility.yul\":27403:27412   */\n      dup3\n        /* \"#utility.yul\":27399:27417   */\n      add\n        /* \"#utility.yul\":27391:27417   */\n      swap1\n      pop\n        /* \"#utility.yul\":27463:27472   */\n      dup2\n        /* \"#utility.yul\":27457:27461   */\n      dup2\n        /* \"#utility.yul\":27453:27473   */\n      sub\n        /* \"#utility.yul\":27449:27450   */\n      0x00\n        /* \"#utility.yul\":27438:27447   */\n      dup4\n        /* \"#utility.yul\":27434:27451   */\n      add\n        /* \"#utility.yul\":27427:27474   */\n      mstore\n        /* \"#utility.yul\":27491:27569   */\n      tag_774\n        /* \"#utility.yul\":27564:27568   */\n      dup2\n        /* \"#utility.yul\":27555:27561   */\n      dup5\n        /* \"#utility.yul\":27491:27569   */\n      tag_542\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":27483:27569   */\n      swap1\n      pop\n        /* \"#utility.yul\":27263:27576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066fba8993fd174c61890d443294eadde703502fbeaba753d1902e8e4079b46fb64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506136bd806100206000396000f3fe6080604052600436106101b75760003560e01c80637d6ae6f6116100ec578063cc2effdc1161008a578063e068372611610064578063e0683726146105b3578063e3b0963a146105de578063f2fde38b1461061b578063f7b188a514610644576101b7565b8063cc2effdc14610536578063d8826fec14610561578063df3d23ae1461058a576101b7565b80639479cfa2116100c65780639479cfa21461049b578063b9472535146104c6578063c4031841146104e4578063cc2a9a5b1461050d576101b7565b80637d6ae6f61461041c5780638456cb59146104595780638da5cb5b14610470576101b7565b806351c3e7be116101595780636e8d9a18116101335780636e8d9a18146103865780636f2bb86a146103b157806370b0a843146103da578063715018a614610405576101b7565b806351c3e7be146103055780635c975abb14610330578063636fc28b1461035b576101b7565b8063232da7fe11610195578063232da7fe1461024b57806332b038a314610274578063358b2b1a146102b15780633fd44f17146102dc576101b7565b80630357371d146101bc57806306394c9b146101f957806314866aef14610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de91906129aa565b61065b565b6040516101f091906129f9565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190612a14565b6108ab565b005b34801561022e57600080fd5b50610249600480360381019061024491906129aa565b61092e565b005b34801561025757600080fd5b50610272600480360381019061026d9190612a14565b610ae4565b005b34801561028057600080fd5b5061029b60048036038101906102969190612a41565b610b67565b6040516102a891906129f9565b60405180910390f35b3480156102bd57600080fd5b506102c6610bf2565b6040516102d39190612acd565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe9190612a14565b610c18565b005b34801561031157600080fd5b5061031a610d9a565b6040516103279190612b09565b60405180910390f35b34801561033c57600080fd5b50610345610dc0565b6040516103529190612b3f565b60405180910390f35b34801561036757600080fd5b50610370610dd7565b60405161037d9190612b7b565b60405180910390f35b34801561039257600080fd5b5061039b610dfd565b6040516103a89190612ba5565b60405180910390f35b3480156103bd57600080fd5b506103d860048036038101906103d391906129aa565b610e23565b005b3480156103e657600080fd5b506103ef610feb565b6040516103fc9190612ba5565b60405180910390f35b34801561041157600080fd5b5061041a611011565b005b34801561042857600080fd5b50610443600480360381019061043e91906129aa565b611025565b60405161045091906129f9565b60405180910390f35b34801561046557600080fd5b5061046e611194565b005b34801561047c57600080fd5b506104856111a6565b6040516104929190612ba5565b60405180910390f35b3480156104a757600080fd5b506104b06111d0565b6040516104bd9190612ba5565b60405180910390f35b6104ce6111f6565b6040516104db91906129f9565b60405180910390f35b3480156104f057600080fd5b5061050b60048036038101906105069190612a14565b611347565b005b34801561051957600080fd5b50610534600480360381019061052f9190612bc0565b6113ca565b005b34801561054257600080fd5b5061054b611752565b6040516105589190612ba5565b60405180910390f35b34801561056d57600080fd5b5061058860048036038101906105839190612a14565b611778565b005b34801561059657600080fd5b506105b160048036038101906105ac91906129aa565b6118fa565b005b3480156105bf57600080fd5b506105c8611ab0565b6040516105d59190612c6e565b60405180910390f35b3480156105ea57600080fd5b5061060560048036038101906106009190612a14565b611ad6565b60405161061291906129f9565b60405180910390f35b34801561062757600080fd5b50610642600480360381019061063d9190612a14565b611cee565b005b34801561065057600080fd5b50610659611d72565b005b6000610665611d84565b600260975414156106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290612ce6565b60405180910390fd5b6002609781905550600060cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9bbd2786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190612d1b565b90508083101561078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290612dba565b60405180910390fd5b6107953384611dce565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db518db285856040518363ffffffff1660e01b81526004016107f2929190612dda565b6020604051808303816000875af1158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190612d1b565b91508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988560405161089491906129f9565b60405180910390a350600160978190555092915050565b6108b3611f26565b8060c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8eb831fe42156caaf4721a87ad40c6e662b893dbeee76d7a3ed2564a318b091c816040516109239190612ba5565b60405180910390a150565b6109366111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109bc575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290612e4f565b60405180910390fd5b60026097541415610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890612ce6565b60405180910390fd5b600260978190555060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401610aa6929190612dda565b600060405180830381600087803b158015610ac057600080fd5b505af1158015610ad4573d6000803e3d6000fd5b5050505060016097819055505050565b610aec611f26565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d06483281604051610b5c9190612ba5565b60405180910390a150565b600060026097541415610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba690612ce6565b60405180910390fd5b60026097819055506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990612ebb565b60405180910390fd5b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c20611f26565b610c9060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d6060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b7f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db481604051610d8f9190612ba5565b60405180910390a150565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606560009054906101000a900460ff16905090565b60cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e2b6111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610eb1575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee790612e4f565b60405180910390fd5b60026097541415610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90612ce6565b60405180910390fd5b600260978190555060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303550d5683836040518363ffffffff1660e01b8152600401610f9b929190612dda565b6020604051808303816000875af1158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde9190612d1b565b5060016097819055505050565b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611019611f26565b61102360006120f3565b565b60006002609754141561106d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106490612ce6565b60405180910390fd5b600260978190555061107f3383611dce565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303550d5684846040518363ffffffff1660e01b81526004016110dc929190612dda565b6020604051808303816000875af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f9190612d1b565b90508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988360405161117e91906129f9565b60405180910390a3600160978190555092915050565b61119c611f26565b6111a46121b9565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611200611d84565b60026097541415611246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123d90612ce6565b60405180910390fd5b600260978190555060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b815260040160206040518083038185885af11580156112bd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e29190612d1b565b90506112ee338261221c565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8260405161133491906129f9565b60405180910390a2600160978190555090565b61134f611f26565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a816040516113bf9190612ba5565b60405180910390a150565b60008060019054906101000a900460ff161590508080156113fb5750600160008054906101000a900460ff1660ff16105b80611428575061140a30612374565b1580156114275750600160008054906101000a900460ff1660ff16145b5b611467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145e90612f4d565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156114a4576001600060016101000a81548160ff0219169083151502179055505b6114ac612397565b6114b46123f0565b6114bc612449565b3360c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cf60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116f0837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b80156117495760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516117409190612fb5565b60405180910390a15b50505050505050565b60d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611780611f26565b6117f060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b8060ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118c060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b7f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53816040516118ef9190612ba5565b60405180910390a150565b6119026111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611988575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90612e4f565b60405180910390fd5b60026097541415611a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0490612ce6565b60405180910390fd5b600260978190555060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401611a72929190612dda565b600060405180830381600087803b158015611a8c57600080fd5b505af1158015611aa0573d6000803e3d6000fd5b5050505060016097819055505050565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026097541415611b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1590612ce6565b60405180910390fd5b6002609781905550611b2e6111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611bb4575060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea9061301c565b60405180910390fd5b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e83409a836040518263ffffffff1660e01b8152600401611c4e9190612ba5565b6020604051808303816000875af1158015611c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c919190612d1b565b90508173ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d482604051611cd991906129f9565b60405180910390a26001609781905550919050565b611cf6611f26565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5d906130ae565b60405180910390fd5b611d6f816120f3565b50565b611d7a611f26565b611d826124a2565b565b611d8c610dc0565b15611dcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc39061311a565b60405180910390fd5b565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9caed128360cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401611e4f9392919061313a565b6020604051808303816000875af1158015611e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e929190612d1b565b5060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401611ef0929190612dda565b600060405180830381600087803b158015611f0a57600080fd5b505af1158015611f1e573d6000803e3d6000fd5b505050505050565b611f2e612505565b73ffffffffffffffffffffffffffffffffffffffff16611f4c6111a6565b73ffffffffffffffffffffffffffffffffffffffff1614611fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f99906131bd565b60405180910390fd5b565b600081148061202e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611feb9291906131dd565b602060405180830381865afa158015612008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202c9190612d1b565b145b61206d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206490613278565b60405180910390fd5b6120ee8363095ea7b360e01b848460405160240161208c929190612dda565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061250d565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6121c1611d84565b6001606560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612205612505565b6040516122129190612ba5565b60405180910390a1565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638340f5498360cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161229d9392919061313a565b6020604051808303816000875af11580156122bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e09190612d1b565b5060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b815260040161233e929190612dda565b600060405180830381600087803b15801561235857600080fd5b505af115801561236c573d6000803e3d6000fd5b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166123e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123dd9061330a565b60405180910390fd5b6123ee6125d4565b565b600060019054906101000a900460ff1661243f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124369061330a565b60405180910390fd5b612447612635565b565b600060019054906101000a900460ff16612498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248f9061330a565b60405180910390fd5b6124a06126a1565b565b6124aa6126fa565b6000606560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124ee612505565b6040516124fb9190612ba5565b60405180910390a1565b600033905090565b600061256f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166127439092919063ffffffff16565b90506000815111156125cf578080602001905181019061258f9190613356565b6125ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125c5906133f5565b60405180910390fd5b5b505050565b600060019054906101000a900460ff16612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261a9061330a565b60405180910390fd5b61263361262e612505565b6120f3565b565b600060019054906101000a900460ff16612684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267b9061330a565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff166126f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e79061330a565b60405180910390fd5b6001609781905550565b612702610dc0565b612741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273890613461565b60405180910390fd5b565b6060612752848460008561275b565b90509392505050565b6060824710156127a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612797906134f3565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516127c9919061358d565b60006040518083038185875af1925050503d8060008114612806576040519150601f19603f3d011682016040523d82523d6000602084013e61280b565b606091505b509150915061281c87838387612828565b92505050949350505050565b6060831561288b57600083511415612883576128438561289e565b612882576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612879906135f0565b60405180910390fd5b5b829050612896565b61289583836128c1565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156128d45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129089190613665565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061294182612916565b9050919050565b61295181612936565b811461295c57600080fd5b50565b60008135905061296e81612948565b92915050565b6000819050919050565b61298781612974565b811461299257600080fd5b50565b6000813590506129a48161297e565b92915050565b600080604083850312156129c1576129c0612911565b5b60006129cf8582860161295f565b92505060206129e085828601612995565b9150509250929050565b6129f381612974565b82525050565b6000602082019050612a0e60008301846129ea565b92915050565b600060208284031215612a2a57612a29612911565b5b6000612a388482850161295f565b91505092915050565b600060208284031215612a5757612a56612911565b5b6000612a6584828501612995565b91505092915050565b6000819050919050565b6000612a93612a8e612a8984612916565b612a6e565b612916565b9050919050565b6000612aa582612a78565b9050919050565b6000612ab782612a9a565b9050919050565b612ac781612aac565b82525050565b6000602082019050612ae26000830184612abe565b92915050565b6000612af382612a9a565b9050919050565b612b0381612ae8565b82525050565b6000602082019050612b1e6000830184612afa565b92915050565b60008115159050919050565b612b3981612b24565b82525050565b6000602082019050612b546000830184612b30565b92915050565b6000612b6582612a9a565b9050919050565b612b7581612b5a565b82525050565b6000602082019050612b906000830184612b6c565b92915050565b612b9f81612936565b82525050565b6000602082019050612bba6000830184612b96565b92915050565b60008060008060008060c08789031215612bdd57612bdc612911565b5b6000612beb89828a0161295f565b9650506020612bfc89828a0161295f565b9550506040612c0d89828a0161295f565b9450506060612c1e89828a0161295f565b9350506080612c2f89828a0161295f565b92505060a0612c4089828a0161295f565b9150509295509295509295565b6000612c5882612a9a565b9050919050565b612c6881612c4d565b82525050565b6000602082019050612c836000830184612c5f565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612cd0601f83612c89565b9150612cdb82612c9a565b602082019050919050565b60006020820190508181036000830152612cff81612cc3565b9050919050565b600081519050612d158161297e565b92915050565b600060208284031215612d3157612d30612911565b5b6000612d3f84828501612d06565b91505092915050565b7f76616c7565206d7573742062652067726561746572207468616e206d696e207560008201527f6e7374616b6520616d6f756e7400000000000000000000000000000000000000602082015250565b6000612da4602d83612c89565b9150612daf82612d48565b604082019050919050565b60006020820190508181036000830152612dd381612d97565b9050919050565b6000604082019050612def6000830185612b96565b612dfc60208301846129ea565b9392505050565b7f41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000600082015250565b6000612e39601983612c89565b9150612e4482612e03565b602082019050919050565b60006020820190508181036000830152612e6881612e2c565b9050919050565b7f48656c696f50726f76696465722f44697361626c656400000000000000000000600082015250565b6000612ea5601683612c89565b9150612eb082612e6f565b602082019050919050565b60006020820190508181036000830152612ed481612e98565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612f37602e83612c89565b9150612f4282612edb565b604082019050919050565b60006020820190508181036000830152612f6681612f2a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612f9f612f9a612f9584612f6d565b612a6e565b612f77565b9050919050565b612faf81612f84565b82525050565b6000602082019050612fca6000830184612fa6565b92915050565b7f4f70657261746f723a206e6f7420616c6c6f7765640000000000000000000000600082015250565b6000613006601583612c89565b915061301182612fd0565b602082019050919050565b6000602082019050818103600083015261303581612ff9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613098602683612c89565b91506130a38261303c565b604082019050919050565b600060208201905081810360008301526130c78161308b565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613104601083612c89565b915061310f826130ce565b602082019050919050565b60006020820190508181036000830152613133816130f7565b9050919050565b600060608201905061314f6000830186612b96565b61315c6020830185612b96565b61316960408301846129ea565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006131a7602083612c89565b91506131b282613171565b602082019050919050565b600060208201905081810360008301526131d68161319a565b9050919050565b60006040820190506131f26000830185612b96565b6131ff6020830184612b96565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000613262603683612c89565b915061326d82613206565b604082019050919050565b6000602082019050818103600083015261329181613255565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006132f4602b83612c89565b91506132ff82613298565b604082019050919050565b60006020820190508181036000830152613323816132e7565b9050919050565b61333381612b24565b811461333e57600080fd5b50565b6000815190506133508161332a565b92915050565b60006020828403121561336c5761336b612911565b5b600061337a84828501613341565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006133df602a83612c89565b91506133ea82613383565b604082019050919050565b6000602082019050818103600083015261340e816133d2565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061344b601483612c89565b915061345682613415565b602082019050919050565b6000602082019050818103600083015261347a8161343e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006134dd602683612c89565b91506134e882613481565b604082019050919050565b6000602082019050818103600083015261350c816134d0565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561354757808201518184015260208101905061352c565b83811115613556576000848401525b50505050565b600061356782613513565b613571818561351e565b9350613581818560208601613529565b80840191505092915050565b6000613599828461355c565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006135da601d83612c89565b91506135e5826135a4565b602082019050919050565b60006020820190508181036000830152613609816135cd565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061363782613610565b6136418185612c89565b9350613651818560208601613529565b61365a8161361b565b840191505092915050565b6000602082019050818103600083015261367f818461362c565b90509291505056fea264697066735822122066fba8993fd174c61890d443294eadde703502fbeaba753d1902e8e4079b46fb64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36BD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6F6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xCC2EFFDC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE0683726 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE0683726 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xE3B0963A EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x644 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xCC2EFFDC EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xD8826FEC EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xDF3D23AE EQ PUSH2 0x58A JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x9479CFA2 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x9479CFA2 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xB9472535 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xC4031841 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x50D JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6F6 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x470 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x51C3E7BE GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6E8D9A18 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6E8D9A18 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6F2BB86A EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x70B0A843 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x405 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x51C3E7BE EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x636FC28B EQ PUSH2 0x35B JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x232DA7FE GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x232DA7FE EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x32B038A3 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x358B2B1A EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x3FD44F17 EQ PUSH2 0x2DC JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x357371D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x14866AEF EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2A41 JUMP JUMPDEST PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x1011 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46E PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2BC0 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54B PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1778 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x18FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C8 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1CEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x1D72 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x665 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9BBD278 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x795 CALLER DUP5 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB518DB2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP6 PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8EB831FE42156CAAF4721A87AD40C6E662B893DBEEE76D7A3ED2564A318B091C DUP2 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9BC JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xBAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA6 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xC90 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD60 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE2B PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEB1 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3550D56 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9B SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1019 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x0 PUSH2 0x20F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x107F CALLER DUP4 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3550D56 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117E SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x11A4 PUSH2 0x21B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123D SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP PUSH2 0x12EE CALLER DUP3 PUSH2 0x221C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x134F PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xD0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A DUP2 PUSH1 0x40 MLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x13FB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1428 JUMPI POP PUSH2 0x140A ADDRESS PUSH2 0x2374 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1427 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP1 PUSH2 0x2F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x14AC PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x14B4 PUSH2 0x23F0 JUMP JUMPDEST PUSH2 0x14BC PUSH2 0x2449 JUMP JUMPDEST CALLER PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16F0 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1749 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1780 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x17F0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x18C0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53 DUP2 PUSH1 0x40 MLOAD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1902 PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1988 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A04 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A72 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1B2E PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BB4 JUMPI POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1BF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEA SWAP1 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E83409A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4E SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C91 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF6 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5D SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x20F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D7A PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1D82 PUSH2 0x24A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0xDC0 JUMP JUMPDEST ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC3 SWAP1 PUSH2 0x311A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9CAED12 DUP4 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F2E PUSH2 0x2505 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F4C PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F99 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x202E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEB SWAP3 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2008 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST EQ JUMPDEST PUSH2 0x206D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP1 PUSH2 0x3278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20EE DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x208C SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x250D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x21C1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2205 PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2212 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8340F549 DUP4 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233E SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23DD SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23EE PUSH2 0x25D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x243F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2436 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2447 PUSH2 0x2635 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x248F SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24A0 PUSH2 0x26A1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x24AA PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24EE PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24FB SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2743 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x258F SWAP2 SWAP1 PUSH2 0x3356 JUMP JUMPDEST PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C5 SWAP1 PUSH2 0x33F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261A SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2633 PUSH2 0x262E PUSH2 0x2505 JUMP JUMPDEST PUSH2 0x20F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267B SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E7 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2702 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x2741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2738 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2752 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x275B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x27A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2797 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2806 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x280B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x281C DUP8 DUP4 DUP4 DUP8 PUSH2 0x2828 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x288B JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x2883 JUMPI PUSH2 0x2843 DUP6 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x2882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2879 SWAP1 PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x2895 DUP4 DUP4 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x28D4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP2 SWAP1 PUSH2 0x3665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2951 DUP2 PUSH2 0x2936 JUMP JUMPDEST DUP2 EQ PUSH2 0x295C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x296E DUP2 PUSH2 0x2948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2987 DUP2 PUSH2 0x2974 JUMP JUMPDEST DUP2 EQ PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29A4 DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C1 JUMPI PUSH2 0x29C0 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CF DUP6 DUP3 DUP7 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F3 DUP2 PUSH2 0x2974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A38 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A65 DUP5 DUP3 DUP6 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A93 PUSH2 0x2A8E PUSH2 0x2A89 DUP5 PUSH2 0x2916 JUMP JUMPDEST PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA5 DUP3 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB7 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2AAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AE2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF3 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B03 DUP2 PUSH2 0x2AE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B39 DUP2 PUSH2 0x2B24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B65 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B75 DUP2 PUSH2 0x2B5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B9F DUP2 PUSH2 0x2936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BDD JUMPI PUSH2 0x2BDC PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEB DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2BFC DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C0D DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C1E DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C2F DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C40 DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C58 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C68 DUP2 PUSH2 0x2C4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD0 PUSH1 0x1F DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDB DUP3 PUSH2 0x2C9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFF DUP2 PUSH2 0x2CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D15 DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D3F DUP5 DUP3 DUP6 ADD PUSH2 0x2D06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E7374616B6520616D6F756E7400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA4 PUSH1 0x2D DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAF DUP3 PUSH2 0x2D48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DD3 DUP2 PUSH2 0x2D97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DEF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E39 PUSH1 0x19 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E44 DUP3 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E68 DUP2 PUSH2 0x2E2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x48656C696F50726F76696465722F44697361626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EA5 PUSH1 0x16 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB0 DUP3 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ED4 DUP2 PUSH2 0x2E98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F37 PUSH1 0x2E DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F42 DUP3 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F66 DUP2 PUSH2 0x2F2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9F PUSH2 0x2F9A PUSH2 0x2F95 DUP5 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2F77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FAF DUP2 PUSH2 0x2F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F70657261746F723A206E6F7420616C6C6F7765640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH1 0x15 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x3011 DUP3 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3035 DUP2 PUSH2 0x2FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3098 PUSH1 0x26 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x30A3 DUP3 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C7 DUP2 PUSH2 0x308B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3104 PUSH1 0x10 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x310F DUP3 PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3133 DUP2 PUSH2 0x30F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x314F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x315C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A7 PUSH1 0x20 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x3171 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D6 DUP2 PUSH2 0x319A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x31FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B96 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3262 PUSH1 0x36 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x326D DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3291 DUP2 PUSH2 0x3255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F4 PUSH1 0x2B DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FF DUP3 PUSH2 0x3298 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3323 DUP2 PUSH2 0x32E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3333 DUP2 PUSH2 0x2B24 JUMP JUMPDEST DUP2 EQ PUSH2 0x333E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3350 DUP2 PUSH2 0x332A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x336C JUMPI PUSH2 0x336B PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337A DUP5 DUP3 DUP6 ADD PUSH2 0x3341 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DF PUSH1 0x2A DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x33EA DUP3 PUSH2 0x3383 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x340E DUP2 PUSH2 0x33D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344B PUSH1 0x14 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x3456 DUP3 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347A DUP2 PUSH2 0x343E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DD PUSH1 0x26 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x34E8 DUP3 PUSH2 0x3481 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x350C DUP2 PUSH2 0x34D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3547 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x352C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3556 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3567 DUP3 PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x3571 DUP2 DUP6 PUSH2 0x351E JUMP JUMPDEST SWAP4 POP PUSH2 0x3581 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3529 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 DUP5 PUSH2 0x355C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35DA PUSH1 0x1D DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x35E5 DUP3 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3609 DUP2 PUSH2 0x35CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3637 DUP3 PUSH2 0x3610 JUMP JUMPDEST PUSH2 0x3641 DUP2 DUP6 PUSH2 0x2C89 JUMP JUMPDEST SWAP4 POP PUSH2 0x3651 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3529 JUMP JUMPDEST PUSH2 0x365A DUP2 PUSH2 0x361B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x367F DUP2 DUP5 PUSH2 0x362C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xFBA8993FD174C6 XOR SWAP1 0xD4 NUMBER 0x29 0x4E 0xAD 0xDE PUSH17 0x3502FBEABA753D1902E8E4079B46FB6473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "687:5648:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 9111,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 9684,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_313": {
									"entryPoint": 9200,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_323": {
									"entryPoint": 9781,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_432": {
									"entryPoint": 9289,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_442": {
									"entryPoint": 9889,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1542": {
									"entryPoint": 9485,
									"id": 1542,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_ceRouter_1908": {
									"entryPoint": 3482,
									"id": 1908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ceToken_1902": {
									"entryPoint": 3581,
									"id": 1902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_certToken_1900": {
									"entryPoint": 4560,
									"id": 1900,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 7974,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_collateralToken_1905": {
									"entryPoint": 3058,
									"id": 1905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_dao_1911": {
									"entryPoint": 6832,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1133": {
									"entryPoint": 9477,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_operator_1898": {
									"entryPoint": 4075,
									"id": 1898,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_387": {
									"entryPoint": 8633,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pool_1914": {
									"entryPoint": 3543,
									"id": 1914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_provideCollateral_2286": {
									"entryPoint": 8732,
									"id": 2286,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_proxy_1916": {
									"entryPoint": 5970,
									"id": 1916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_360": {
									"entryPoint": 7556,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_371": {
									"entryPoint": 9978,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1872": {
									"entryPoint": 10433,
									"id": 1872,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 8435,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_403": {
									"entryPoint": 9378,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_withdrawCollateral_2312": {
									"entryPoint": 7630,
									"id": 2312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeCeToken_2418": {
									"entryPoint": 3096,
									"id": 2418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeCollateralToken_2452": {
									"entryPoint": 2788,
									"id": 2452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeDao_2376": {
									"entryPoint": 6008,
									"id": 2376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeOperator_2468": {
									"entryPoint": 2219,
									"id": 2468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeProxy_2434": {
									"entryPoint": 4935,
									"id": 2434,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimInABNBc_2111": {
									"entryPoint": 6870,
									"id": 2111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@daoBurn_2240": {
									"entryPoint": 6394,
									"id": 2240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@daoMint_2260": {
									"entryPoint": 2350,
									"id": 2260,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_1697": {
									"entryPoint": 10075,
									"id": 1697,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1633": {
									"entryPoint": 10051,
									"id": 1633,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@initialize_2033": {
									"entryPoint": 5066,
									"id": 2033,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@isContract_1561": {
									"entryPoint": 10398,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_881": {
									"entryPoint": 9076,
									"id": 881,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@liquidation_2220": {
									"entryPoint": 3619,
									"id": 2220,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_54": {
									"entryPoint": 4518,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2322": {
									"entryPoint": 4500,
									"id": 2322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_348": {
									"entryPoint": 3520,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@provideInABNBc_2083": {
									"entryPoint": 2919,
									"id": 2083,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@provide_2068": {
									"entryPoint": 4598,
									"id": 2068,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseInABNBc_2199": {
									"entryPoint": 4133,
									"id": 2199,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@release_2163": {
									"entryPoint": 1627,
									"id": 2163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 4113,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_1364": {
									"entryPoint": 8100,
									"id": 1364,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 7406,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unPause_2331": {
									"entryPoint": 7538,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1828": {
									"entryPoint": 10280,
									"id": 1828,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 11200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 11056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBinancePool_$2499_to_t_address_fromStack": {
									"entryPoint": 11116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICerosRouter_$2659_to_t_address_fromStack": {
									"entryPoint": 11002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICertToken_$2704_to_t_address_fromStack": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDao_$2817_to_t_address_fromStack": {
									"entryPoint": 11359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 12198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 12765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12602,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11738,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 11071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBinancePool_$2499__to_t_address__fromStack_reversed": {
									"entryPoint": 11131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICerosRouter_$2659__to_t_address__fromStack_reversed": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICertToken_$2704__to_t_address__fromStack_reversed": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDao_$2817__to_t_address__fromStack_reversed": {
									"entryPoint": 11374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 12213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 13840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 12141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 12151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBinancePool_$2499_to_t_address": {
									"entryPoint": 11098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICerosRouter_$2659_to_t_address": {
									"entryPoint": 10984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICertToken_$2704_to_t_address": {
									"entryPoint": 10924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IDao_$2817_to_t_address": {
									"entryPoint": 11341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 12164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 13609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 13851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 13333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09": {
									"entryPoint": 12240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 13441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 12494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 11995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 12657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad": {
									"entryPoint": 11887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397": {
									"entryPoint": 11592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11": {
									"entryPoint": 11779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 13732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b": {
									"entryPoint": 12952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 13187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 12806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 13098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27579:23",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:23",
														"type": ""
													}
												],
												"src": "334:126:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:23",
														"type": ""
													}
												],
												"src": "466:96:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:23"
															},
															"nodeType": "YulIf",
															"src": "621:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:23",
														"type": ""
													}
												],
												"src": "568:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:23",
														"type": ""
													}
												],
												"src": "696:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:23",
														"type": ""
													}
												],
												"src": "841:77:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:23"
															},
															"nodeType": "YulIf",
															"src": "977:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:23",
														"type": ""
													}
												],
												"src": "924:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:23",
														"type": ""
													}
												],
												"src": "1052:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:23"
															},
															"nodeType": "YulIf",
															"src": "1290:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:23",
														"type": ""
													}
												],
												"src": "1197:474:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:23",
														"type": ""
													}
												],
												"src": "1677:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:23",
														"type": ""
													}
												],
												"src": "1801:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:23"
															},
															"nodeType": "YulIf",
															"src": "2105:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:23",
														"type": ""
													}
												],
												"src": "2029:329:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:263:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:23"
															},
															"nodeType": "YulIf",
															"src": "2440:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:23",
														"type": ""
													}
												],
												"src": "2364:329:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2731:28:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2741:12:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2748:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2717:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2727:3:23",
														"type": ""
													}
												],
												"src": "2699:60:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2825:82:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2835:66:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2893:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2875:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2875:24:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2866:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:34:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2848:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:53:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2835:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2805:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2815:9:23",
														"type": ""
													}
												],
												"src": "2765:142:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2973:66:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2983:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3027:5:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2996:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:37:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2983:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2953:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2963:9:23",
														"type": ""
													}
												],
												"src": "2913:126:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3124:66:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3134:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3178:5:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3147:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:37:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3134:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICertToken_$2704_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3104:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3114:9:23",
														"type": ""
													}
												],
												"src": "3045:145:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3280:85:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3297:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3352:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICertToken_$2704_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3302:49:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3302:56:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:69:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:69:23"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICertToken_$2704_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3268:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3275:3:23",
														"type": ""
													}
												],
												"src": "3196:169:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3488:143:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3498:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3498:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3610:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3621:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3606:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICertToken_$2704_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3534:62:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3534:90:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3534:90:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICertToken_$2704__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3460:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3472:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3483:4:23",
														"type": ""
													}
												],
												"src": "3371:260:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:66:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3728:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3772:5:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3741:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:37:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3728:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICerosRouter_$2659_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3698:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3708:9:23",
														"type": ""
													}
												],
												"src": "3637:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3876:87:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3950:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICerosRouter_$2659_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3898:51:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:58:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3886:71:23"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICerosRouter_$2659_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3864:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3871:3:23",
														"type": ""
													}
												],
												"src": "3790:173:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4088:145:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4098:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4098:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4199:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4212:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4223:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4208:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICerosRouter_$2659_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4134:64:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:92:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:92:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICerosRouter_$2659__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4072:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4083:4:23",
														"type": ""
													}
												],
												"src": "3969:264:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4281:48:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4291:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4316:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4309:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4302:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4302:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4291:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4263:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4273:7:23",
														"type": ""
													}
												],
												"src": "4239:90:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4431:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4416:14:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4382:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4389:3:23",
														"type": ""
													}
												],
												"src": "4335:109:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4542:118:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4552:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4564:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4552:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4626:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4650:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4635:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4588:37:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4588:65:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4514:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4537:4:23",
														"type": ""
													}
												],
												"src": "4450:210:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:66:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4801:5:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4770:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:37:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4757:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBinancePool_$2499_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4727:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4737:9:23",
														"type": ""
													}
												],
												"src": "4666:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4905:87:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4979:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBinancePool_$2499_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4927:51:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4927:58:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4915:71:23"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBinancePool_$2499_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4893:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4900:3:23",
														"type": ""
													}
												],
												"src": "4819:173:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5117:145:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5127:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5228:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5241:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5252:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBinancePool_$2499_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5163:64:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:92:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:92:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBinancePool_$2499__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5089:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5101:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5112:4:23",
														"type": ""
													}
												],
												"src": "4998:264:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5373:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5355:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5321:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5328:3:23",
														"type": ""
													}
												],
												"src": "5268:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5490:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5500:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5512:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5500:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5580:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5604:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5589:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5589:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5536:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5536:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5462:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5474:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5485:4:23",
														"type": ""
													}
												],
												"src": "5392:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:906:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5818:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5820:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5820:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5820:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5792:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5801:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:3:23",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:33:23"
															},
															"nodeType": "YulIf",
															"src": "5781:120:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "5911:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5926:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5930:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5955:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5990:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6001:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5986:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5986:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6010:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5965:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5955:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6038:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6053:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6067:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6057:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6083:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6118:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6129:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6114:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6114:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6138:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6093:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6093:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6083:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6166:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6181:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6185:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6211:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6246:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6257:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6242:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6242:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6266:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6221:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6211:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6294:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6309:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6323:2:23",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6313:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6339:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6374:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6385:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6370:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6370:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6394:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6349:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6349:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6339:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6422:119:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6437:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6451:3:23",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6441:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6468:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6503:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6514:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6499:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6499:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6523:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6478:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6478:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6468:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6551:119:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6566:17:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:3:23",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6570:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6597:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6632:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6643:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6628:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6628:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6652:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6607:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6607:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "6597:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5701:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5712:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5724:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5732:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5740:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5748:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5756:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5764:6:23",
														"type": ""
													}
												],
												"src": "5620:1057:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6756:66:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6766:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6810:5:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6779:30:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:37:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6766:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDao_$2817_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6736:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6746:9:23",
														"type": ""
													}
												],
												"src": "6683:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6906:79:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6923:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6972:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDao_$2817_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6928:43:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6928:50:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:63:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6916:63:23"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDao_$2817_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6894:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6901:3:23",
														"type": ""
													}
												],
												"src": "6828:157:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7102:137:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7112:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7124:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7135:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7120:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7112:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7205:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7218:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7229:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDao_$2817_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7148:56:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:84:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:84:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDao_$2817__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7074:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7086:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7097:4:23",
														"type": ""
													}
												],
												"src": "6991:248:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7358:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7363:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7351:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7351:19:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7351:19:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7379:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7398:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7403:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7394:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7379:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7313:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7318:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7329:11:23",
														"type": ""
													}
												],
												"src": "7245:169:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7526:75:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7548:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7544:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7544:14:23"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7560:33:23",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7537:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:57:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7537:57:23"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7518:6:23",
														"type": ""
													}
												],
												"src": "7420:181:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7753:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7763:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7829:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7834:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7770:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7770:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7935:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7846:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7846:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7948:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7959:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7964:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7948:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7741:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7749:3:23",
														"type": ""
													}
												],
												"src": "7607:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8150:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8160:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8172:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8183:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8168:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8160:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8207:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8218:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8203:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8203:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8226:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8222:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8222:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8196:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8196:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8252:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8386:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8260:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8252:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8130:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8145:4:23",
														"type": ""
													}
												],
												"src": "7979:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8492:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8486:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8486:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8477:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8535:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8508:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8445:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8453:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8461:5:23",
														"type": ""
													}
												],
												"src": "8404:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8630:274:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8676:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8678:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8678:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8678:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8651:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8660:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8647:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8647:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8672:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:32:23"
															},
															"nodeType": "YulIf",
															"src": "8640:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "8769:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8784:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8788:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8813:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8859:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8870:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8855:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8855:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8879:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8823:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8823:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8813:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8600:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8611:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8623:6:23",
														"type": ""
													}
												],
												"src": "8553:351:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9016:126:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9038:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9046:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9034:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9034:14:23"
																	},
																	{
																		"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e2075",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9050:34:23",
																		"type": "",
																		"value": "value must be greater than min u"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9027:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9027:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9027:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9106:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9114:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9102:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9102:15:23"
																	},
																	{
																		"hexValue": "6e7374616b6520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9119:15:23",
																		"type": "",
																		"value": "nstake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9095:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:40:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9095:40:23"
														}
													]
												},
												"name": "store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9008:6:23",
														"type": ""
													}
												],
												"src": "8910:232:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9294:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9304:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9370:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9375:2:23",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9311:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9304:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9476:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																	"nodeType": "YulIdentifier",
																	"src": "9387:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9489:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9500:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9505:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9496:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9489:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9282:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9290:3:23",
														"type": ""
													}
												],
												"src": "9148:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9691:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9701:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9713:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9748:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9759:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9744:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9767:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9773:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9737:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9737:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9793:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9927:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9801:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9801:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9793:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9671:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9686:4:23",
														"type": ""
													}
												],
												"src": "9520:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10071:206:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10081:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10093:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10104:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10089:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10089:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10081:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10161:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10174:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10185:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10170:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10170:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10117:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10117:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10242:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10266:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10198:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10198:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10198:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10035:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10047:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10055:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10066:4:23",
														"type": ""
													}
												],
												"src": "9945:332:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10389:69:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10411:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10419:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:14:23"
																	},
																	{
																		"hexValue": "41756374696f6e50726f78793a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10423:27:23",
																		"type": "",
																		"value": "AuctionProxy: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10400:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10400:51:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10400:51:23"
														}
													]
												},
												"name": "store_literal_in_memory_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10381:6:23",
														"type": ""
													}
												],
												"src": "10283:175:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10610:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10620:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10686:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10691:2:23",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10627:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10620:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10792:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
																	"nodeType": "YulIdentifier",
																	"src": "10703:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10703:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10703:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10805:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10816:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10821:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10812:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10812:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10606:3:23",
														"type": ""
													}
												],
												"src": "10464:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11007:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11017:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11029:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11040:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11025:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11025:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11017:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11064:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11075:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11060:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11083:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11089:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11079:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11079:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11109:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11243:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11117:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11117:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11109:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10987:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11002:4:23",
														"type": ""
													}
												],
												"src": "10836:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:66:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11389:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11397:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:14:23"
																	},
																	{
																		"hexValue": "48656c696f50726f76696465722f44697361626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11401:24:23",
																		"type": "",
																		"value": "HelioProvider/Disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:48:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11378:48:23"
														}
													]
												},
												"name": "store_literal_in_memory_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11359:6:23",
														"type": ""
													}
												],
												"src": "11261:172:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11585:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11595:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11661:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11666:2:23",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11602:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11602:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11595:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11767:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad",
																	"nodeType": "YulIdentifier",
																	"src": "11678:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11678:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11678:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11780:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11791:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11796:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11780:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11573:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11581:3:23",
														"type": ""
													}
												],
												"src": "11439:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11982:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11992:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12004:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12015:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12000:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12000:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11992:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12039:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12050:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12035:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12058:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12064:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12054:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12054:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12028:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12084:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12218:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12092:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12084:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11962:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11977:4:23",
														"type": ""
													}
												],
												"src": "11811:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:127:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12364:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12372:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12360:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12360:14:23"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12376:34:23",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12353:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12353:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12432:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12440:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12428:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12428:15:23"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12445:16:23",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12421:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:41:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12421:41:23"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12334:6:23",
														"type": ""
													}
												],
												"src": "12236:233:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12621:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12631:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12697:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12702:2:23",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12638:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12631:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12803:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "12714:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12714:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12714:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12816:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12827:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12832:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12823:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12823:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12816:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12609:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12617:3:23",
														"type": ""
													}
												],
												"src": "12475:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13018:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13028:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13040:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13051:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13036:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13028:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13075:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13086:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13071:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13094:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13100:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13090:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13090:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13064:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13064:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13064:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13120:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13254:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13128:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13128:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13120:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12998:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13013:4:23",
														"type": ""
													}
												],
												"src": "12847:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13325:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13335:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13346:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13335:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13307:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13317:7:23",
														"type": ""
													}
												],
												"src": "13272:85:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13406:43:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13416:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13431:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13438:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13427:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:16:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13416:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13388:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13398:7:23",
														"type": ""
													}
												],
												"src": "13363:86:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13521:88:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13531:72:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13595:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "13569:25:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13569:32:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "13560:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13560:42:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "13544:15:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13544:59:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13531:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13501:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13511:9:23",
														"type": ""
													}
												],
												"src": "13455:154:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13686:72:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13703:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13745:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "13708:36:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13708:43:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13696:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13696:56:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13696:56:23"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13674:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13681:3:23",
														"type": ""
													}
												],
												"src": "13615:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13868:130:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13878:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13890:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13901:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13886:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13886:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13878:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13964:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13977:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13988:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13973:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13973:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13914:49:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:77:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13914:77:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13840:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13852:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13863:4:23",
														"type": ""
													}
												],
												"src": "13764:234:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14110:65:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14132:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14140:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14128:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14128:14:23"
																	},
																	{
																		"hexValue": "4f70657261746f723a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14144:23:23",
																		"type": "",
																		"value": "Operator: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14121:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14121:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14121:47:23"
														}
													]
												},
												"name": "store_literal_in_memory_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14102:6:23",
														"type": ""
													}
												],
												"src": "14004:171:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14327:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14337:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14403:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14408:2:23",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14344:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14337:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14509:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09",
																	"nodeType": "YulIdentifier",
																	"src": "14420:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14420:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14420:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14522:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14533:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14538:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14529:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14529:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14522:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14315:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14323:3:23",
														"type": ""
													}
												],
												"src": "14181:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14724:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14734:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14746:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14742:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14742:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14734:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14792:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14777:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14800:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14806:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14796:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14796:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14770:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14770:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14826:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14960:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14834:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14834:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14826:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14704:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14719:4:23",
														"type": ""
													}
												],
												"src": "14553:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15084:119:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15106:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15114:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15102:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15102:14:23"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15118:34:23",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15095:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15095:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15095:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15174:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15182:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15170:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15170:15:23"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15187:8:23",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15163:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15163:33:23"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15076:6:23",
														"type": ""
													}
												],
												"src": "14978:225:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15355:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15365:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15431:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:23",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15372:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15372:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15365:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15537:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "15448:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15448:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15448:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15550:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15561:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15566:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15557:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15557:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15550:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15343:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15351:3:23",
														"type": ""
													}
												],
												"src": "15209:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15752:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15762:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15774:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15785:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15770:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15770:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15762:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15809:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15820:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15805:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15805:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15828:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15834:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15824:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15824:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15798:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15798:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15854:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15988:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15862:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15862:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15854:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15732:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15747:4:23",
														"type": ""
													}
												],
												"src": "15581:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16112:60:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16134:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16142:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16130:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16130:14:23"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16146:18:23",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16123:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16123:42:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16123:42:23"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16104:6:23",
														"type": ""
													}
												],
												"src": "16006:166:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16324:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16334:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16400:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16405:2:23",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16341:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16341:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16334:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16506:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "16417:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16417:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16417:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16519:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16530:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16535:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16526:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16526:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16519:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16312:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16320:3:23",
														"type": ""
													}
												],
												"src": "16178:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16721:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16731:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16743:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16754:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16739:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16739:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16731:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16778:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16789:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16774:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16774:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16797:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16803:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16793:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16793:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16767:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16767:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16767:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16823:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16957:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16831:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16831:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16823:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16701:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16716:4:23",
														"type": ""
													}
												],
												"src": "16550:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17129:288:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17139:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17151:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17162:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17147:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17147:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17139:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17219:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17232:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17243:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17228:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17228:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17175:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17175:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17175:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17300:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17313:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17324:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17309:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17309:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17256:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17256:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17256:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17382:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17395:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17406:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17391:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17391:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17338:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17338:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17338:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17085:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17097:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17105:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17113:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17124:4:23",
														"type": ""
													}
												],
												"src": "16975:442:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17529:76:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17551:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17559:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17547:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17547:14:23"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17563:34:23",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17540:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17540:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17540:58:23"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17521:6:23",
														"type": ""
													}
												],
												"src": "17423:182:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17757:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17767:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17833:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17838:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17774:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17774:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17767:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17939:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "17850:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17850:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17850:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17952:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17963:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17968:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17959:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17959:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17952:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17745:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17753:3:23",
														"type": ""
													}
												],
												"src": "17611:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18154:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18164:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18176:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18187:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18172:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18172:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18164:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18211:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18222:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18207:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18230:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18236:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18226:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18226:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18200:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18200:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18256:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18390:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18264:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18264:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18256:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18134:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18149:4:23",
														"type": ""
													}
												],
												"src": "17983:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18534:206:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18544:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18556:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18567:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18552:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18552:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18544:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18624:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18637:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18648:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18633:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18633:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18580:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18580:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18580:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18705:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18718:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18729:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18714:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18714:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18661:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18661:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18661:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18498:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18510:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18518:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18529:4:23",
														"type": ""
													}
												],
												"src": "18408:332:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18852:135:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18874:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18882:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18870:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18870:14:23"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18886:34:23",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18863:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18863:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18863:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18942:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18950:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18938:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18938:15:23"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18955:24:23",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18931:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18931:49:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18931:49:23"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18844:6:23",
														"type": ""
													}
												],
												"src": "18746:241:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19139:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19149:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19215:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19220:2:23",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19156:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19156:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19149:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19321:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "19232:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19232:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19232:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19334:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19345:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19350:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19341:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19341:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19334:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19127:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19135:3:23",
														"type": ""
													}
												],
												"src": "18993:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19536:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19546:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19558:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19569:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19554:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19554:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19546:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19593:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19604:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19589:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19612:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19618:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19608:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19608:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19582:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19582:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19582:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19638:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19772:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19646:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19646:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19638:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19516:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19531:4:23",
														"type": ""
													}
												],
												"src": "19365:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19896:124:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19918:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19926:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19914:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19914:14:23"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19930:34:23",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19907:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19907:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19907:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19986:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19994:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19982:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19982:15:23"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19999:13:23",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19975:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19975:38:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19975:38:23"
														}
													]
												},
												"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19888:6:23",
														"type": ""
													}
												],
												"src": "19790:230:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20172:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20182:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20248:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20253:2:23",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20189:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20189:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20182:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20354:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																	"nodeType": "YulIdentifier",
																	"src": "20265:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20265:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20265:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20367:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20378:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20383:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20374:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20374:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20367:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20160:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20168:3:23",
														"type": ""
													}
												],
												"src": "20026:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20569:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20579:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20591:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20602:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20587:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20587:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20579:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20626:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20637:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20622:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20622:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20645:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20651:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20641:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20641:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20615:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20615:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20615:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20671:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20805:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20679:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20679:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20671:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20549:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20564:4:23",
														"type": ""
													}
												],
												"src": "20398:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20863:76:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20917:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20926:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20929:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20919:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20919:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20919:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20886:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20908:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "20893:14:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20893:21:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20883:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20883:32:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20876:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20876:40:23"
															},
															"nodeType": "YulIf",
															"src": "20873:60:23"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20856:5:23",
														"type": ""
													}
												],
												"src": "20823:116:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21005:77:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21015:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21030:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21024:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21024:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21015:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21070:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21046:23:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21046:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21046:30:23"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20983:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20991:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20999:5:23",
														"type": ""
													}
												],
												"src": "20945:137:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21162:271:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21208:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21210:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21210:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21210:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21183:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21192:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21179:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21179:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21204:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21175:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21175:32:23"
															},
															"nodeType": "YulIf",
															"src": "21172:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "21301:125:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21316:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21330:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21320:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21345:71:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21388:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21399:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21384:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21384:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21408:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21355:28:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21355:61:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21345:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21132:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21143:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21155:6:23",
														"type": ""
													}
												],
												"src": "21088:345:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21545:123:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21567:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21575:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21563:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21563:14:23"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21579:34:23",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21556:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21556:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21556:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21635:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21643:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21631:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21631:15:23"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21648:12:23",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21624:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21624:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21624:37:23"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21537:6:23",
														"type": ""
													}
												],
												"src": "21439:229:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21820:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21830:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21896:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21901:2:23",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21837:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21837:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21830:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22002:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "21913:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "21913:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21913:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22015:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22026:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22031:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22022:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22022:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22015:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21808:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21816:3:23",
														"type": ""
													}
												],
												"src": "21674:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22217:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22227:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22239:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22250:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22235:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22235:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22227:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22274:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22285:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22270:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22270:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22293:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22299:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22289:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22289:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22263:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22263:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22263:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22319:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22453:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22327:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22327:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22319:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22197:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22212:4:23",
														"type": ""
													}
												],
												"src": "22046:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22577:64:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22599:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22607:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22595:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22595:14:23"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22611:22:23",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22588:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22588:46:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22588:46:23"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22569:6:23",
														"type": ""
													}
												],
												"src": "22471:170:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22793:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22803:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22869:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22874:2:23",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22810:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22810:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22803:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22975:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "22886:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22886:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22886:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22988:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22999:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23004:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22995:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "22995:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22988:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22781:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22789:3:23",
														"type": ""
													}
												],
												"src": "22647:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23190:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23200:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23212:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23223:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23208:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23208:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23200:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23247:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23258:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23243:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23243:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23266:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23272:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23262:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23262:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23236:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23236:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23236:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23292:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23426:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23300:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23300:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23292:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23170:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23185:4:23",
														"type": ""
													}
												],
												"src": "23019:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23550:119:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23572:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23580:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23568:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23568:14:23"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23584:34:23",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23561:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23561:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23561:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23640:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23648:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23636:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23636:15:23"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23653:8:23",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23629:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23629:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23629:33:23"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23542:6:23",
														"type": ""
													}
												],
												"src": "23444:225:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23821:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23831:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23897:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23902:2:23",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23838:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23838:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23831:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24003:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "23914:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "23914:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23914:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24016:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24027:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24032:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24023:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24023:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24016:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23809:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23817:3:23",
														"type": ""
													}
												],
												"src": "23675:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24218:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24228:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24240:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24251:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24236:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24236:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24228:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24275:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24286:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24271:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24294:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24300:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24290:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24290:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24264:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24264:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24264:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24320:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24454:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24328:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24328:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24320:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24198:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24213:4:23",
														"type": ""
													}
												],
												"src": "24047:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24530:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24541:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24557:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24551:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24551:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24541:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24513:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24523:6:23",
														"type": ""
													}
												],
												"src": "24472:98:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24689:34:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24699:18:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24714:3:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24699:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24661:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24666:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24677:11:23",
														"type": ""
													}
												],
												"src": "24576:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24778:258:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24788:10:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24797:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "24792:1:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24857:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24882:3:23"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "24887:1:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24878:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24878:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "24901:3:23"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "24906:1:23"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "24897:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24897:11:23"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "24891:5:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24891:18:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24871:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24871:39:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24871:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24818:1:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24821:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24815:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24815:13:23"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24829:19:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24831:15:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24840:1:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24843:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24836:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24836:10:23"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24831:1:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24811:3:23",
																"statements": []
															},
															"src": "24807:113:23"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24954:76:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25004:3:23"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "25009:6:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25000:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25000:16:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25018:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24993:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24993:27:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24993:27:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24935:1:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24938:6:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24932:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "24932:13:23"
															},
															"nodeType": "YulIf",
															"src": "24929:101:23"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24760:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24765:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24770:6:23",
														"type": ""
													}
												],
												"src": "24729:307:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25150:265:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25160:52:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25206:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25174:31:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25174:38:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25164:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25221:95:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25304:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25309:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25228:75:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25228:88:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25221:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25351:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25358:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25347:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25347:16:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25365:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25370:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "25325:21:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25325:52:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25325:52:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25386:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25397:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25402:6:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25393:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25393:16:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25386:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25131:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25138:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25146:3:23",
														"type": ""
													}
												],
												"src": "25042:373:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25555:137:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25566:100:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25653:6:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25662:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25573:79:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25573:93:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25566:3:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25676:10:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25683:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25676:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25534:3:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25540:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25551:3:23",
														"type": ""
													}
												],
												"src": "25421:271:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25804:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25826:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25834:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25822:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25822:14:23"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25838:31:23",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25815:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "25815:55:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25815:55:23"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25796:6:23",
														"type": ""
													}
												],
												"src": "25698:179:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26029:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26039:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26105:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26110:2:23",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26046:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26046:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26039:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26211:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "26122:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26122:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26122:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26224:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26235:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26240:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26231:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26231:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26224:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26017:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26025:3:23",
														"type": ""
													}
												],
												"src": "25883:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26426:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26436:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26448:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26459:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26444:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26444:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26436:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26483:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26494:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26479:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26479:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26502:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26508:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26498:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26498:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26472:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26472:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26472:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26528:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26662:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26536:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26536:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26528:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26406:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26421:4:23",
														"type": ""
													}
												],
												"src": "26255:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26739:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26750:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26766:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26760:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26760:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26750:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26722:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26732:6:23",
														"type": ""
													}
												],
												"src": "26680:99:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26833:54:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26843:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26861:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26868:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26857:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26857:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26877:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "26873:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26873:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26853:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "26853:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "26843:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26816:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "26826:6:23",
														"type": ""
													}
												],
												"src": "26785:102:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26985:272:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26995:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27042:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27009:32:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27009:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26999:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27057:78:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27123:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27128:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27064:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27064:71:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27057:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27170:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27177:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27166:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27166:16:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27184:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27189:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27144:21:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27144:52:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27144:52:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27205:46:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27216:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27243:6:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27221:21:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27221:29:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27212:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27212:39:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27205:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26966:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26973:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26981:3:23",
														"type": ""
													}
												],
												"src": "26893:364:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27381:195:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27391:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27403:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27414:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27399:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27399:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27391:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27438:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27449:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27434:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27434:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27457:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27463:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27453:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27453:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27427:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27427:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27427:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27483:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27555:6:23"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27564:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27491:63:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "27491:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27483:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27353:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27365:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27376:4:23",
														"type": ""
													}
												],
												"src": "27263:313:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICertToken_$2704_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICertToken_$2704_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICertToken_$2704_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICertToken_$2704__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICertToken_$2704_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ICerosRouter_$2659_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICerosRouter_$2659_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICerosRouter_$2659_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICerosRouter_$2659__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICerosRouter_$2659_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IBinancePool_$2499_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBinancePool_$2499_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBinancePool_$2499_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBinancePool_$2499__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBinancePool_$2499_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IDao_$2817_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDao_$2817_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDao_$2817_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDao_$2817__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDao_$2817_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397(memPtr) {\n\n        mstore(add(memPtr, 0), \"value must be greater than min u\")\n\n        mstore(add(memPtr, 32), \"nstake amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"AuctionProxy: not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"HelioProvider/Disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09(memPtr) {\n\n        mstore(add(memPtr, 0), \"Operator: not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101b75760003560e01c80637d6ae6f6116100ec578063cc2effdc1161008a578063e068372611610064578063e0683726146105b3578063e3b0963a146105de578063f2fde38b1461061b578063f7b188a514610644576101b7565b8063cc2effdc14610536578063d8826fec14610561578063df3d23ae1461058a576101b7565b80639479cfa2116100c65780639479cfa21461049b578063b9472535146104c6578063c4031841146104e4578063cc2a9a5b1461050d576101b7565b80637d6ae6f61461041c5780638456cb59146104595780638da5cb5b14610470576101b7565b806351c3e7be116101595780636e8d9a18116101335780636e8d9a18146103865780636f2bb86a146103b157806370b0a843146103da578063715018a614610405576101b7565b806351c3e7be146103055780635c975abb14610330578063636fc28b1461035b576101b7565b8063232da7fe11610195578063232da7fe1461024b57806332b038a314610274578063358b2b1a146102b15780633fd44f17146102dc576101b7565b80630357371d146101bc57806306394c9b146101f957806314866aef14610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de91906129aa565b61065b565b6040516101f091906129f9565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190612a14565b6108ab565b005b34801561022e57600080fd5b50610249600480360381019061024491906129aa565b61092e565b005b34801561025757600080fd5b50610272600480360381019061026d9190612a14565b610ae4565b005b34801561028057600080fd5b5061029b60048036038101906102969190612a41565b610b67565b6040516102a891906129f9565b60405180910390f35b3480156102bd57600080fd5b506102c6610bf2565b6040516102d39190612acd565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe9190612a14565b610c18565b005b34801561031157600080fd5b5061031a610d9a565b6040516103279190612b09565b60405180910390f35b34801561033c57600080fd5b50610345610dc0565b6040516103529190612b3f565b60405180910390f35b34801561036757600080fd5b50610370610dd7565b60405161037d9190612b7b565b60405180910390f35b34801561039257600080fd5b5061039b610dfd565b6040516103a89190612ba5565b60405180910390f35b3480156103bd57600080fd5b506103d860048036038101906103d391906129aa565b610e23565b005b3480156103e657600080fd5b506103ef610feb565b6040516103fc9190612ba5565b60405180910390f35b34801561041157600080fd5b5061041a611011565b005b34801561042857600080fd5b50610443600480360381019061043e91906129aa565b611025565b60405161045091906129f9565b60405180910390f35b34801561046557600080fd5b5061046e611194565b005b34801561047c57600080fd5b506104856111a6565b6040516104929190612ba5565b60405180910390f35b3480156104a757600080fd5b506104b06111d0565b6040516104bd9190612ba5565b60405180910390f35b6104ce6111f6565b6040516104db91906129f9565b60405180910390f35b3480156104f057600080fd5b5061050b60048036038101906105069190612a14565b611347565b005b34801561051957600080fd5b50610534600480360381019061052f9190612bc0565b6113ca565b005b34801561054257600080fd5b5061054b611752565b6040516105589190612ba5565b60405180910390f35b34801561056d57600080fd5b5061058860048036038101906105839190612a14565b611778565b005b34801561059657600080fd5b506105b160048036038101906105ac91906129aa565b6118fa565b005b3480156105bf57600080fd5b506105c8611ab0565b6040516105d59190612c6e565b60405180910390f35b3480156105ea57600080fd5b5061060560048036038101906106009190612a14565b611ad6565b60405161061291906129f9565b60405180910390f35b34801561062757600080fd5b50610642600480360381019061063d9190612a14565b611cee565b005b34801561065057600080fd5b50610659611d72565b005b6000610665611d84565b600260975414156106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290612ce6565b60405180910390fd5b6002609781905550600060cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9bbd2786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190612d1b565b90508083101561078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290612dba565b60405180910390fd5b6107953384611dce565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db518db285856040518363ffffffff1660e01b81526004016107f2929190612dda565b6020604051808303816000875af1158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190612d1b565b91508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988560405161089491906129f9565b60405180910390a350600160978190555092915050565b6108b3611f26565b8060c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8eb831fe42156caaf4721a87ad40c6e662b893dbeee76d7a3ed2564a318b091c816040516109239190612ba5565b60405180910390a150565b6109366111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109bc575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290612e4f565b60405180910390fd5b60026097541415610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890612ce6565b60405180910390fd5b600260978190555060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401610aa6929190612dda565b600060405180830381600087803b158015610ac057600080fd5b505af1158015610ad4573d6000803e3d6000fd5b5050505060016097819055505050565b610aec611f26565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d06483281604051610b5c9190612ba5565b60405180910390a150565b600060026097541415610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba690612ce6565b60405180910390fd5b60026097819055506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990612ebb565b60405180910390fd5b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c20611f26565b610c9060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d6060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b7f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db481604051610d8f9190612ba5565b60405180910390a150565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606560009054906101000a900460ff16905090565b60cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e2b6111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610eb1575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee790612e4f565b60405180910390fd5b60026097541415610f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2d90612ce6565b60405180910390fd5b600260978190555060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303550d5683836040518363ffffffff1660e01b8152600401610f9b929190612dda565b6020604051808303816000875af1158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde9190612d1b565b5060016097819055505050565b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611019611f26565b61102360006120f3565b565b60006002609754141561106d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106490612ce6565b60405180910390fd5b600260978190555061107f3383611dce565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303550d5684846040518363ffffffff1660e01b81526004016110dc929190612dda565b6020604051808303816000875af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f9190612d1b565b90508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988360405161117e91906129f9565b60405180910390a3600160978190555092915050565b61119c611f26565b6111a46121b9565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611200611d84565b60026097541415611246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123d90612ce6565b60405180910390fd5b600260978190555060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b815260040160206040518083038185885af11580156112bd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e29190612d1b565b90506112ee338261221c565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8260405161133491906129f9565b60405180910390a2600160978190555090565b61134f611f26565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a816040516113bf9190612ba5565b60405180910390a150565b60008060019054906101000a900460ff161590508080156113fb5750600160008054906101000a900460ff1660ff16105b80611428575061140a30612374565b1580156114275750600160008054906101000a900460ff1660ff16145b5b611467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145e90612f4d565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156114a4576001600060016101000a81548160ff0219169083151502179055505b6114ac612397565b6114b46123f0565b6114bc612449565b3360c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cf60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116f0837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b80156117495760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516117409190612fb5565b60405180910390a15b50505050505050565b60d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611780611f26565b6117f060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b8060ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118c060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611fa49092919063ffffffff16565b7f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53816040516118ef9190612ba5565b60405180910390a150565b6119026111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611988575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be90612e4f565b60405180910390fd5b60026097541415611a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0490612ce6565b60405180910390fd5b600260978190555060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401611a72929190612dda565b600060405180830381600087803b158015611a8c57600080fd5b505af1158015611aa0573d6000803e3d6000fd5b5050505060016097819055505050565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026097541415611b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1590612ce6565b60405180910390fd5b6002609781905550611b2e6111a6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611bb4575060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea9061301c565b60405180910390fd5b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e83409a836040518263ffffffff1660e01b8152600401611c4e9190612ba5565b6020604051808303816000875af1158015611c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c919190612d1b565b90508173ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d482604051611cd991906129f9565b60405180910390a26001609781905550919050565b611cf6611f26565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5d906130ae565b60405180910390fd5b611d6f816120f3565b50565b611d7a611f26565b611d826124a2565b565b611d8c610dc0565b15611dcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc39061311a565b60405180910390fd5b565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9caed128360cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401611e4f9392919061313a565b6020604051808303816000875af1158015611e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e929190612d1b565b5060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401611ef0929190612dda565b600060405180830381600087803b158015611f0a57600080fd5b505af1158015611f1e573d6000803e3d6000fd5b505050505050565b611f2e612505565b73ffffffffffffffffffffffffffffffffffffffff16611f4c6111a6565b73ffffffffffffffffffffffffffffffffffffffff1614611fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f99906131bd565b60405180910390fd5b565b600081148061202e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611feb9291906131dd565b602060405180830381865afa158015612008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202c9190612d1b565b145b61206d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206490613278565b60405180910390fd5b6120ee8363095ea7b360e01b848460405160240161208c929190612dda565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061250d565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6121c1611d84565b6001606560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612205612505565b6040516122129190612ba5565b60405180910390a1565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638340f5498360cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161229d9392919061313a565b6020604051808303816000875af11580156122bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e09190612d1b565b5060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b815260040161233e929190612dda565b600060405180830381600087803b15801561235857600080fd5b505af115801561236c573d6000803e3d6000fd5b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166123e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123dd9061330a565b60405180910390fd5b6123ee6125d4565b565b600060019054906101000a900460ff1661243f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124369061330a565b60405180910390fd5b612447612635565b565b600060019054906101000a900460ff16612498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248f9061330a565b60405180910390fd5b6124a06126a1565b565b6124aa6126fa565b6000606560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124ee612505565b6040516124fb9190612ba5565b60405180910390a1565b600033905090565b600061256f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166127439092919063ffffffff16565b90506000815111156125cf578080602001905181019061258f9190613356565b6125ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125c5906133f5565b60405180910390fd5b5b505050565b600060019054906101000a900460ff16612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261a9061330a565b60405180910390fd5b61263361262e612505565b6120f3565b565b600060019054906101000a900460ff16612684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267b9061330a565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff166126f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e79061330a565b60405180910390fd5b6001609781905550565b612702610dc0565b612741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273890613461565b60405180910390fd5b565b6060612752848460008561275b565b90509392505050565b6060824710156127a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612797906134f3565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516127c9919061358d565b60006040518083038185875af1925050503d8060008114612806576040519150601f19603f3d011682016040523d82523d6000602084013e61280b565b606091505b509150915061281c87838387612828565b92505050949350505050565b6060831561288b57600083511415612883576128438561289e565b612882576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612879906135f0565b60405180910390fd5b5b829050612896565b61289583836128c1565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156128d45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129089190613665565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061294182612916565b9050919050565b61295181612936565b811461295c57600080fd5b50565b60008135905061296e81612948565b92915050565b6000819050919050565b61298781612974565b811461299257600080fd5b50565b6000813590506129a48161297e565b92915050565b600080604083850312156129c1576129c0612911565b5b60006129cf8582860161295f565b92505060206129e085828601612995565b9150509250929050565b6129f381612974565b82525050565b6000602082019050612a0e60008301846129ea565b92915050565b600060208284031215612a2a57612a29612911565b5b6000612a388482850161295f565b91505092915050565b600060208284031215612a5757612a56612911565b5b6000612a6584828501612995565b91505092915050565b6000819050919050565b6000612a93612a8e612a8984612916565b612a6e565b612916565b9050919050565b6000612aa582612a78565b9050919050565b6000612ab782612a9a565b9050919050565b612ac781612aac565b82525050565b6000602082019050612ae26000830184612abe565b92915050565b6000612af382612a9a565b9050919050565b612b0381612ae8565b82525050565b6000602082019050612b1e6000830184612afa565b92915050565b60008115159050919050565b612b3981612b24565b82525050565b6000602082019050612b546000830184612b30565b92915050565b6000612b6582612a9a565b9050919050565b612b7581612b5a565b82525050565b6000602082019050612b906000830184612b6c565b92915050565b612b9f81612936565b82525050565b6000602082019050612bba6000830184612b96565b92915050565b60008060008060008060c08789031215612bdd57612bdc612911565b5b6000612beb89828a0161295f565b9650506020612bfc89828a0161295f565b9550506040612c0d89828a0161295f565b9450506060612c1e89828a0161295f565b9350506080612c2f89828a0161295f565b92505060a0612c4089828a0161295f565b9150509295509295509295565b6000612c5882612a9a565b9050919050565b612c6881612c4d565b82525050565b6000602082019050612c836000830184612c5f565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612cd0601f83612c89565b9150612cdb82612c9a565b602082019050919050565b60006020820190508181036000830152612cff81612cc3565b9050919050565b600081519050612d158161297e565b92915050565b600060208284031215612d3157612d30612911565b5b6000612d3f84828501612d06565b91505092915050565b7f76616c7565206d7573742062652067726561746572207468616e206d696e207560008201527f6e7374616b6520616d6f756e7400000000000000000000000000000000000000602082015250565b6000612da4602d83612c89565b9150612daf82612d48565b604082019050919050565b60006020820190508181036000830152612dd381612d97565b9050919050565b6000604082019050612def6000830185612b96565b612dfc60208301846129ea565b9392505050565b7f41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000600082015250565b6000612e39601983612c89565b9150612e4482612e03565b602082019050919050565b60006020820190508181036000830152612e6881612e2c565b9050919050565b7f48656c696f50726f76696465722f44697361626c656400000000000000000000600082015250565b6000612ea5601683612c89565b9150612eb082612e6f565b602082019050919050565b60006020820190508181036000830152612ed481612e98565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612f37602e83612c89565b9150612f4282612edb565b604082019050919050565b60006020820190508181036000830152612f6681612f2a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612f9f612f9a612f9584612f6d565b612a6e565b612f77565b9050919050565b612faf81612f84565b82525050565b6000602082019050612fca6000830184612fa6565b92915050565b7f4f70657261746f723a206e6f7420616c6c6f7765640000000000000000000000600082015250565b6000613006601583612c89565b915061301182612fd0565b602082019050919050565b6000602082019050818103600083015261303581612ff9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613098602683612c89565b91506130a38261303c565b604082019050919050565b600060208201905081810360008301526130c78161308b565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613104601083612c89565b915061310f826130ce565b602082019050919050565b60006020820190508181036000830152613133816130f7565b9050919050565b600060608201905061314f6000830186612b96565b61315c6020830185612b96565b61316960408301846129ea565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006131a7602083612c89565b91506131b282613171565b602082019050919050565b600060208201905081810360008301526131d68161319a565b9050919050565b60006040820190506131f26000830185612b96565b6131ff6020830184612b96565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000613262603683612c89565b915061326d82613206565b604082019050919050565b6000602082019050818103600083015261329181613255565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006132f4602b83612c89565b91506132ff82613298565b604082019050919050565b60006020820190508181036000830152613323816132e7565b9050919050565b61333381612b24565b811461333e57600080fd5b50565b6000815190506133508161332a565b92915050565b60006020828403121561336c5761336b612911565b5b600061337a84828501613341565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006133df602a83612c89565b91506133ea82613383565b604082019050919050565b6000602082019050818103600083015261340e816133d2565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061344b601483612c89565b915061345682613415565b602082019050919050565b6000602082019050818103600083015261347a8161343e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006134dd602683612c89565b91506134e882613481565b604082019050919050565b6000602082019050818103600083015261350c816134d0565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561354757808201518184015260208101905061352c565b83811115613556576000848401525b50505050565b600061356782613513565b613571818561351e565b9350613581818560208601613529565b80840191505092915050565b6000613599828461355c565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006135da601d83612c89565b91506135e5826135a4565b602082019050919050565b60006020820190508181036000830152613609816135cd565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061363782613610565b6136418185612c89565b9350613651818560208601613529565b61365a8161361b565b840191505092915050565b6000602082019050818103600083015261367f818461362c565b90509291505056fea264697066735822122066fba8993fd174c61890d443294eadde703502fbeaba753d1902e8e4079b46fb64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6F6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xCC2EFFDC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE0683726 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE0683726 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xE3B0963A EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x644 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xCC2EFFDC EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xD8826FEC EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xDF3D23AE EQ PUSH2 0x58A JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x9479CFA2 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x9479CFA2 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xB9472535 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xC4031841 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x50D JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6F6 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x470 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x51C3E7BE GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6E8D9A18 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6E8D9A18 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6F2BB86A EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x70B0A843 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x405 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x51C3E7BE EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x636FC28B EQ PUSH2 0x35B JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x232DA7FE GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x232DA7FE EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x32B038A3 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x358B2B1A EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x3FD44F17 EQ PUSH2 0x2DC JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x357371D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x14866AEF EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2A41 JUMP JUMPDEST PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x1011 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46E PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2BC0 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54B PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1778 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x18FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C8 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x642 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1CEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x1D72 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x665 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9BBD278 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x795 CALLER DUP5 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB518DB2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP6 PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8EB831FE42156CAAF4721A87AD40C6E662B893DBEEE76D7A3ED2564A318B091C DUP2 PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9BC JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xBAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA6 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0xC90 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD60 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE2B PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEB1 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3550D56 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9B SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1019 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x0 PUSH2 0x20F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x107F CALLER DUP4 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3550D56 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111F SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117E SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x11A4 PUSH2 0x21B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123D SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP PUSH2 0x12EE CALLER DUP3 PUSH2 0x221C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x134F PUSH2 0x1F26 JUMP JUMPDEST DUP1 PUSH1 0xD0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A DUP2 PUSH1 0x40 MLOAD PUSH2 0x13BF SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x13FB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1428 JUMPI POP PUSH2 0x140A ADDRESS PUSH2 0x2374 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1427 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP1 PUSH2 0x2F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x14AC PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x14B4 PUSH2 0x23F0 JUMP JUMPDEST PUSH2 0x14BC PUSH2 0x2449 JUMP JUMPDEST CALLER PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16F0 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1749 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1780 PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x17F0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x18C0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53 DUP2 PUSH1 0x40 MLOAD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1902 PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1988 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP1 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A04 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A72 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1B2E PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BB4 JUMPI POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1BF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEA SWAP1 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E83409A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4E SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C91 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF6 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5D SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x20F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D7A PUSH2 0x1F26 JUMP JUMPDEST PUSH2 0x1D82 PUSH2 0x24A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0xDC0 JUMP JUMPDEST ISZERO PUSH2 0x1DCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC3 SWAP1 PUSH2 0x311A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9CAED12 DUP4 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F2E PUSH2 0x2505 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F4C PUSH2 0x11A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F99 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x202E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEB SWAP3 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2008 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x202C SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST EQ JUMPDEST PUSH2 0x206D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP1 PUSH2 0x3278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20EE DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x208C SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x250D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x21C1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2205 PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2212 SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8340F549 DUP4 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233E SWAP3 SWAP2 SWAP1 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23DD SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23EE PUSH2 0x25D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x243F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2436 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2447 PUSH2 0x2635 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x248F SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24A0 PUSH2 0x26A1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x24AA PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24EE PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24FB SWAP2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2743 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x258F SWAP2 SWAP1 PUSH2 0x3356 JUMP JUMPDEST PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C5 SWAP1 PUSH2 0x33F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261A SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2633 PUSH2 0x262E PUSH2 0x2505 JUMP JUMPDEST PUSH2 0x20F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267B SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E7 SWAP1 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2702 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x2741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2738 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2752 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x275B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x27A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2797 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2806 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x280B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x281C DUP8 DUP4 DUP4 DUP8 PUSH2 0x2828 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x288B JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x2883 JUMPI PUSH2 0x2843 DUP6 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x2882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2879 SWAP1 PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x2895 DUP4 DUP4 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x28D4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP2 SWAP1 PUSH2 0x3665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2951 DUP2 PUSH2 0x2936 JUMP JUMPDEST DUP2 EQ PUSH2 0x295C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x296E DUP2 PUSH2 0x2948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2987 DUP2 PUSH2 0x2974 JUMP JUMPDEST DUP2 EQ PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29A4 DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C1 JUMPI PUSH2 0x29C0 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CF DUP6 DUP3 DUP7 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F3 DUP2 PUSH2 0x2974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A38 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A65 DUP5 DUP3 DUP6 ADD PUSH2 0x2995 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A93 PUSH2 0x2A8E PUSH2 0x2A89 DUP5 PUSH2 0x2916 JUMP JUMPDEST PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA5 DUP3 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB7 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2AAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AE2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF3 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B03 DUP2 PUSH2 0x2AE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B39 DUP2 PUSH2 0x2B24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B65 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B75 DUP2 PUSH2 0x2B5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B9F DUP2 PUSH2 0x2936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BDD JUMPI PUSH2 0x2BDC PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEB DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2BFC DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C0D DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C1E DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C2F DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C40 DUP10 DUP3 DUP11 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C58 DUP3 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C68 DUP2 PUSH2 0x2C4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CD0 PUSH1 0x1F DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDB DUP3 PUSH2 0x2C9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFF DUP2 PUSH2 0x2CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D15 DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D3F DUP5 DUP3 DUP6 ADD PUSH2 0x2D06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E7374616B6520616D6F756E7400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA4 PUSH1 0x2D DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAF DUP3 PUSH2 0x2D48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DD3 DUP2 PUSH2 0x2D97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DEF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E39 PUSH1 0x19 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E44 DUP3 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E68 DUP2 PUSH2 0x2E2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x48656C696F50726F76696465722F44697361626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EA5 PUSH1 0x16 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB0 DUP3 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ED4 DUP2 PUSH2 0x2E98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F37 PUSH1 0x2E DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F42 DUP3 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F66 DUP2 PUSH2 0x2F2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9F PUSH2 0x2F9A PUSH2 0x2F95 DUP5 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2F77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FAF DUP2 PUSH2 0x2F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F70657261746F723A206E6F7420616C6C6F7765640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH1 0x15 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x3011 DUP3 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3035 DUP2 PUSH2 0x2FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3098 PUSH1 0x26 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x30A3 DUP3 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C7 DUP2 PUSH2 0x308B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3104 PUSH1 0x10 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x310F DUP3 PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3133 DUP2 PUSH2 0x30F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x314F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x315C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A7 PUSH1 0x20 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x3171 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D6 DUP2 PUSH2 0x319A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x31FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B96 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3262 PUSH1 0x36 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x326D DUP3 PUSH2 0x3206 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3291 DUP2 PUSH2 0x3255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F4 PUSH1 0x2B DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FF DUP3 PUSH2 0x3298 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3323 DUP2 PUSH2 0x32E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3333 DUP2 PUSH2 0x2B24 JUMP JUMPDEST DUP2 EQ PUSH2 0x333E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3350 DUP2 PUSH2 0x332A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x336C JUMPI PUSH2 0x336B PUSH2 0x2911 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337A DUP5 DUP3 DUP6 ADD PUSH2 0x3341 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DF PUSH1 0x2A DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x33EA DUP3 PUSH2 0x3383 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x340E DUP2 PUSH2 0x33D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344B PUSH1 0x14 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x3456 DUP3 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347A DUP2 PUSH2 0x343E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34DD PUSH1 0x26 DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x34E8 DUP3 PUSH2 0x3481 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x350C DUP2 PUSH2 0x34D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3547 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x352C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3556 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3567 DUP3 PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x3571 DUP2 DUP6 PUSH2 0x351E JUMP JUMPDEST SWAP4 POP PUSH2 0x3581 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3529 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 DUP5 PUSH2 0x355C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35DA PUSH1 0x1D DUP4 PUSH2 0x2C89 JUMP JUMPDEST SWAP2 POP PUSH2 0x35E5 DUP3 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3609 DUP2 PUSH2 0x35CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3637 DUP3 PUSH2 0x3610 JUMP JUMPDEST PUSH2 0x3641 DUP2 DUP6 PUSH2 0x2C89 JUMP JUMPDEST SWAP4 POP PUSH2 0x3651 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3529 JUMP JUMPDEST PUSH2 0x365A DUP2 PUSH2 0x361B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x367F DUP2 DUP5 PUSH2 0x362C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xFBA8993FD174C6 XOR SWAP1 0xD4 NUMBER 0x29 0x4E 0xAD 0xDE PUSH17 0x3502FBEABA753D1902E8E4079B46FB6473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "687:5648:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:536;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6196:137;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4570:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6000:191;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2530:394;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5591:259;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;998:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1858:84:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1055:25:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;911:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4220:176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;836:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:101:0;;;;;;;;;;;;;:::i;:::-;;3847:327:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5163:61;;;;;;;;;;;;;:::i;:::-;;1441:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;880:25:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:337;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5855:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1522:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1086:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5345:241;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4401:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1033:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2980:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5229:65:13;;;;;;;;;;;;;:::i;:::-;;3306:536;3432:18;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;3466:22:13::2;3491:5;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3466:48;;3555:14;3545:6;:24;;3524:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3650:39;3670:10;3682:6;3650:19;:39::i;:::-;3712:9;;;;;;;;;;;:21;;;3734:9;3745:6;3712:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3699:53;;3790:9;3767:41;;3778:10;3767:41;;;3801:6;3767:41;;;;;;:::i;:::-;;;;;;;;3818:17;1772:1:3::1;2872:7;:22;;;;3306:536:13::0;;;;:::o;6196:137::-;1334:13:0;:11;:13::i;:::-;6279:8:13::1;6267:9;;:20;;;;;;;;;;;;;;;;;;6302:24;6317:8;6302:24;;;;;;:::i;:::-;;;;;;;;6196:137:::0;:::o;4570:164::-;1417:7;:5;:7::i;:::-;1403:21;;:10;:21;;;:45;;;;1442:6;;;;;;;;;;;1428:20;;:10;:20;;;1403:45;1382:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;4690:16:13::2;;;;;;;;;;;:21;;;4712:7;4721:5;4690:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1772:1:3::1;2872:7;:22;;;;4570:164:13::0;;:::o;6000:191::-;1334:13:0;:11;:13::i;:::-;6115:15:13::1;6085:16;;:46;;;;;;;;;;;;;;;;;;6146:38;6168:15;6146:38;;;;;;:::i;:::-;;;;;;;;6000:191:::0;:::o;2530:394::-;2626:13;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2655:32:13::1;;;;;;;;;;:::i;:::-;;;;;;;;940:34:::0;;;;;;;;;;;;;:::o;5591:259::-;1334:13:0;:11;:13::i;:::-;5660:46:13::1;5697:4;;;;;;;;;;;5704:1;5667:8;;;;;;;;;;;5660:28;;;;:46;;;;;:::i;:::-;5727:7;5716:8;;:18;;;;;;;;;;;;;;;;;;5744:62;5781:4;;;;;;;;;;;5788:17;5751:8;;;;;;;;;;;5744:28;;;;:62;;;;;:::i;:::-;5821:22;5835:7;5821:22;;;;;;:::i;:::-;;;;;;;;5591:259:::0;:::o;998:29::-;;;;;;;;;;;;;:::o;1858:84:2:-;1905:4;1928:7;;;;;;;;;;;1921:14;;1858:84;:::o;1055:25:13:-;;;;;;;;;;;;;:::o;911:23::-;;;;;;;;;;;;;:::o;4220:176::-;1417:7;:5;:7::i;:::-;1403:21;;:10;:21;;;:45;;;;1442:6;;;;;;;;;;;1428:20;;:10;:20;;;1403:45;1382:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;4347:9:13::2;;;;;;;;;;;:23;;;4371:9;4382:6;4347:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1772:1:3::1;2872:7;:22;;;;4220:176:13::0;;:::o;836:24::-;;;;;;;;;;;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3847:327:13:-;3962:13;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;3991:39:13::1;4011:10;4023:6;3991:19;:39::i;:::-;4048:9;;;;;;;;;;;:23;;;4072:9;4083:6;4048:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4040:50;;4128:9;4105:40;;4116:10;4105:40;;;4139:5;4105:40;;;;;;:::i;:::-;;;;;;;;1772:1:3::0;2872:7;:22;;;;3847:327:13;;;;:::o;5163:61::-;1334:13:0;:11;:13::i;:::-;5209:8:13::1;:6;:8::i;:::-;5163:61::o:0;1441:85:0:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;880:25:13:-;;;;;;;;;;;;;:::o;2188:337::-;2293:13;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2330:9:13::2;;;;;;;;;;;:17;;;2355:9;2330:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:45;;2418:37;2437:10;2449:5;2418:18;:37::i;:::-;2478:10;2470:26;;;2490:5;2470:26;;;;;;:::i;:::-;;;;;;;;1772:1:3::1;2872:7;:22;;;;2188:337:13::0;:::o;5855:140::-;1334:13:0;:11;:13::i;:::-;5936:12:13::1;5927:6;;:21;;;;;;;;;;;;;;;;;;5963:25;5975:12;5963:25;;;;;;:::i;:::-;;;;;;;;5855:140:::0;:::o;1522:630::-;3111:19:1;3134:13;;;;;;;;;;;3133:14;3111:36;;3179:14;:34;;;;;3212:1;3197:12;;;;;;;;;;:16;;;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;;3284:1;3268:12;;;;;;;;;;:17;;;3219:66;3178:108;3157:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3383:1;3368:12;;:16;;;;;;;;;;;;;;;;;;3398:14;3394:65;;;3444:4;3428:13;;:20;;;;;;;;;;;;;;;;;;3394:65;1738:16:13::1;:14;:16::i;:::-;1764:17;:15;:17::i;:::-;1791:24;:22;:24::i;:::-;1837:10;1825:9;;:22;;;;;;;;;;;;;;;;;;1887:15;1857:16;;:46;;;;;;;;;;;;;;;;;;1926:9;1913:10;;:22;;;;;;;;;;;;;;;;;;1956:7;1945:8;;:18;;;;;;;;;;;;;;;;;;1998:8;1973:9;;:34;;;;;;;;;;;;;;;;;;2029:10;2017:4;;:23;;;;;;;;;;;;;;;;;;2071:4;2050:5;;:26;;;;;;;;;;;;;;;;;;2086:59;2115:10;2127:17;2093:8;;;;;;;;;;;2086:28;;;;:59;;;;;:::i;:::-;3483:14:1::0;3479:99;;;3529:5;3513:13;;:21;;;;;;;;;;;;;;;;;;3553:14;3565:1;3553:14;;;;;;:::i;:::-;;;;;;;;3479:99;3101:483;1522:630:13;;;;;;:::o;1086:21::-;;;;;;;;;;;;;:::o;5345:241::-;1334:13:0;:11;:13::i;:::-;5406:46:13::1;5443:4;;;;;;;;;;;5450:1;5413:8;;;;;;;;;;;5406:28;;;;:46;;;;;:::i;:::-;5474:3;5462:4;;:16;;;;;;;;;;;;;;;;;;5488:62;5525:4;;;;;;;;;;;5532:17;5495:8;;;;;;;;;;;5488:28;;;;:62;;;;;:::i;:::-;5565:14;5575:3;5565:14;;;;;;:::i;:::-;;;;;;;;5345:241:::0;:::o;4401:164::-;1417:7;:5;:7::i;:::-;1403:21;;:10;:21;;;:45;;;;1442:6;;;;;;;;;;;1428:20;;:10;:20;;;1403:45;1382:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;4521:16:13::2;;;;;;;;;;;:21;;;4543:7;4552:5;4521:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1772:1:3::1;2872:7;:22;;;;4401:164:13::0;;:::o;1033:16::-;;;;;;;;;;;;;:::o;2980:248::-;3094:14;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;1247:7:13::1;:5;:7::i;:::-;1233:21;;:10;:21;;;:48;;;;1272:9;;;;;;;;;;;1258:23;;:10;:23;;;1233:48;1212:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3133:9:::2;;;;;;;;;;;:15;;;3149:9;3133:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3124:35;;3180:9;3174:24;;;3191:6;3174:24;;;;;;:::i;:::-;;;;;;;;1772:1:3::0;2872:7;:22;;;;2980:248:13;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;2429:1:::1;2409:22;;:8;:22;;;;2401:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;5229:65:13:-;1334:13:0;:11;:13::i;:::-;5277:10:13::1;:8;:10::i;:::-;5229:65::o:0;2010:106:2:-;2080:8;:6;:8::i;:::-;2079:9;2071:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2010:106::o;4927:185:13:-;5008:4;;;;;;;;;;;:13;;;5022:7;5039:8;;;;;;;;;;;5050:6;5008:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5067:16;;;;;;;;;;;:21;;;5089:7;5098:6;5067:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4927:185;;:::o;1599:130:0:-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;1475:603:11:-;1839:1;1830:5;:10;1829:62;;;;1889:1;1846:5;:15;;;1870:4;1877:7;1846:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;1981:90;2001:5;2031:22;;;2055:7;2064:5;2008:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:19;:90::i;:::-;1475:603;;;:::o;2673:187:0:-;2746:16;2765:6;;;;;;;;;;;2746:25;;2790:8;2781:6;;:17;;;;;;;;;;;;;;;;;;2844:8;2813:40;;2834:8;2813:40;;;;;;;;;;;;2736:124;2673:187;:::o;2429:115:2:-;1482:19;:17;:19::i;:::-;2498:4:::1;2488:7;;:14;;;;;;;;;;;;;;;;;;2517:20;2524:12;:10;:12::i;:::-;2517:20;;;;;;:::i;:::-;;;;;;;;2429:115::o:0;4739:183:13:-;4819:4;;;;;;;;;;;:12;;;4832:7;4849:8;;;;;;;;;;;4860:6;4819:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4877:16;;;;;;;;;;;:21;;;4899:7;4908:6;4877:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4739:183;;:::o;1186:320:7:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;1003:95:0:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;1063:97:2:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1126:27:2::1;:25;:27::i;:::-;1063:97::o:0;1853:111:3:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1923:34:3::1;:32;:34::i;:::-;1853:111::o:0;2676:117:2:-;1729:16;:14;:16::i;:::-;2744:5:::1;2734:7;;:15;;;;;;;;;;;;;;;;;;2764:22;2773:12;:10;:12::i;:::-;2764:22;;;;;;:::i;:::-;;;;;;;;2676:117::o:0;850:96:8:-;903:7;929:10;922:17;;850:96;:::o;3747:706:11:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;1104:111:0:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;1166:95:2:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1249:5:2::1;1239:7;;:15;;;;;;;;;;;;;;;;;;1166:95::o:0;1970:109:3:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1772:1:3::1;2050:7;:22;;;;1970:109::o:0;2188:106:2:-;2254:8;:6;:8::i;:::-;2246:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:106::o;3873:223:12:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:23;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:60::-;2727:3;2748:5;2741:12;;2699:60;;;:::o;2765:142::-;2815:9;2848:53;2866:34;2875:24;2893:5;2875:24;:::i;:::-;2866:34;:::i;:::-;2848:53;:::i;:::-;2835:66;;2765:142;;;:::o;2913:126::-;2963:9;2996:37;3027:5;2996:37;:::i;:::-;2983:50;;2913:126;;;:::o;3045:145::-;3114:9;3147:37;3178:5;3147:37;:::i;:::-;3134:50;;3045:145;;;:::o;3196:169::-;3302:56;3352:5;3302:56;:::i;:::-;3297:3;3290:69;3196:169;;:::o;3371:260::-;3483:4;3521:2;3510:9;3506:18;3498:26;;3534:90;3621:1;3610:9;3606:17;3597:6;3534:90;:::i;:::-;3371:260;;;;:::o;3637:147::-;3708:9;3741:37;3772:5;3741:37;:::i;:::-;3728:50;;3637:147;;;:::o;3790:173::-;3898:58;3950:5;3898:58;:::i;:::-;3893:3;3886:71;3790:173;;:::o;3969:264::-;4083:4;4121:2;4110:9;4106:18;4098:26;;4134:92;4223:1;4212:9;4208:17;4199:6;4134:92;:::i;:::-;3969:264;;;;:::o;4239:90::-;4273:7;4316:5;4309:13;4302:21;4291:32;;4239:90;;;:::o;4335:109::-;4416:21;4431:5;4416:21;:::i;:::-;4411:3;4404:34;4335:109;;:::o;4450:210::-;4537:4;4575:2;4564:9;4560:18;4552:26;;4588:65;4650:1;4639:9;4635:17;4626:6;4588:65;:::i;:::-;4450:210;;;;:::o;4666:147::-;4737:9;4770:37;4801:5;4770:37;:::i;:::-;4757:50;;4666:147;;;:::o;4819:173::-;4927:58;4979:5;4927:58;:::i;:::-;4922:3;4915:71;4819:173;;:::o;4998:264::-;5112:4;5150:2;5139:9;5135:18;5127:26;;5163:92;5252:1;5241:9;5237:17;5228:6;5163:92;:::i;:::-;4998:264;;;;:::o;5268:118::-;5355:24;5373:5;5355:24;:::i;:::-;5350:3;5343:37;5268:118;;:::o;5392:222::-;5485:4;5523:2;5512:9;5508:18;5500:26;;5536:71;5604:1;5593:9;5589:17;5580:6;5536:71;:::i;:::-;5392:222;;;;:::o;5620:1057::-;5724:6;5732;5740;5748;5756;5764;5813:3;5801:9;5792:7;5788:23;5784:33;5781:120;;;5820:79;;:::i;:::-;5781:120;5940:1;5965:53;6010:7;6001:6;5990:9;5986:22;5965:53;:::i;:::-;5955:63;;5911:117;6067:2;6093:53;6138:7;6129:6;6118:9;6114:22;6093:53;:::i;:::-;6083:63;;6038:118;6195:2;6221:53;6266:7;6257:6;6246:9;6242:22;6221:53;:::i;:::-;6211:63;;6166:118;6323:2;6349:53;6394:7;6385:6;6374:9;6370:22;6349:53;:::i;:::-;6339:63;;6294:118;6451:3;6478:53;6523:7;6514:6;6503:9;6499:22;6478:53;:::i;:::-;6468:63;;6422:119;6580:3;6607:53;6652:7;6643:6;6632:9;6628:22;6607:53;:::i;:::-;6597:63;;6551:119;5620:1057;;;;;;;;:::o;6683:139::-;6746:9;6779:37;6810:5;6779:37;:::i;:::-;6766:50;;6683:139;;;:::o;6828:157::-;6928:50;6972:5;6928:50;:::i;:::-;6923:3;6916:63;6828:157;;:::o;6991:248::-;7097:4;7135:2;7124:9;7120:18;7112:26;;7148:84;7229:1;7218:9;7214:17;7205:6;7148:84;:::i;:::-;6991:248;;;;:::o;7245:169::-;7329:11;7363:6;7358:3;7351:19;7403:4;7398:3;7394:14;7379:29;;7245:169;;;;:::o;7420:181::-;7560:33;7556:1;7548:6;7544:14;7537:57;7420:181;:::o;7607:366::-;7749:3;7770:67;7834:2;7829:3;7770:67;:::i;:::-;7763:74;;7846:93;7935:3;7846:93;:::i;:::-;7964:2;7959:3;7955:12;7948:19;;7607:366;;;:::o;7979:419::-;8145:4;8183:2;8172:9;8168:18;8160:26;;8232:9;8226:4;8222:20;8218:1;8207:9;8203:17;8196:47;8260:131;8386:4;8260:131;:::i;:::-;8252:139;;7979:419;;;:::o;8404:143::-;8461:5;8492:6;8486:13;8477:22;;8508:33;8535:5;8508:33;:::i;:::-;8404:143;;;;:::o;8553:351::-;8623:6;8672:2;8660:9;8651:7;8647:23;8643:32;8640:119;;;8678:79;;:::i;:::-;8640:119;8798:1;8823:64;8879:7;8870:6;8859:9;8855:22;8823:64;:::i;:::-;8813:74;;8769:128;8553:351;;;;:::o;8910:232::-;9050:34;9046:1;9038:6;9034:14;9027:58;9119:15;9114:2;9106:6;9102:15;9095:40;8910:232;:::o;9148:366::-;9290:3;9311:67;9375:2;9370:3;9311:67;:::i;:::-;9304:74;;9387:93;9476:3;9387:93;:::i;:::-;9505:2;9500:3;9496:12;9489:19;;9148:366;;;:::o;9520:419::-;9686:4;9724:2;9713:9;9709:18;9701:26;;9773:9;9767:4;9763:20;9759:1;9748:9;9744:17;9737:47;9801:131;9927:4;9801:131;:::i;:::-;9793:139;;9520:419;;;:::o;9945:332::-;10066:4;10104:2;10093:9;10089:18;10081:26;;10117:71;10185:1;10174:9;10170:17;10161:6;10117:71;:::i;:::-;10198:72;10266:2;10255:9;10251:18;10242:6;10198:72;:::i;:::-;9945:332;;;;;:::o;10283:175::-;10423:27;10419:1;10411:6;10407:14;10400:51;10283:175;:::o;10464:366::-;10606:3;10627:67;10691:2;10686:3;10627:67;:::i;:::-;10620:74;;10703:93;10792:3;10703:93;:::i;:::-;10821:2;10816:3;10812:12;10805:19;;10464:366;;;:::o;10836:419::-;11002:4;11040:2;11029:9;11025:18;11017:26;;11089:9;11083:4;11079:20;11075:1;11064:9;11060:17;11053:47;11117:131;11243:4;11117:131;:::i;:::-;11109:139;;10836:419;;;:::o;11261:172::-;11401:24;11397:1;11389:6;11385:14;11378:48;11261:172;:::o;11439:366::-;11581:3;11602:67;11666:2;11661:3;11602:67;:::i;:::-;11595:74;;11678:93;11767:3;11678:93;:::i;:::-;11796:2;11791:3;11787:12;11780:19;;11439:366;;;:::o;11811:419::-;11977:4;12015:2;12004:9;12000:18;11992:26;;12064:9;12058:4;12054:20;12050:1;12039:9;12035:17;12028:47;12092:131;12218:4;12092:131;:::i;:::-;12084:139;;11811:419;;;:::o;12236:233::-;12376:34;12372:1;12364:6;12360:14;12353:58;12445:16;12440:2;12432:6;12428:15;12421:41;12236:233;:::o;12475:366::-;12617:3;12638:67;12702:2;12697:3;12638:67;:::i;:::-;12631:74;;12714:93;12803:3;12714:93;:::i;:::-;12832:2;12827:3;12823:12;12816:19;;12475:366;;;:::o;12847:419::-;13013:4;13051:2;13040:9;13036:18;13028:26;;13100:9;13094:4;13090:20;13086:1;13075:9;13071:17;13064:47;13128:131;13254:4;13128:131;:::i;:::-;13120:139;;12847:419;;;:::o;13272:85::-;13317:7;13346:5;13335:16;;13272:85;;;:::o;13363:86::-;13398:7;13438:4;13431:5;13427:16;13416:27;;13363:86;;;:::o;13455:154::-;13511:9;13544:59;13560:42;13569:32;13595:5;13569:32;:::i;:::-;13560:42;:::i;:::-;13544:59;:::i;:::-;13531:72;;13455:154;;;:::o;13615:143::-;13708:43;13745:5;13708:43;:::i;:::-;13703:3;13696:56;13615:143;;:::o;13764:234::-;13863:4;13901:2;13890:9;13886:18;13878:26;;13914:77;13988:1;13977:9;13973:17;13964:6;13914:77;:::i;:::-;13764:234;;;;:::o;14004:171::-;14144:23;14140:1;14132:6;14128:14;14121:47;14004:171;:::o;14181:366::-;14323:3;14344:67;14408:2;14403:3;14344:67;:::i;:::-;14337:74;;14420:93;14509:3;14420:93;:::i;:::-;14538:2;14533:3;14529:12;14522:19;;14181:366;;;:::o;14553:419::-;14719:4;14757:2;14746:9;14742:18;14734:26;;14806:9;14800:4;14796:20;14792:1;14781:9;14777:17;14770:47;14834:131;14960:4;14834:131;:::i;:::-;14826:139;;14553:419;;;:::o;14978:225::-;15118:34;15114:1;15106:6;15102:14;15095:58;15187:8;15182:2;15174:6;15170:15;15163:33;14978:225;:::o;15209:366::-;15351:3;15372:67;15436:2;15431:3;15372:67;:::i;:::-;15365:74;;15448:93;15537:3;15448:93;:::i;:::-;15566:2;15561:3;15557:12;15550:19;;15209:366;;;:::o;15581:419::-;15747:4;15785:2;15774:9;15770:18;15762:26;;15834:9;15828:4;15824:20;15820:1;15809:9;15805:17;15798:47;15862:131;15988:4;15862:131;:::i;:::-;15854:139;;15581:419;;;:::o;16006:166::-;16146:18;16142:1;16134:6;16130:14;16123:42;16006:166;:::o;16178:366::-;16320:3;16341:67;16405:2;16400:3;16341:67;:::i;:::-;16334:74;;16417:93;16506:3;16417:93;:::i;:::-;16535:2;16530:3;16526:12;16519:19;;16178:366;;;:::o;16550:419::-;16716:4;16754:2;16743:9;16739:18;16731:26;;16803:9;16797:4;16793:20;16789:1;16778:9;16774:17;16767:47;16831:131;16957:4;16831:131;:::i;:::-;16823:139;;16550:419;;;:::o;16975:442::-;17124:4;17162:2;17151:9;17147:18;17139:26;;17175:71;17243:1;17232:9;17228:17;17219:6;17175:71;:::i;:::-;17256:72;17324:2;17313:9;17309:18;17300:6;17256:72;:::i;:::-;17338;17406:2;17395:9;17391:18;17382:6;17338:72;:::i;:::-;16975:442;;;;;;:::o;17423:182::-;17563:34;17559:1;17551:6;17547:14;17540:58;17423:182;:::o;17611:366::-;17753:3;17774:67;17838:2;17833:3;17774:67;:::i;:::-;17767:74;;17850:93;17939:3;17850:93;:::i;:::-;17968:2;17963:3;17959:12;17952:19;;17611:366;;;:::o;17983:419::-;18149:4;18187:2;18176:9;18172:18;18164:26;;18236:9;18230:4;18226:20;18222:1;18211:9;18207:17;18200:47;18264:131;18390:4;18264:131;:::i;:::-;18256:139;;17983:419;;;:::o;18408:332::-;18529:4;18567:2;18556:9;18552:18;18544:26;;18580:71;18648:1;18637:9;18633:17;18624:6;18580:71;:::i;:::-;18661:72;18729:2;18718:9;18714:18;18705:6;18661:72;:::i;:::-;18408:332;;;;;:::o;18746:241::-;18886:34;18882:1;18874:6;18870:14;18863:58;18955:24;18950:2;18942:6;18938:15;18931:49;18746:241;:::o;18993:366::-;19135:3;19156:67;19220:2;19215:3;19156:67;:::i;:::-;19149:74;;19232:93;19321:3;19232:93;:::i;:::-;19350:2;19345:3;19341:12;19334:19;;18993:366;;;:::o;19365:419::-;19531:4;19569:2;19558:9;19554:18;19546:26;;19618:9;19612:4;19608:20;19604:1;19593:9;19589:17;19582:47;19646:131;19772:4;19646:131;:::i;:::-;19638:139;;19365:419;;;:::o;19790:230::-;19930:34;19926:1;19918:6;19914:14;19907:58;19999:13;19994:2;19986:6;19982:15;19975:38;19790:230;:::o;20026:366::-;20168:3;20189:67;20253:2;20248:3;20189:67;:::i;:::-;20182:74;;20265:93;20354:3;20265:93;:::i;:::-;20383:2;20378:3;20374:12;20367:19;;20026:366;;;:::o;20398:419::-;20564:4;20602:2;20591:9;20587:18;20579:26;;20651:9;20645:4;20641:20;20637:1;20626:9;20622:17;20615:47;20679:131;20805:4;20679:131;:::i;:::-;20671:139;;20398:419;;;:::o;20823:116::-;20893:21;20908:5;20893:21;:::i;:::-;20886:5;20883:32;20873:60;;20929:1;20926;20919:12;20873:60;20823:116;:::o;20945:137::-;20999:5;21030:6;21024:13;21015:22;;21046:30;21070:5;21046:30;:::i;:::-;20945:137;;;;:::o;21088:345::-;21155:6;21204:2;21192:9;21183:7;21179:23;21175:32;21172:119;;;21210:79;;:::i;:::-;21172:119;21330:1;21355:61;21408:7;21399:6;21388:9;21384:22;21355:61;:::i;:::-;21345:71;;21301:125;21088:345;;;;:::o;21439:229::-;21579:34;21575:1;21567:6;21563:14;21556:58;21648:12;21643:2;21635:6;21631:15;21624:37;21439:229;:::o;21674:366::-;21816:3;21837:67;21901:2;21896:3;21837:67;:::i;:::-;21830:74;;21913:93;22002:3;21913:93;:::i;:::-;22031:2;22026:3;22022:12;22015:19;;21674:366;;;:::o;22046:419::-;22212:4;22250:2;22239:9;22235:18;22227:26;;22299:9;22293:4;22289:20;22285:1;22274:9;22270:17;22263:47;22327:131;22453:4;22327:131;:::i;:::-;22319:139;;22046:419;;;:::o;22471:170::-;22611:22;22607:1;22599:6;22595:14;22588:46;22471:170;:::o;22647:366::-;22789:3;22810:67;22874:2;22869:3;22810:67;:::i;:::-;22803:74;;22886:93;22975:3;22886:93;:::i;:::-;23004:2;22999:3;22995:12;22988:19;;22647:366;;;:::o;23019:419::-;23185:4;23223:2;23212:9;23208:18;23200:26;;23272:9;23266:4;23262:20;23258:1;23247:9;23243:17;23236:47;23300:131;23426:4;23300:131;:::i;:::-;23292:139;;23019:419;;;:::o;23444:225::-;23584:34;23580:1;23572:6;23568:14;23561:58;23653:8;23648:2;23640:6;23636:15;23629:33;23444:225;:::o;23675:366::-;23817:3;23838:67;23902:2;23897:3;23838:67;:::i;:::-;23831:74;;23914:93;24003:3;23914:93;:::i;:::-;24032:2;24027:3;24023:12;24016:19;;23675:366;;;:::o;24047:419::-;24213:4;24251:2;24240:9;24236:18;24228:26;;24300:9;24294:4;24290:20;24286:1;24275:9;24271:17;24264:47;24328:131;24454:4;24328:131;:::i;:::-;24320:139;;24047:419;;;:::o;24472:98::-;24523:6;24557:5;24551:12;24541:22;;24472:98;;;:::o;24576:147::-;24677:11;24714:3;24699:18;;24576:147;;;;:::o;24729:307::-;24797:1;24807:113;24821:6;24818:1;24815:13;24807:113;;;24906:1;24901:3;24897:11;24891:18;24887:1;24882:3;24878:11;24871:39;24843:2;24840:1;24836:10;24831:15;;24807:113;;;24938:6;24935:1;24932:13;24929:101;;;25018:1;25009:6;25004:3;25000:16;24993:27;24929:101;24778:258;24729:307;;;:::o;25042:373::-;25146:3;25174:38;25206:5;25174:38;:::i;:::-;25228:88;25309:6;25304:3;25228:88;:::i;:::-;25221:95;;25325:52;25370:6;25365:3;25358:4;25351:5;25347:16;25325:52;:::i;:::-;25402:6;25397:3;25393:16;25386:23;;25150:265;25042:373;;;;:::o;25421:271::-;25551:3;25573:93;25662:3;25653:6;25573:93;:::i;:::-;25566:100;;25683:3;25676:10;;25421:271;;;;:::o;25698:179::-;25838:31;25834:1;25826:6;25822:14;25815:55;25698:179;:::o;25883:366::-;26025:3;26046:67;26110:2;26105:3;26046:67;:::i;:::-;26039:74;;26122:93;26211:3;26122:93;:::i;:::-;26240:2;26235:3;26231:12;26224:19;;25883:366;;;:::o;26255:419::-;26421:4;26459:2;26448:9;26444:18;26436:26;;26508:9;26502:4;26498:20;26494:1;26483:9;26479:17;26472:47;26536:131;26662:4;26536:131;:::i;:::-;26528:139;;26255:419;;;:::o;26680:99::-;26732:6;26766:5;26760:12;26750:22;;26680:99;;;:::o;26785:102::-;26826:6;26877:2;26873:7;26868:2;26861:5;26857:14;26853:28;26843:38;;26785:102;;;:::o;26893:364::-;26981:3;27009:39;27042:5;27009:39;:::i;:::-;27064:71;27128:6;27123:3;27064:71;:::i;:::-;27057:78;;27144:52;27189:6;27184:3;27177:4;27170:5;27166:16;27144:52;:::i;:::-;27221:29;27243:6;27221:29;:::i;:::-;27216:3;27212:39;27205:46;;26985:272;26893:364;;;;:::o;27263:313::-;27376:4;27414:2;27403:9;27399:18;27391:26;;27463:9;27457:4;27453:20;27449:1;27438:9;27434:17;27427:47;27491:78;27564:4;27555:6;27491:78;:::i;:::-;27483:86;;27263:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2802600",
								"executionCost": "3053",
								"totalCost": "2805653"
							},
							"external": {
								"_ceRouter()": "infinite",
								"_ceToken()": "2559",
								"_certToken()": "2559",
								"_collateralToken()": "infinite",
								"_dao()": "infinite",
								"_operator()": "2603",
								"_pool()": "infinite",
								"_proxy()": "2559",
								"changeCeToken(address)": "infinite",
								"changeCollateralToken(address)": "infinite",
								"changeDao(address)": "infinite",
								"changeOperator(address)": "infinite",
								"changeProxy(address)": "infinite",
								"claimInABNBc(address)": "infinite",
								"daoBurn(address,uint256)": "infinite",
								"daoMint(address,uint256)": "infinite",
								"initialize(address,address,address,address,address,address)": "infinite",
								"liquidation(address,uint256)": "infinite",
								"owner()": "2612",
								"pause()": "infinite",
								"paused()": "2547",
								"provide()": "infinite",
								"provideInABNBc(uint256)": "25005",
								"release(address,uint256)": "infinite",
								"releaseInABNBc(address,uint256)": "infinite",
								"renounceOwnership()": "30509",
								"transferOwnership(address)": "30835",
								"unPause()": "infinite"
							},
							"internal": {
								"_provideCollateral(address,uint256)": "infinite",
								"_withdrawCollateral(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 687,
									"end": 6335,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066fba8993fd174c61890d443294eadde703502fbeaba753d1902e8e4079b46fb64736f6c634300080a0033",
									".code": [
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "7D6AE6F6"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "CC2EFFDC"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "E0683726"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "E0683726"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "E3B0963A"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "F7B188A5"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "CC2EFFDC"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "D8826FEC"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "DF3D23AE"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "9479CFA2"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "9479CFA2"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "B9472535"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "C4031841"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "CC2A9A5B"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "7D6AE6F6"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "51C3E7BE"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "6E8D9A18"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "6E8D9A18"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "6F2BB86A"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "70B0A843"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "51C3E7BE"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "636FC28B"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "232DA7FE"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "232DA7FE"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "32B038A3"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "358B2B1A"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "3FD44F17"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "357371D"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "6394C9B"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "14866AEF"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 687,
											"end": 6335,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 880,
											"end": 905,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "CF"
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3491,
											"end": 3496,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "PUSH",
											"source": 13,
											"value": "D9BBD278"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3569,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 3524,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 3670,
											"end": 3680,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3650,
											"end": 3689,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 3689,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 3650,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"source": 13,
											"value": "DB518DB2"
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 3712,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3799,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3778,
											"end": 3788,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398"
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3808,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3842,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6276,
											"name": "PUSH",
											"source": 13,
											"value": "C9"
										},
										{
											"begin": 6267,
											"end": 6276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "PUSH",
											"source": 13,
											"value": "8EB831FE42156CAAF4721A87AD40C6E662B893DBEEE76D7A3ED2564A318B091C"
										},
										{
											"begin": 6317,
											"end": 6325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6326,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6333,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "D0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4706,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4734,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6130,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 6085,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "PUSH",
											"source": 13,
											"value": "5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832"
										},
										{
											"begin": 6168,
											"end": 6183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6184,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6191,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2530,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 940,
											"end": 974,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5667,
											"end": 5675,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5688,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5688,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 5660,
											"end": 5688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5660,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5724,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5716,
											"end": 5724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5759,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5772,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5772,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 5744,
											"end": 5772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "PUSH",
											"source": 13,
											"value": "1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5843,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5850,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "CF"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1080,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 934,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 911,
											"end": 934,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "D0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4370,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4370,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4370,
											"name": "PUSH",
											"source": 13,
											"value": "3550D56"
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4396,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "C9"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 860,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 836,
											"end": 860,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 4011,
											"end": 4021,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 3991,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4057,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4071,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4071,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4071,
											"name": "PUSH",
											"source": 13,
											"value": "3550D56"
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4048,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4116,
											"end": 4126,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH",
											"source": 13,
											"value": "2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398"
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4145,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 4174,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 5209,
											"end": 5217,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5209,
											"end": 5217,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5209,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5224,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "CA"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 905,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 880,
											"end": 905,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 13,
											"value": "D0E30DB0"
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2330,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 2418,
											"end": 2455,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2455,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2418,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"source": 13,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2525,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 5948,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "PUSH",
											"source": 13,
											"value": "D0"
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "PUSH",
											"source": 13,
											"value": "CF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A"
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5988,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5995,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 1764,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 1764,
											"end": 1781,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1781,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 1764,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "PUSH",
											"source": 13,
											"value": "C9"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1902,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1873,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 1857,
											"end": 1873,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1923,
											"name": "PUSH",
											"source": 13,
											"value": "CA"
										},
										{
											"begin": 1913,
											"end": 1923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1953,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 1945,
											"end": 1953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2075,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2055,
											"name": "PUSH",
											"source": 13,
											"value": "CF"
										},
										{
											"begin": 2050,
											"end": 2055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2115,
											"end": 2125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 2086,
											"end": 2114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2086,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 2152,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "D0"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5447,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5406,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5549,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5488,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "PUSH",
											"source": 13,
											"value": "31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53"
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5579,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5586,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "D0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1403,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 1382,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4542,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4542,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4542,
											"name": "PUSH",
											"source": 13,
											"value": "9DC29FAC"
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4557,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4565,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1033,
											"end": 1049,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1254,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "C9"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1258,
											"end": 1281,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1258,
											"end": 1281,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1281,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 1233,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 1212,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "PUSH",
											"source": 13,
											"value": "CD"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "1E83409A"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 3133,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4"
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3198,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3228,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 5277,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5294,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4927,
											"end": 5112,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 4927,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5021,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5008,
											"end": 5021,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5021,
											"name": "PUSH",
											"source": 13,
											"value": "D9CAED12"
										},
										{
											"begin": 5022,
											"end": 5029,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5047,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5088,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5088,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5088,
											"name": "PUSH",
											"source": 13,
											"value": "9DC29FAC"
										},
										{
											"begin": 5089,
											"end": 5096,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5112,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1846,
											"end": 1890,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2524,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4739,
											"end": 4922,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4739,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "PUSH",
											"source": 13,
											"value": "CE"
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "PUSH",
											"source": 13,
											"value": "8340F549"
										},
										{
											"begin": 4832,
											"end": 4839,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "PUSH",
											"source": 13,
											"value": "CB"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4857,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "PUSH",
											"source": 13,
											"value": "CC"
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4893,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4898,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4898,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4898,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4922,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1126,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 1729,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1195,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "tag",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 23,
											"value": "477"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "549"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 23,
											"value": "549"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 23,
											"value": "478"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "551"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "477"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 23,
											"value": "551"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "552"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 23,
											"value": "552"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "554"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "478"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 23,
											"value": "554"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 23,
											"value": "480"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "557"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "480"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 23,
											"value": "557"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "558"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 23,
											"value": "558"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 23,
											"value": "482"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "560"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 23,
											"value": "560"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "562"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "563"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 23,
											"value": "563"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 23,
											"value": "562"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "564"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 23,
											"value": "564"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "565"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "482"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 23,
											"value": "565"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "567"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "480"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 23,
											"value": "567"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 23,
											"value": "43"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "569"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 23,
											"value": "569"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 23,
											"value": "47"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "571"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "572"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 23,
											"value": "572"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 23,
											"value": "571"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "573"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 23,
											"value": "573"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "575"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "576"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 23,
											"value": "576"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 23,
											"value": "575"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "577"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "482"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 23,
											"value": "577"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "tag",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2727,
											"end": 2730,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2699,
											"end": 2759,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "tag",
											"source": 23,
											"value": "485"
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2815,
											"end": 2824,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "580"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "581"
										},
										{
											"begin": 2875,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "582"
										},
										{
											"begin": 2893,
											"end": 2898,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2875,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 2875,
											"end": 2899,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 2899,
											"name": "tag",
											"source": 23,
											"value": "582"
										},
										{
											"begin": 2875,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "tag",
											"source": 23,
											"value": "581"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2848,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "476"
										},
										{
											"begin": 2848,
											"end": 2901,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2848,
											"end": 2901,
											"name": "tag",
											"source": 23,
											"value": "580"
										},
										{
											"begin": 2848,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2835,
											"end": 2901,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2765,
											"end": 2907,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "tag",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "584"
										},
										{
											"begin": 3027,
											"end": 3032,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "485"
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "tag",
											"source": 23,
											"value": "584"
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2983,
											"end": 3033,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2983,
											"end": 3033,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2913,
											"end": 3039,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "tag",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3114,
											"end": 3123,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "586"
										},
										{
											"begin": 3178,
											"end": 3183,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "tag",
											"source": 23,
											"value": "586"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3045,
											"end": 3190,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "tag",
											"source": 23,
											"value": "488"
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3302,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "588"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3302,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 3302,
											"end": 3358,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3358,
											"name": "tag",
											"source": 23,
											"value": "588"
										},
										{
											"begin": 3302,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3297,
											"end": 3300,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3290,
											"end": 3359,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "tag",
											"source": 23,
											"value": "67"
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3483,
											"end": 3487,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3498,
											"end": 3524,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3498,
											"end": 3524,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3534,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "590"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3619,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3534,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "488"
										},
										{
											"begin": 3534,
											"end": 3624,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3624,
											"name": "tag",
											"source": 23,
											"value": "590"
										},
										{
											"begin": 3534,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3631,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "tag",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3708,
											"end": 3717,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "592"
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3741,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 3741,
											"end": 3778,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 3741,
											"end": 3778,
											"name": "tag",
											"source": 23,
											"value": "592"
										},
										{
											"begin": 3741,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3728,
											"end": 3778,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3728,
											"end": 3778,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3637,
											"end": 3784,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3790,
											"end": 3963,
											"name": "tag",
											"source": 23,
											"value": "490"
										},
										{
											"begin": 3790,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3898,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "594"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3898,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 3898,
											"end": 3956,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3956,
											"name": "tag",
											"source": 23,
											"value": "594"
										},
										{
											"begin": 3898,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3790,
											"end": 3963,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3790,
											"end": 3963,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3790,
											"end": 3963,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "tag",
											"source": 23,
											"value": "76"
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4083,
											"end": 4087,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4123,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4098,
											"end": 4124,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4098,
											"end": 4124,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4134,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "596"
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4208,
											"end": 4225,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4134,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "490"
										},
										{
											"begin": 4134,
											"end": 4226,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4226,
											"name": "tag",
											"source": 23,
											"value": "596"
										},
										{
											"begin": 4134,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 4233,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "tag",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4273,
											"end": 4280,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4321,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4309,
											"end": 4322,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4302,
											"end": 4323,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4291,
											"end": 4323,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4291,
											"end": 4323,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4239,
											"end": 4329,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4335,
											"end": 4444,
											"name": "tag",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 4335,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "599"
										},
										{
											"begin": 4431,
											"end": 4436,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "tag",
											"source": 23,
											"value": "599"
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4411,
											"end": 4414,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4404,
											"end": 4438,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4335,
											"end": 4444,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4335,
											"end": 4444,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4335,
											"end": 4444,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "tag",
											"source": 23,
											"value": "81"
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4552,
											"end": 4578,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4588,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "601"
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4588,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 4588,
											"end": 4653,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 4588,
											"end": 4653,
											"name": "tag",
											"source": 23,
											"value": "601"
										},
										{
											"begin": 4588,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4450,
											"end": 4660,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "tag",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4737,
											"end": 4746,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "603"
										},
										{
											"begin": 4801,
											"end": 4806,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "tag",
											"source": 23,
											"value": "603"
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4666,
											"end": 4813,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4819,
											"end": 4992,
											"name": "tag",
											"source": 23,
											"value": "494"
										},
										{
											"begin": 4819,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4927,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "605"
										},
										{
											"begin": 4979,
											"end": 4984,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4927,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 4927,
											"end": 4985,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 4927,
											"end": 4985,
											"name": "tag",
											"source": 23,
											"value": "605"
										},
										{
											"begin": 4927,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4915,
											"end": 4986,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4819,
											"end": 4992,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4819,
											"end": 4992,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4819,
											"end": 4992,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "tag",
											"source": 23,
											"value": "86"
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5152,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5163,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "607"
										},
										{
											"begin": 5252,
											"end": 5253,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5250,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5237,
											"end": 5254,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5163,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "494"
										},
										{
											"begin": 5163,
											"end": 5255,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 5163,
											"end": 5255,
											"name": "tag",
											"source": 23,
											"value": "607"
										},
										{
											"begin": 5163,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4998,
											"end": 5262,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 5268,
											"end": 5386,
											"name": "tag",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 5268,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "609"
										},
										{
											"begin": 5373,
											"end": 5378,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "477"
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "tag",
											"source": 23,
											"value": "609"
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5343,
											"end": 5380,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5268,
											"end": 5386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5268,
											"end": 5386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5268,
											"end": 5386,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "tag",
											"source": 23,
											"value": "91"
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5485,
											"end": 5489,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5525,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5508,
											"end": 5526,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5500,
											"end": 5526,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5500,
											"end": 5526,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5536,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "611"
										},
										{
											"begin": 5604,
											"end": 5605,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5589,
											"end": 5606,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5536,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 5536,
											"end": 5607,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 5536,
											"end": 5607,
											"name": "tag",
											"source": 23,
											"value": "611"
										},
										{
											"begin": 5536,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5392,
											"end": 5614,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "tag",
											"source": 23,
											"value": "129"
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5738,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5740,
											"end": 5746,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5813,
											"end": 5816,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 5801,
											"end": 5810,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 5792,
											"end": 5799,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 5788,
											"end": 5811,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5784,
											"end": 5817,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5781,
											"end": 5901,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5781,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "613"
										},
										{
											"begin": 5781,
											"end": 5901,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5820,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "614"
										},
										{
											"begin": 5820,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 5820,
											"end": 5899,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 5899,
											"name": "tag",
											"source": 23,
											"value": "614"
										},
										{
											"begin": 5820,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5781,
											"end": 5901,
											"name": "tag",
											"source": 23,
											"value": "613"
										},
										{
											"begin": 5781,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "615"
										},
										{
											"begin": 6010,
											"end": 6017,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 5986,
											"end": 6008,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "tag",
											"source": 23,
											"value": "615"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5955,
											"end": 6018,
											"name": "SWAP7",
											"source": 23
										},
										{
											"begin": 5955,
											"end": 6018,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5911,
											"end": 6028,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6067,
											"end": 6069,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "616"
										},
										{
											"begin": 6138,
											"end": 6145,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6118,
											"end": 6127,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 6114,
											"end": 6136,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6093,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 6093,
											"end": 6146,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6146,
											"name": "tag",
											"source": 23,
											"value": "616"
										},
										{
											"begin": 6093,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6083,
											"end": 6146,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 6083,
											"end": 6146,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6038,
											"end": 6156,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "617"
										},
										{
											"begin": 6266,
											"end": 6273,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6264,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "tag",
											"source": 23,
											"value": "617"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6211,
											"end": 6274,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 6211,
											"end": 6274,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6166,
											"end": 6284,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6323,
											"end": 6325,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "618"
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 6370,
											"end": 6392,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "tag",
											"source": 23,
											"value": "618"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6294,
											"end": 6412,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 6478,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "619"
										},
										{
											"begin": 6523,
											"end": 6530,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6514,
											"end": 6520,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6503,
											"end": 6512,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 6499,
											"end": 6521,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6478,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 6478,
											"end": 6531,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6478,
											"end": 6531,
											"name": "tag",
											"source": 23,
											"value": "619"
										},
										{
											"begin": 6478,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6468,
											"end": 6531,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6468,
											"end": 6531,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6422,
											"end": 6541,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 6607,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "620"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 6628,
											"end": 6650,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6607,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 6607,
											"end": 6660,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 6660,
											"name": "tag",
											"source": 23,
											"value": "620"
										},
										{
											"begin": 6607,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6597,
											"end": 6660,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6597,
											"end": 6660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6551,
											"end": 6670,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 5620,
											"end": 6677,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "tag",
											"source": 23,
											"value": "496"
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "622"
										},
										{
											"begin": 6810,
											"end": 6815,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "tag",
											"source": 23,
											"value": "622"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6766,
											"end": 6816,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6766,
											"end": 6816,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6683,
											"end": 6822,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 6828,
											"end": 6985,
											"name": "tag",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 6828,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6928,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "624"
										},
										{
											"begin": 6972,
											"end": 6977,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6928,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "496"
										},
										{
											"begin": 6928,
											"end": 6978,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 6928,
											"end": 6978,
											"name": "tag",
											"source": 23,
											"value": "624"
										},
										{
											"begin": 6928,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6923,
											"end": 6926,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6916,
											"end": 6979,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6828,
											"end": 6985,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6828,
											"end": 6985,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6828,
											"end": 6985,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "tag",
											"source": 23,
											"value": "147"
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7097,
											"end": 7101,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7137,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7124,
											"end": 7133,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7112,
											"end": 7138,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7112,
											"end": 7138,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7148,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "626"
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7205,
											"end": 7211,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7148,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 7148,
											"end": 7232,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 7148,
											"end": 7232,
											"name": "tag",
											"source": 23,
											"value": "626"
										},
										{
											"begin": 7148,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6991,
											"end": 7239,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "tag",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7329,
											"end": 7340,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7351,
											"end": 7370,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7401,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7394,
											"end": 7408,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7379,
											"end": 7408,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7379,
											"end": 7408,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7245,
											"end": 7414,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 7420,
											"end": 7601,
											"name": "tag",
											"source": 23,
											"value": "499"
										},
										{
											"begin": 7420,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7560,
											"end": 7593,
											"name": "PUSH",
											"source": 23,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7554,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7537,
											"end": 7594,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7420,
											"end": 7601,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7420,
											"end": 7601,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "tag",
											"source": 23,
											"value": "500"
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7749,
											"end": 7752,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "630"
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 7829,
											"end": 7832,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7770,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 7770,
											"end": 7837,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 7770,
											"end": 7837,
											"name": "tag",
											"source": 23,
											"value": "630"
										},
										{
											"begin": 7770,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7846,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "631"
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7846,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "499"
										},
										{
											"begin": 7846,
											"end": 7939,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 7846,
											"end": 7939,
											"name": "tag",
											"source": 23,
											"value": "631"
										},
										{
											"begin": 7846,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7964,
											"end": 7966,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7959,
											"end": 7962,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7955,
											"end": 7967,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7948,
											"end": 7967,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7948,
											"end": 7967,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7607,
											"end": 7973,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "tag",
											"source": 23,
											"value": "166"
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8172,
											"end": 8181,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8160,
											"end": 8186,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8160,
											"end": 8186,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8226,
											"end": 8230,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 8218,
											"end": 8219,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8216,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8203,
											"end": 8220,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8196,
											"end": 8243,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8260,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "633"
										},
										{
											"begin": 8386,
											"end": 8390,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8260,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "500"
										},
										{
											"begin": 8260,
											"end": 8391,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 8260,
											"end": 8391,
											"name": "tag",
											"source": 23,
											"value": "633"
										},
										{
											"begin": 8260,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8252,
											"end": 8391,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8252,
											"end": 8391,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8398,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "tag",
											"source": 23,
											"value": "501"
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8461,
											"end": 8466,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8486,
											"end": 8499,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8508,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "635"
										},
										{
											"begin": 8535,
											"end": 8540,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8508,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 8508,
											"end": 8541,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 8508,
											"end": 8541,
											"name": "tag",
											"source": 23,
											"value": "635"
										},
										{
											"begin": 8508,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8404,
											"end": 8547,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "tag",
											"source": 23,
											"value": "171"
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8623,
											"end": 8629,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8674,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8669,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8651,
											"end": 8658,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8647,
											"end": 8670,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 8643,
											"end": 8675,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 8640,
											"end": 8759,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 8640,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "637"
										},
										{
											"begin": 8640,
											"end": 8759,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 8678,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "638"
										},
										{
											"begin": 8678,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 8678,
											"end": 8757,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 8678,
											"end": 8757,
											"name": "tag",
											"source": 23,
											"value": "638"
										},
										{
											"begin": 8678,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8640,
											"end": 8759,
											"name": "tag",
											"source": 23,
											"value": "637"
										},
										{
											"begin": 8640,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "639"
										},
										{
											"begin": 8879,
											"end": 8886,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8859,
											"end": 8868,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8855,
											"end": 8877,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8823,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "501"
										},
										{
											"begin": 8823,
											"end": 8887,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8887,
											"name": "tag",
											"source": 23,
											"value": "639"
										},
										{
											"begin": 8823,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8813,
											"end": 8887,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8813,
											"end": 8887,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8769,
											"end": 8897,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8553,
											"end": 8904,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 8910,
											"end": 9142,
											"name": "tag",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 8910,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9050,
											"end": 9084,
											"name": "PUSH",
											"source": 23,
											"value": "76616C7565206D7573742062652067726561746572207468616E206D696E2075"
										},
										{
											"begin": 9046,
											"end": 9047,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9044,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9034,
											"end": 9048,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9027,
											"end": 9085,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9119,
											"end": 9134,
											"name": "PUSH",
											"source": 23,
											"value": "6E7374616B6520616D6F756E7400000000000000000000000000000000000000"
										},
										{
											"begin": 9114,
											"end": 9116,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9106,
											"end": 9112,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9102,
											"end": 9117,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9095,
											"end": 9135,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8910,
											"end": 9142,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8910,
											"end": 9142,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "tag",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9290,
											"end": 9293,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "642"
										},
										{
											"begin": 9375,
											"end": 9377,
											"name": "PUSH",
											"source": 23,
											"value": "2D"
										},
										{
											"begin": 9370,
											"end": 9373,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9311,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 9311,
											"end": 9378,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9378,
											"name": "tag",
											"source": 23,
											"value": "642"
										},
										{
											"begin": 9311,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9304,
											"end": 9378,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9304,
											"end": 9378,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9387,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "643"
										},
										{
											"begin": 9476,
											"end": 9479,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9387,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 9387,
											"end": 9480,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 9387,
											"end": 9480,
											"name": "tag",
											"source": 23,
											"value": "643"
										},
										{
											"begin": 9387,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9505,
											"end": 9507,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 9500,
											"end": 9503,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9496,
											"end": 9508,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9489,
											"end": 9508,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9489,
											"end": 9508,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9148,
											"end": 9514,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "tag",
											"source": 23,
											"value": "174"
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9686,
											"end": 9690,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9726,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9713,
											"end": 9722,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9701,
											"end": 9727,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9701,
											"end": 9727,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9773,
											"end": 9782,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9767,
											"end": 9771,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9763,
											"end": 9783,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 9759,
											"end": 9760,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9757,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9744,
											"end": 9761,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9737,
											"end": 9784,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9801,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "645"
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9801,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 9801,
											"end": 9932,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 9801,
											"end": 9932,
											"name": "tag",
											"source": 23,
											"value": "645"
										},
										{
											"begin": 9801,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9793,
											"end": 9932,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9793,
											"end": 9932,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9520,
											"end": 9939,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "tag",
											"source": 23,
											"value": "178"
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10066,
											"end": 10070,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10106,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10102,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10081,
											"end": 10107,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10117,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "647"
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10174,
											"end": 10183,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10170,
											"end": 10187,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10161,
											"end": 10167,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 10117,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 10117,
											"end": 10188,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 10117,
											"end": 10188,
											"name": "tag",
											"source": 23,
											"value": "647"
										},
										{
											"begin": 10117,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10198,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "648"
										},
										{
											"begin": 10266,
											"end": 10268,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10242,
											"end": 10248,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 10198,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 10198,
											"end": 10270,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 10198,
											"end": 10270,
											"name": "tag",
											"source": 23,
											"value": "648"
										},
										{
											"begin": 10198,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9945,
											"end": 10277,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 10283,
											"end": 10458,
											"name": "tag",
											"source": 23,
											"value": "504"
										},
										{
											"begin": 10283,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 23,
											"value": "41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000"
										},
										{
											"begin": 10419,
											"end": 10420,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10407,
											"end": 10421,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10400,
											"end": 10451,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10283,
											"end": 10458,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10283,
											"end": 10458,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "tag",
											"source": 23,
											"value": "505"
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10606,
											"end": 10609,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "651"
										},
										{
											"begin": 10691,
											"end": 10693,
											"name": "PUSH",
											"source": 23,
											"value": "19"
										},
										{
											"begin": 10686,
											"end": 10689,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10627,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 10627,
											"end": 10694,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 10627,
											"end": 10694,
											"name": "tag",
											"source": 23,
											"value": "651"
										},
										{
											"begin": 10627,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10620,
											"end": 10694,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10620,
											"end": 10694,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10703,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "652"
										},
										{
											"begin": 10792,
											"end": 10795,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10703,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "504"
										},
										{
											"begin": 10703,
											"end": 10796,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 10703,
											"end": 10796,
											"name": "tag",
											"source": 23,
											"value": "652"
										},
										{
											"begin": 10703,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10821,
											"end": 10823,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10816,
											"end": 10819,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10812,
											"end": 10824,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10805,
											"end": 10824,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10805,
											"end": 10824,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10464,
											"end": 10830,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "tag",
											"source": 23,
											"value": "193"
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11002,
											"end": 11006,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11042,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11029,
											"end": 11038,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11017,
											"end": 11043,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11017,
											"end": 11043,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11089,
											"end": 11098,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11083,
											"end": 11087,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11079,
											"end": 11099,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 11075,
											"end": 11076,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11073,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11060,
											"end": 11077,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11053,
											"end": 11100,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 11117,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "654"
										},
										{
											"begin": 11243,
											"end": 11247,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11117,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "505"
										},
										{
											"begin": 11117,
											"end": 11248,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 11117,
											"end": 11248,
											"name": "tag",
											"source": 23,
											"value": "654"
										},
										{
											"begin": 11117,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11109,
											"end": 11248,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11109,
											"end": 11248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10836,
											"end": 11255,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 11261,
											"end": 11433,
											"name": "tag",
											"source": 23,
											"value": "506"
										},
										{
											"begin": 11261,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11401,
											"end": 11425,
											"name": "PUSH",
											"source": 23,
											"value": "48656C696F50726F76696465722F44697361626C656400000000000000000000"
										},
										{
											"begin": 11397,
											"end": 11398,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11385,
											"end": 11399,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11378,
											"end": 11426,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 11261,
											"end": 11433,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11261,
											"end": 11433,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "tag",
											"source": 23,
											"value": "507"
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11581,
											"end": 11584,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11602,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "657"
										},
										{
											"begin": 11666,
											"end": 11668,
											"name": "PUSH",
											"source": 23,
											"value": "16"
										},
										{
											"begin": 11661,
											"end": 11664,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11602,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 11602,
											"end": 11669,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 11602,
											"end": 11669,
											"name": "tag",
											"source": 23,
											"value": "657"
										},
										{
											"begin": 11602,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11595,
											"end": 11669,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11595,
											"end": 11669,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11678,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "658"
										},
										{
											"begin": 11767,
											"end": 11770,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11678,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "506"
										},
										{
											"begin": 11678,
											"end": 11771,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 11678,
											"end": 11771,
											"name": "tag",
											"source": 23,
											"value": "658"
										},
										{
											"begin": 11678,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11796,
											"end": 11798,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11791,
											"end": 11794,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11787,
											"end": 11799,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11780,
											"end": 11799,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11780,
											"end": 11799,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11439,
											"end": 11805,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "tag",
											"source": 23,
											"value": "211"
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11977,
											"end": 11981,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11992,
											"end": 12018,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11992,
											"end": 12018,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12058,
											"end": 12062,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12054,
											"end": 12074,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12035,
											"end": 12052,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12028,
											"end": 12075,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "660"
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "507"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "tag",
											"source": 23,
											"value": "660"
										},
										{
											"begin": 12092,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12084,
											"end": 12223,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12084,
											"end": 12223,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11811,
											"end": 12230,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 12236,
											"end": 12469,
											"name": "tag",
											"source": 23,
											"value": "508"
										},
										{
											"begin": 12236,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12376,
											"end": 12410,
											"name": "PUSH",
											"source": 23,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 12372,
											"end": 12373,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12364,
											"end": 12370,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12360,
											"end": 12374,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12353,
											"end": 12411,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12445,
											"end": 12461,
											"name": "PUSH",
											"source": 23,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 12432,
											"end": 12438,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12428,
											"end": 12443,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12421,
											"end": 12462,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12236,
											"end": 12469,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12236,
											"end": 12469,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "tag",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12617,
											"end": 12620,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12705,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "663"
										},
										{
											"begin": 12702,
											"end": 12704,
											"name": "PUSH",
											"source": 23,
											"value": "2E"
										},
										{
											"begin": 12697,
											"end": 12700,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12638,
											"end": 12705,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 12638,
											"end": 12705,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 12638,
											"end": 12705,
											"name": "tag",
											"source": 23,
											"value": "663"
										},
										{
											"begin": 12638,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12631,
											"end": 12705,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12631,
											"end": 12705,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12714,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "664"
										},
										{
											"begin": 12803,
											"end": 12806,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12714,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "508"
										},
										{
											"begin": 12714,
											"end": 12807,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 12714,
											"end": 12807,
											"name": "tag",
											"source": 23,
											"value": "664"
										},
										{
											"begin": 12714,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12832,
											"end": 12834,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12830,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12823,
											"end": 12835,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12816,
											"end": 12835,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12816,
											"end": 12835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12475,
											"end": 12841,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "tag",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13051,
											"end": 13053,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13040,
											"end": 13049,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13028,
											"end": 13054,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13028,
											"end": 13054,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13100,
											"end": 13109,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13094,
											"end": 13098,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13090,
											"end": 13110,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13084,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 13071,
											"end": 13088,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13064,
											"end": 13111,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 13128,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "666"
										},
										{
											"begin": 13254,
											"end": 13258,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13128,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 13128,
											"end": 13259,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13128,
											"end": 13259,
											"name": "tag",
											"source": 23,
											"value": "666"
										},
										{
											"begin": 13128,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13120,
											"end": 13259,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13120,
											"end": 13259,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12847,
											"end": 13266,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "tag",
											"source": 23,
											"value": "510"
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13317,
											"end": 13324,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13351,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13335,
											"end": 13351,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13335,
											"end": 13351,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13272,
											"end": 13357,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "tag",
											"source": 23,
											"value": "511"
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13398,
											"end": 13405,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13442,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 13431,
											"end": 13436,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13427,
											"end": 13443,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 13416,
											"end": 13443,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13416,
											"end": 13443,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13363,
											"end": 13449,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "tag",
											"source": 23,
											"value": "512"
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13511,
											"end": 13520,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13603,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "670"
										},
										{
											"begin": 13560,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "671"
										},
										{
											"begin": 13569,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "672"
										},
										{
											"begin": 13595,
											"end": 13600,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 13569,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "510"
										},
										{
											"begin": 13569,
											"end": 13601,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13569,
											"end": 13601,
											"name": "tag",
											"source": 23,
											"value": "672"
										},
										{
											"begin": 13569,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13560,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 13560,
											"end": 13602,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13560,
											"end": 13602,
											"name": "tag",
											"source": 23,
											"value": "671"
										},
										{
											"begin": 13560,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13544,
											"end": 13603,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "511"
										},
										{
											"begin": 13544,
											"end": 13603,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13544,
											"end": 13603,
											"name": "tag",
											"source": 23,
											"value": "670"
										},
										{
											"begin": 13544,
											"end": 13603,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13455,
											"end": 13609,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 13615,
											"end": 13758,
											"name": "tag",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 13615,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13708,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "674"
										},
										{
											"begin": 13745,
											"end": 13750,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 13708,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "512"
										},
										{
											"begin": 13708,
											"end": 13751,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13708,
											"end": 13751,
											"name": "tag",
											"source": 23,
											"value": "674"
										},
										{
											"begin": 13708,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13703,
											"end": 13706,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13696,
											"end": 13752,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 13615,
											"end": 13758,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13615,
											"end": 13758,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13615,
											"end": 13758,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "tag",
											"source": 23,
											"value": "290"
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13863,
											"end": 13867,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13903,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13890,
											"end": 13899,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13878,
											"end": 13904,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13878,
											"end": 13904,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13914,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "676"
										},
										{
											"begin": 13988,
											"end": 13989,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13986,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 13973,
											"end": 13990,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13964,
											"end": 13970,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 13914,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 13914,
											"end": 13991,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 13914,
											"end": 13991,
											"name": "tag",
											"source": 23,
											"value": "676"
										},
										{
											"begin": 13914,
											"end": 13991,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13764,
											"end": 13998,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 14004,
											"end": 14175,
											"name": "tag",
											"source": 23,
											"value": "514"
										},
										{
											"begin": 14004,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14144,
											"end": 14167,
											"name": "PUSH",
											"source": 23,
											"value": "4F70657261746F723A206E6F7420616C6C6F7765640000000000000000000000"
										},
										{
											"begin": 14140,
											"end": 14141,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14128,
											"end": 14142,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14121,
											"end": 14168,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 14004,
											"end": 14175,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14004,
											"end": 14175,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "tag",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14323,
											"end": 14326,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "679"
										},
										{
											"begin": 14408,
											"end": 14410,
											"name": "PUSH",
											"source": 23,
											"value": "15"
										},
										{
											"begin": 14403,
											"end": 14406,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "tag",
											"source": 23,
											"value": "679"
										},
										{
											"begin": 14344,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14337,
											"end": 14411,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "680"
										},
										{
											"begin": 14509,
											"end": 14512,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "514"
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "tag",
											"source": 23,
											"value": "680"
										},
										{
											"begin": 14420,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14533,
											"end": 14536,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14529,
											"end": 14541,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14522,
											"end": 14541,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14181,
											"end": 14547,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "tag",
											"source": 23,
											"value": "318"
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14719,
											"end": 14723,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14746,
											"end": 14755,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14734,
											"end": 14760,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14806,
											"end": 14815,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14800,
											"end": 14804,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14796,
											"end": 14816,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14770,
											"end": 14817,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "682"
										},
										{
											"begin": 14960,
											"end": 14964,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "tag",
											"source": 23,
											"value": "682"
										},
										{
											"begin": 14834,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14826,
											"end": 14965,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14553,
											"end": 14972,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 14978,
											"end": 15203,
											"name": "tag",
											"source": 23,
											"value": "516"
										},
										{
											"begin": 14978,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15118,
											"end": 15152,
											"name": "PUSH",
											"source": 23,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15112,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15102,
											"end": 15116,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15095,
											"end": 15153,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15187,
											"end": 15195,
											"name": "PUSH",
											"source": 23,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15182,
											"end": 15184,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 15174,
											"end": 15180,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15163,
											"end": 15196,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 14978,
											"end": 15203,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14978,
											"end": 15203,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "tag",
											"source": 23,
											"value": "517"
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15351,
											"end": 15354,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "685"
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15372,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 15372,
											"end": 15439,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 15372,
											"end": 15439,
											"name": "tag",
											"source": 23,
											"value": "685"
										},
										{
											"begin": 15372,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15365,
											"end": 15439,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15365,
											"end": 15439,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15448,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "686"
										},
										{
											"begin": 15537,
											"end": 15540,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15448,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "516"
										},
										{
											"begin": 15448,
											"end": 15541,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 15448,
											"end": 15541,
											"name": "tag",
											"source": 23,
											"value": "686"
										},
										{
											"begin": 15448,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15566,
											"end": 15568,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 15561,
											"end": 15564,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15557,
											"end": 15569,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15550,
											"end": 15569,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15550,
											"end": 15569,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15209,
											"end": 15575,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "tag",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15747,
											"end": 15751,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15785,
											"end": 15787,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 15774,
											"end": 15783,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15770,
											"end": 15788,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15762,
											"end": 15788,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15762,
											"end": 15788,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15834,
											"end": 15843,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15824,
											"end": 15844,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 15820,
											"end": 15821,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15809,
											"end": 15818,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 15805,
											"end": 15822,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15798,
											"end": 15845,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15862,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "688"
										},
										{
											"begin": 15988,
											"end": 15992,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15862,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "517"
										},
										{
											"begin": 15862,
											"end": 15993,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 15862,
											"end": 15993,
											"name": "tag",
											"source": 23,
											"value": "688"
										},
										{
											"begin": 15862,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15854,
											"end": 15993,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15854,
											"end": 15993,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15581,
											"end": 16000,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 16006,
											"end": 16172,
											"name": "tag",
											"source": 23,
											"value": "518"
										},
										{
											"begin": 16006,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16146,
											"end": 16164,
											"name": "PUSH",
											"source": 23,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 16142,
											"end": 16143,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16140,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16130,
											"end": 16144,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16123,
											"end": 16165,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16006,
											"end": 16172,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16006,
											"end": 16172,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "tag",
											"source": 23,
											"value": "519"
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16320,
											"end": 16323,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "691"
										},
										{
											"begin": 16405,
											"end": 16407,
											"name": "PUSH",
											"source": 23,
											"value": "10"
										},
										{
											"begin": 16400,
											"end": 16403,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16341,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 16341,
											"end": 16408,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 16341,
											"end": 16408,
											"name": "tag",
											"source": 23,
											"value": "691"
										},
										{
											"begin": 16341,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16334,
											"end": 16408,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16334,
											"end": 16408,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16417,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "692"
										},
										{
											"begin": 16506,
											"end": 16509,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16417,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "518"
										},
										{
											"begin": 16417,
											"end": 16510,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 16417,
											"end": 16510,
											"name": "tag",
											"source": 23,
											"value": "692"
										},
										{
											"begin": 16417,
											"end": 16510,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16535,
											"end": 16537,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16530,
											"end": 16533,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16526,
											"end": 16538,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16519,
											"end": 16538,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16519,
											"end": 16538,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16178,
											"end": 16544,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "tag",
											"source": 23,
											"value": "341"
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16716,
											"end": 16720,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16754,
											"end": 16756,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16743,
											"end": 16752,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16731,
											"end": 16757,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16731,
											"end": 16757,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16803,
											"end": 16812,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16797,
											"end": 16801,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 16789,
											"end": 16790,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16778,
											"end": 16787,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16774,
											"end": 16791,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16767,
											"end": 16814,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16831,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "694"
										},
										{
											"begin": 16957,
											"end": 16961,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16831,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "519"
										},
										{
											"begin": 16831,
											"end": 16962,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 16831,
											"end": 16962,
											"name": "tag",
											"source": 23,
											"value": "694"
										},
										{
											"begin": 16831,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16823,
											"end": 16962,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16823,
											"end": 16962,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16550,
											"end": 16969,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "tag",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17124,
											"end": 17128,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17162,
											"end": 17164,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 17151,
											"end": 17160,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17147,
											"end": 17165,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17139,
											"end": 17165,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17139,
											"end": 17165,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17175,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "696"
										},
										{
											"begin": 17243,
											"end": 17244,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17232,
											"end": 17241,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17228,
											"end": 17245,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 17175,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 17175,
											"end": 17246,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 17175,
											"end": 17246,
											"name": "tag",
											"source": 23,
											"value": "696"
										},
										{
											"begin": 17175,
											"end": 17246,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17256,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "697"
										},
										{
											"begin": 17324,
											"end": 17326,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17313,
											"end": 17322,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17309,
											"end": 17327,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17300,
											"end": 17306,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 17256,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 17256,
											"end": 17328,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 17256,
											"end": 17328,
											"name": "tag",
											"source": 23,
											"value": "697"
										},
										{
											"begin": 17256,
											"end": 17328,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17338,
											"end": 17410,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "698"
										},
										{
											"begin": 17406,
											"end": 17408,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 17395,
											"end": 17404,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17391,
											"end": 17409,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17382,
											"end": 17388,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 17338,
											"end": 17410,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 17338,
											"end": 17410,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 17338,
											"end": 17410,
											"name": "tag",
											"source": 23,
											"value": "698"
										},
										{
											"begin": 17338,
											"end": 17410,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16975,
											"end": 17417,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 17423,
											"end": 17605,
											"name": "tag",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 17423,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17563,
											"end": 17597,
											"name": "PUSH",
											"source": 23,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17559,
											"end": 17560,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17551,
											"end": 17557,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17547,
											"end": 17561,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17540,
											"end": 17598,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 17423,
											"end": 17605,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17423,
											"end": 17605,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "tag",
											"source": 23,
											"value": "521"
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17753,
											"end": 17756,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17774,
											"end": 17841,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "701"
										},
										{
											"begin": 17838,
											"end": 17840,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17833,
											"end": 17836,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17774,
											"end": 17841,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 17774,
											"end": 17841,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 17774,
											"end": 17841,
											"name": "tag",
											"source": 23,
											"value": "701"
										},
										{
											"begin": 17774,
											"end": 17841,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17767,
											"end": 17841,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17767,
											"end": 17841,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17850,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "702"
										},
										{
											"begin": 17939,
											"end": 17942,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17850,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 17850,
											"end": 17943,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 17850,
											"end": 17943,
											"name": "tag",
											"source": 23,
											"value": "702"
										},
										{
											"begin": 17850,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17968,
											"end": 17970,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17963,
											"end": 17966,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17959,
											"end": 17971,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17952,
											"end": 17971,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17952,
											"end": 17971,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17611,
											"end": 17977,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "tag",
											"source": 23,
											"value": "358"
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18149,
											"end": 18153,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18187,
											"end": 18189,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18185,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18172,
											"end": 18190,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18164,
											"end": 18190,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18164,
											"end": 18190,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18236,
											"end": 18245,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18230,
											"end": 18234,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18226,
											"end": 18246,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 18222,
											"end": 18223,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18211,
											"end": 18220,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18207,
											"end": 18224,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18200,
											"end": 18247,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18264,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "704"
										},
										{
											"begin": 18390,
											"end": 18394,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18264,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "521"
										},
										{
											"begin": 18264,
											"end": 18395,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 18264,
											"end": 18395,
											"name": "tag",
											"source": 23,
											"value": "704"
										},
										{
											"begin": 18264,
											"end": 18395,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18256,
											"end": 18395,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18256,
											"end": 18395,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17983,
											"end": 18402,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "tag",
											"source": 23,
											"value": "362"
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18529,
											"end": 18533,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18567,
											"end": 18569,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 18556,
											"end": 18565,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18552,
											"end": 18570,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18544,
											"end": 18570,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18544,
											"end": 18570,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18580,
											"end": 18651,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "706"
										},
										{
											"begin": 18648,
											"end": 18649,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18637,
											"end": 18646,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18633,
											"end": 18650,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18624,
											"end": 18630,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 18580,
											"end": 18651,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 18580,
											"end": 18651,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 18580,
											"end": 18651,
											"name": "tag",
											"source": 23,
											"value": "706"
										},
										{
											"begin": 18580,
											"end": 18651,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18661,
											"end": 18733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "707"
										},
										{
											"begin": 18729,
											"end": 18731,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18718,
											"end": 18727,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18714,
											"end": 18732,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18705,
											"end": 18711,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18661,
											"end": 18733,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "495"
										},
										{
											"begin": 18661,
											"end": 18733,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 18661,
											"end": 18733,
											"name": "tag",
											"source": 23,
											"value": "707"
										},
										{
											"begin": 18661,
											"end": 18733,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18408,
											"end": 18740,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 18746,
											"end": 18987,
											"name": "tag",
											"source": 23,
											"value": "522"
										},
										{
											"begin": 18746,
											"end": 18987,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18886,
											"end": 18920,
											"name": "PUSH",
											"source": 23,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 18882,
											"end": 18883,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18874,
											"end": 18880,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18870,
											"end": 18884,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18863,
											"end": 18921,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18955,
											"end": 18979,
											"name": "PUSH",
											"source": 23,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 18950,
											"end": 18952,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18942,
											"end": 18948,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18938,
											"end": 18953,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18931,
											"end": 18980,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18746,
											"end": 18987,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18746,
											"end": 18987,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "tag",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19135,
											"end": 19138,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19156,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "710"
										},
										{
											"begin": 19220,
											"end": 19222,
											"name": "PUSH",
											"source": 23,
											"value": "36"
										},
										{
											"begin": 19215,
											"end": 19218,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19156,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 19156,
											"end": 19223,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 19156,
											"end": 19223,
											"name": "tag",
											"source": 23,
											"value": "710"
										},
										{
											"begin": 19156,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19149,
											"end": 19223,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19149,
											"end": 19223,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19232,
											"end": 19325,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "711"
										},
										{
											"begin": 19321,
											"end": 19324,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19232,
											"end": 19325,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "522"
										},
										{
											"begin": 19232,
											"end": 19325,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 19232,
											"end": 19325,
											"name": "tag",
											"source": 23,
											"value": "711"
										},
										{
											"begin": 19232,
											"end": 19325,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19350,
											"end": 19352,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 19345,
											"end": 19348,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18993,
											"end": 19359,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "tag",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19531,
											"end": 19535,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19569,
											"end": 19571,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 19558,
											"end": 19567,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19554,
											"end": 19572,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19546,
											"end": 19572,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19546,
											"end": 19572,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19618,
											"end": 19627,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19612,
											"end": 19616,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19608,
											"end": 19628,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 19604,
											"end": 19605,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19593,
											"end": 19602,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19589,
											"end": 19606,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19582,
											"end": 19629,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 19646,
											"end": 19777,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "713"
										},
										{
											"begin": 19772,
											"end": 19776,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19646,
											"end": 19777,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 19646,
											"end": 19777,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 19646,
											"end": 19777,
											"name": "tag",
											"source": 23,
											"value": "713"
										},
										{
											"begin": 19646,
											"end": 19777,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19638,
											"end": 19777,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19638,
											"end": 19777,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19365,
											"end": 19784,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 19790,
											"end": 20020,
											"name": "tag",
											"source": 23,
											"value": "524"
										},
										{
											"begin": 19790,
											"end": 20020,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19930,
											"end": 19964,
											"name": "PUSH",
											"source": 23,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 19926,
											"end": 19927,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19918,
											"end": 19924,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19907,
											"end": 19965,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 19999,
											"end": 20012,
											"name": "PUSH",
											"source": 23,
											"value": "6E697469616C697A696E67000000000000000000000000000000000000000000"
										},
										{
											"begin": 19994,
											"end": 19996,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 19986,
											"end": 19992,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19982,
											"end": 19997,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19975,
											"end": 20013,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 19790,
											"end": 20020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19790,
											"end": 20020,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "tag",
											"source": 23,
											"value": "525"
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20168,
											"end": 20171,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20189,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "716"
										},
										{
											"begin": 20253,
											"end": 20255,
											"name": "PUSH",
											"source": 23,
											"value": "2B"
										},
										{
											"begin": 20248,
											"end": 20251,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 20189,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 20189,
											"end": 20256,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 20189,
											"end": 20256,
											"name": "tag",
											"source": 23,
											"value": "716"
										},
										{
											"begin": 20189,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20182,
											"end": 20256,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20182,
											"end": 20256,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20265,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "717"
										},
										{
											"begin": 20354,
											"end": 20357,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20265,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "524"
										},
										{
											"begin": 20265,
											"end": 20358,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 20265,
											"end": 20358,
											"name": "tag",
											"source": 23,
											"value": "717"
										},
										{
											"begin": 20265,
											"end": 20358,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20383,
											"end": 20385,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 20378,
											"end": 20381,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20374,
											"end": 20386,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20367,
											"end": 20386,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20367,
											"end": 20386,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20026,
											"end": 20392,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "tag",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20564,
											"end": 20568,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20602,
											"end": 20604,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 20591,
											"end": 20600,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20587,
											"end": 20605,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20579,
											"end": 20605,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20579,
											"end": 20605,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20651,
											"end": 20660,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20645,
											"end": 20649,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20641,
											"end": 20661,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 20637,
											"end": 20638,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20635,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 20622,
											"end": 20639,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20615,
											"end": 20662,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 20679,
											"end": 20810,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "719"
										},
										{
											"begin": 20805,
											"end": 20809,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20679,
											"end": 20810,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "525"
										},
										{
											"begin": 20679,
											"end": 20810,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 20679,
											"end": 20810,
											"name": "tag",
											"source": 23,
											"value": "719"
										},
										{
											"begin": 20679,
											"end": 20810,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20671,
											"end": 20810,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20671,
											"end": 20810,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20398,
											"end": 20817,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 20823,
											"end": 20939,
											"name": "tag",
											"source": 23,
											"value": "526"
										},
										{
											"begin": 20823,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "721"
										},
										{
											"begin": 20908,
											"end": 20913,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "tag",
											"source": 23,
											"value": "721"
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20883,
											"end": 20915,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 20873,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "722"
										},
										{
											"begin": 20873,
											"end": 20933,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 20929,
											"end": 20930,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20926,
											"end": 20927,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 20919,
											"end": 20931,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 20873,
											"end": 20933,
											"name": "tag",
											"source": 23,
											"value": "722"
										},
										{
											"begin": 20873,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20823,
											"end": 20939,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20823,
											"end": 20939,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "tag",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20999,
											"end": 21004,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21030,
											"end": 21036,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 21024,
											"end": 21037,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 21015,
											"end": 21037,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 21015,
											"end": 21037,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21046,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "724"
										},
										{
											"begin": 21070,
											"end": 21075,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 21046,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "526"
										},
										{
											"begin": 21046,
											"end": 21076,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 21046,
											"end": 21076,
											"name": "tag",
											"source": 23,
											"value": "724"
										},
										{
											"begin": 21046,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20945,
											"end": 21082,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "tag",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21155,
											"end": 21161,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 21192,
											"end": 21201,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21183,
											"end": 21190,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 21179,
											"end": 21202,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 21175,
											"end": 21207,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 21172,
											"end": 21291,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 21172,
											"end": 21291,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "726"
										},
										{
											"begin": 21172,
											"end": 21291,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 21210,
											"end": 21289,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "727"
										},
										{
											"begin": 21210,
											"end": 21289,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 21210,
											"end": 21289,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 21210,
											"end": 21289,
											"name": "tag",
											"source": 23,
											"value": "727"
										},
										{
											"begin": 21210,
											"end": 21289,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21172,
											"end": 21291,
											"name": "tag",
											"source": 23,
											"value": "726"
										},
										{
											"begin": 21172,
											"end": 21291,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21330,
											"end": 21331,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21355,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "728"
										},
										{
											"begin": 21408,
											"end": 21415,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 21399,
											"end": 21405,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21388,
											"end": 21397,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 21384,
											"end": 21406,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 21355,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 21355,
											"end": 21416,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 21355,
											"end": 21416,
											"name": "tag",
											"source": 23,
											"value": "728"
										},
										{
											"begin": 21355,
											"end": 21416,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21345,
											"end": 21416,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21345,
											"end": 21416,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21301,
											"end": 21426,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21088,
											"end": 21433,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 21439,
											"end": 21668,
											"name": "tag",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 21439,
											"end": 21668,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21579,
											"end": 21613,
											"name": "PUSH",
											"source": 23,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21575,
											"end": 21576,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21567,
											"end": 21573,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21563,
											"end": 21577,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 21556,
											"end": 21614,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 21648,
											"end": 21660,
											"name": "PUSH",
											"source": 23,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 21635,
											"end": 21641,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21631,
											"end": 21646,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 21624,
											"end": 21661,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 21439,
											"end": 21668,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21439,
											"end": 21668,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "tag",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21816,
											"end": 21819,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 21837,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "731"
										},
										{
											"begin": 21901,
											"end": 21903,
											"name": "PUSH",
											"source": 23,
											"value": "2A"
										},
										{
											"begin": 21896,
											"end": 21899,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 21837,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 21837,
											"end": 21904,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 21837,
											"end": 21904,
											"name": "tag",
											"source": 23,
											"value": "731"
										},
										{
											"begin": 21837,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 21830,
											"end": 21904,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21830,
											"end": 21904,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21913,
											"end": 22006,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "732"
										},
										{
											"begin": 22002,
											"end": 22005,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 21913,
											"end": 22006,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 21913,
											"end": 22006,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 21913,
											"end": 22006,
											"name": "tag",
											"source": 23,
											"value": "732"
										},
										{
											"begin": 21913,
											"end": 22006,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22031,
											"end": 22033,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 22026,
											"end": 22029,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 22022,
											"end": 22034,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 21674,
											"end": 22040,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "tag",
											"source": 23,
											"value": "422"
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22212,
											"end": 22216,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 22250,
											"end": 22252,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 22239,
											"end": 22248,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 22235,
											"end": 22253,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 22227,
											"end": 22253,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22227,
											"end": 22253,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22299,
											"end": 22308,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 22293,
											"end": 22297,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 22289,
											"end": 22309,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 22285,
											"end": 22286,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 22274,
											"end": 22283,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 22270,
											"end": 22287,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 22263,
											"end": 22310,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 22327,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "734"
										},
										{
											"begin": 22453,
											"end": 22457,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 22327,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 22327,
											"end": 22458,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 22327,
											"end": 22458,
											"name": "tag",
											"source": 23,
											"value": "734"
										},
										{
											"begin": 22327,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22319,
											"end": 22458,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22319,
											"end": 22458,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22046,
											"end": 22465,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 22471,
											"end": 22641,
											"name": "tag",
											"source": 23,
											"value": "530"
										},
										{
											"begin": 22471,
											"end": 22641,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22611,
											"end": 22633,
											"name": "PUSH",
											"source": 23,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 22607,
											"end": 22608,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 22599,
											"end": 22605,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 22595,
											"end": 22609,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 22588,
											"end": 22634,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 22471,
											"end": 22641,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22471,
											"end": 22641,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "tag",
											"source": 23,
											"value": "531"
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22789,
											"end": 22792,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 22810,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "737"
										},
										{
											"begin": 22874,
											"end": 22876,
											"name": "PUSH",
											"source": 23,
											"value": "14"
										},
										{
											"begin": 22869,
											"end": 22872,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 22810,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 22810,
											"end": 22877,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 22810,
											"end": 22877,
											"name": "tag",
											"source": 23,
											"value": "737"
										},
										{
											"begin": 22810,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 22803,
											"end": 22877,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 22803,
											"end": 22877,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22886,
											"end": 22979,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "738"
										},
										{
											"begin": 22975,
											"end": 22978,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 22886,
											"end": 22979,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "530"
										},
										{
											"begin": 22886,
											"end": 22979,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 22886,
											"end": 22979,
											"name": "tag",
											"source": 23,
											"value": "738"
										},
										{
											"begin": 22886,
											"end": 22979,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23004,
											"end": 23006,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 22999,
											"end": 23002,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 22995,
											"end": 23007,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 22988,
											"end": 23007,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22988,
											"end": 23007,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 22647,
											"end": 23013,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "tag",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23185,
											"end": 23189,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 23223,
											"end": 23225,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 23212,
											"end": 23221,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 23208,
											"end": 23226,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 23200,
											"end": 23226,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 23200,
											"end": 23226,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23272,
											"end": 23281,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 23266,
											"end": 23270,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 23262,
											"end": 23282,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23256,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 23243,
											"end": 23260,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 23236,
											"end": 23283,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 23300,
											"end": 23431,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "740"
										},
										{
											"begin": 23426,
											"end": 23430,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 23300,
											"end": 23431,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "531"
										},
										{
											"begin": 23300,
											"end": 23431,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 23300,
											"end": 23431,
											"name": "tag",
											"source": 23,
											"value": "740"
										},
										{
											"begin": 23300,
											"end": 23431,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23292,
											"end": 23431,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 23292,
											"end": 23431,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23019,
											"end": 23438,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 23444,
											"end": 23669,
											"name": "tag",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 23444,
											"end": 23669,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23584,
											"end": 23618,
											"name": "PUSH",
											"source": 23,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23580,
											"end": 23581,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 23572,
											"end": 23578,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 23568,
											"end": 23582,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 23561,
											"end": 23619,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 23653,
											"end": 23661,
											"name": "PUSH",
											"source": 23,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23648,
											"end": 23650,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 23640,
											"end": 23646,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 23636,
											"end": 23651,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 23629,
											"end": 23662,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 23444,
											"end": 23669,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23444,
											"end": 23669,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "tag",
											"source": 23,
											"value": "533"
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23817,
											"end": 23820,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 23838,
											"end": 23905,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "743"
										},
										{
											"begin": 23902,
											"end": 23904,
											"name": "PUSH",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 23897,
											"end": 23900,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 23838,
											"end": 23905,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 23838,
											"end": 23905,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 23838,
											"end": 23905,
											"name": "tag",
											"source": 23,
											"value": "743"
										},
										{
											"begin": 23838,
											"end": 23905,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 23831,
											"end": 23905,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 23831,
											"end": 23905,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23914,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "744"
										},
										{
											"begin": 24003,
											"end": 24006,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 23914,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 23914,
											"end": 24007,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 23914,
											"end": 24007,
											"name": "tag",
											"source": 23,
											"value": "744"
										},
										{
											"begin": 23914,
											"end": 24007,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24032,
											"end": 24034,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 24027,
											"end": 24030,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 24023,
											"end": 24035,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24016,
											"end": 24035,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24016,
											"end": 24035,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 23675,
											"end": 24041,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "tag",
											"source": 23,
											"value": "448"
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24213,
											"end": 24217,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 24251,
											"end": 24253,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 24240,
											"end": 24249,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 24236,
											"end": 24254,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24228,
											"end": 24254,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24228,
											"end": 24254,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24300,
											"end": 24309,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24294,
											"end": 24298,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24290,
											"end": 24310,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 24286,
											"end": 24287,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 24275,
											"end": 24284,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 24271,
											"end": 24288,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24264,
											"end": 24311,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 24328,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "746"
										},
										{
											"begin": 24454,
											"end": 24458,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24328,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "533"
										},
										{
											"begin": 24328,
											"end": 24459,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 24328,
											"end": 24459,
											"name": "tag",
											"source": 23,
											"value": "746"
										},
										{
											"begin": 24328,
											"end": 24459,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24320,
											"end": 24459,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24320,
											"end": 24459,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24047,
											"end": 24466,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "tag",
											"source": 23,
											"value": "534"
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24523,
											"end": 24529,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 24557,
											"end": 24562,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24551,
											"end": 24563,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 24541,
											"end": 24563,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24541,
											"end": 24563,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24472,
											"end": 24570,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "tag",
											"source": 23,
											"value": "535"
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24677,
											"end": 24688,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 24714,
											"end": 24717,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24699,
											"end": 24717,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24699,
											"end": 24717,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24576,
											"end": 24723,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "tag",
											"source": 23,
											"value": "536"
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24797,
											"end": 24798,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "tag",
											"source": 23,
											"value": "750"
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24821,
											"end": 24827,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 24818,
											"end": 24819,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24815,
											"end": 24828,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "752"
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 24906,
											"end": 24907,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 24901,
											"end": 24904,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 24897,
											"end": 24908,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24891,
											"end": 24909,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 24887,
											"end": 24888,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24882,
											"end": 24885,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 24878,
											"end": 24889,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24871,
											"end": 24910,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 24843,
											"end": 24845,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 24840,
											"end": 24841,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24836,
											"end": 24846,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24831,
											"end": 24846,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 24831,
											"end": 24846,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "750"
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "tag",
											"source": 23,
											"value": "752"
										},
										{
											"begin": 24807,
											"end": 24920,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24938,
											"end": 24944,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 24935,
											"end": 24936,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 24932,
											"end": 24945,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 24929,
											"end": 25030,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 24929,
											"end": 25030,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "753"
										},
										{
											"begin": 24929,
											"end": 25030,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 25018,
											"end": 25019,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 25009,
											"end": 25015,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 25004,
											"end": 25007,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 25000,
											"end": 25016,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 24993,
											"end": 25020,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 24929,
											"end": 25030,
											"name": "tag",
											"source": 23,
											"value": "753"
										},
										{
											"begin": 24929,
											"end": 25030,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 24778,
											"end": 25036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 24729,
											"end": 25036,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "tag",
											"source": 23,
											"value": "537"
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25146,
											"end": 25149,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 25174,
											"end": 25212,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "755"
										},
										{
											"begin": 25206,
											"end": 25211,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 25174,
											"end": 25212,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "534"
										},
										{
											"begin": 25174,
											"end": 25212,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 25174,
											"end": 25212,
											"name": "tag",
											"source": 23,
											"value": "755"
										},
										{
											"begin": 25174,
											"end": 25212,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25228,
											"end": 25316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "756"
										},
										{
											"begin": 25309,
											"end": 25315,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 25304,
											"end": 25307,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 25228,
											"end": 25316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "535"
										},
										{
											"begin": 25228,
											"end": 25316,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 25228,
											"end": 25316,
											"name": "tag",
											"source": 23,
											"value": "756"
										},
										{
											"begin": 25228,
											"end": 25316,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25221,
											"end": 25316,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 25221,
											"end": 25316,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25325,
											"end": 25377,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "757"
										},
										{
											"begin": 25370,
											"end": 25376,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 25365,
											"end": 25368,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 25358,
											"end": 25362,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 25351,
											"end": 25356,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 25347,
											"end": 25363,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 25325,
											"end": 25377,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "536"
										},
										{
											"begin": 25325,
											"end": 25377,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 25325,
											"end": 25377,
											"name": "tag",
											"source": 23,
											"value": "757"
										},
										{
											"begin": 25325,
											"end": 25377,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25402,
											"end": 25408,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 25397,
											"end": 25400,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 25393,
											"end": 25409,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 25386,
											"end": 25409,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 25386,
											"end": 25409,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25150,
											"end": 25415,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25042,
											"end": 25415,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "tag",
											"source": 23,
											"value": "450"
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25551,
											"end": 25554,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 25573,
											"end": 25666,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "759"
										},
										{
											"begin": 25662,
											"end": 25665,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 25653,
											"end": 25659,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 25573,
											"end": 25666,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "537"
										},
										{
											"begin": 25573,
											"end": 25666,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 25573,
											"end": 25666,
											"name": "tag",
											"source": 23,
											"value": "759"
										},
										{
											"begin": 25573,
											"end": 25666,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25566,
											"end": 25666,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 25566,
											"end": 25666,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25683,
											"end": 25686,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 25676,
											"end": 25686,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 25676,
											"end": 25686,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25421,
											"end": 25692,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 25698,
											"end": 25877,
											"name": "tag",
											"source": 23,
											"value": "538"
										},
										{
											"begin": 25698,
											"end": 25877,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 25838,
											"end": 25869,
											"name": "PUSH",
											"source": 23,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 25834,
											"end": 25835,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 25826,
											"end": 25832,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 25822,
											"end": 25836,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 25815,
											"end": 25870,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 25698,
											"end": 25877,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25698,
											"end": 25877,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "tag",
											"source": 23,
											"value": "539"
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26025,
											"end": 26028,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "762"
										},
										{
											"begin": 26110,
											"end": 26112,
											"name": "PUSH",
											"source": 23,
											"value": "1D"
										},
										{
											"begin": 26105,
											"end": 26108,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 26046,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 26046,
											"end": 26113,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 26046,
											"end": 26113,
											"name": "tag",
											"source": 23,
											"value": "762"
										},
										{
											"begin": 26046,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26039,
											"end": 26113,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 26039,
											"end": 26113,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26122,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "763"
										},
										{
											"begin": 26211,
											"end": 26214,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 26122,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "538"
										},
										{
											"begin": 26122,
											"end": 26215,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 26122,
											"end": 26215,
											"name": "tag",
											"source": 23,
											"value": "763"
										},
										{
											"begin": 26122,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26240,
											"end": 26242,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 26235,
											"end": 26238,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 26231,
											"end": 26243,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 26224,
											"end": 26243,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26224,
											"end": 26243,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 25883,
											"end": 26249,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "tag",
											"source": 23,
											"value": "463"
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26421,
											"end": 26425,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 26459,
											"end": 26461,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 26448,
											"end": 26457,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 26444,
											"end": 26462,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 26436,
											"end": 26462,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26436,
											"end": 26462,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26508,
											"end": 26517,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 26502,
											"end": 26506,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 26498,
											"end": 26518,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 26494,
											"end": 26495,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 26483,
											"end": 26492,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 26479,
											"end": 26496,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 26472,
											"end": 26519,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 26536,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "765"
										},
										{
											"begin": 26662,
											"end": 26666,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 26536,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "539"
										},
										{
											"begin": 26536,
											"end": 26667,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 26536,
											"end": 26667,
											"name": "tag",
											"source": 23,
											"value": "765"
										},
										{
											"begin": 26536,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26528,
											"end": 26667,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26528,
											"end": 26667,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26255,
											"end": 26674,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "tag",
											"source": 23,
											"value": "540"
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26732,
											"end": 26738,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 26766,
											"end": 26771,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 26760,
											"end": 26772,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 26750,
											"end": 26772,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26750,
											"end": 26772,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26680,
											"end": 26779,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "tag",
											"source": 23,
											"value": "541"
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26826,
											"end": 26832,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 26877,
											"end": 26879,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 26873,
											"end": 26880,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 26868,
											"end": 26870,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 26861,
											"end": 26866,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 26857,
											"end": 26871,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 26853,
											"end": 26881,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 26843,
											"end": 26881,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26843,
											"end": 26881,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26785,
											"end": 26887,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "tag",
											"source": 23,
											"value": "542"
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 26981,
											"end": 26984,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 27009,
											"end": 27048,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "769"
										},
										{
											"begin": 27042,
											"end": 27047,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 27009,
											"end": 27048,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "540"
										},
										{
											"begin": 27009,
											"end": 27048,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 27009,
											"end": 27048,
											"name": "tag",
											"source": 23,
											"value": "769"
										},
										{
											"begin": 27009,
											"end": 27048,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27064,
											"end": 27135,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "770"
										},
										{
											"begin": 27128,
											"end": 27134,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27123,
											"end": 27126,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 27064,
											"end": 27135,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "498"
										},
										{
											"begin": 27064,
											"end": 27135,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 27064,
											"end": 27135,
											"name": "tag",
											"source": 23,
											"value": "770"
										},
										{
											"begin": 27064,
											"end": 27135,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27057,
											"end": 27135,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 27057,
											"end": 27135,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 27144,
											"end": 27196,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "771"
										},
										{
											"begin": 27189,
											"end": 27195,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27184,
											"end": 27187,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 27177,
											"end": 27181,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 27170,
											"end": 27175,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 27166,
											"end": 27182,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 27144,
											"end": 27196,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "536"
										},
										{
											"begin": 27144,
											"end": 27196,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 27144,
											"end": 27196,
											"name": "tag",
											"source": 23,
											"value": "771"
										},
										{
											"begin": 27144,
											"end": 27196,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27221,
											"end": 27250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "772"
										},
										{
											"begin": 27243,
											"end": 27249,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27221,
											"end": 27250,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "541"
										},
										{
											"begin": 27221,
											"end": 27250,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 27221,
											"end": 27250,
											"name": "tag",
											"source": 23,
											"value": "772"
										},
										{
											"begin": 27221,
											"end": 27250,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27216,
											"end": 27219,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 27212,
											"end": 27251,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 27205,
											"end": 27251,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 27205,
											"end": 27251,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26985,
											"end": 27257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 26893,
											"end": 27257,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "tag",
											"source": 23,
											"value": "472"
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27376,
											"end": 27380,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 27414,
											"end": 27416,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 27403,
											"end": 27412,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 27399,
											"end": 27417,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 27391,
											"end": 27417,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 27391,
											"end": 27417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 27463,
											"end": 27472,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27457,
											"end": 27461,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27453,
											"end": 27473,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 27449,
											"end": 27450,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 27438,
											"end": 27447,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 27434,
											"end": 27451,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 27427,
											"end": 27474,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 27491,
											"end": 27569,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "774"
										},
										{
											"begin": 27564,
											"end": 27568,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 27555,
											"end": 27561,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 27491,
											"end": 27569,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "542"
										},
										{
											"begin": 27491,
											"end": 27569,
											"name": "JUMP",
											"source": 23,
											"value": "[in]"
										},
										{
											"begin": 27491,
											"end": 27569,
											"name": "tag",
											"source": 23,
											"value": "774"
										},
										{
											"begin": 27491,
											"end": 27569,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 27483,
											"end": 27569,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 27483,
											"end": 27569,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 27263,
											"end": 27576,
											"name": "JUMP",
											"source": 23,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_ceRouter()": "51c3e7be",
							"_ceToken()": "6e8d9a18",
							"_certToken()": "9479cfa2",
							"_collateralToken()": "358b2b1a",
							"_dao()": "e0683726",
							"_operator()": "70b0a843",
							"_pool()": "636fc28b",
							"_proxy()": "cc2effdc",
							"changeCeToken(address)": "3fd44f17",
							"changeCollateralToken(address)": "232da7fe",
							"changeDao(address)": "d8826fec",
							"changeOperator(address)": "06394c9b",
							"changeProxy(address)": "c4031841",
							"claimInABNBc(address)": "e3b0963a",
							"daoBurn(address,uint256)": "df3d23ae",
							"daoMint(address,uint256)": "14866aef",
							"initialize(address,address,address,address,address,address)": "cc2a9a5b",
							"liquidation(address,uint256)": "6f2bb86a",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"provide()": "b9472535",
							"provideInABNBc(uint256)": "32b038a3",
							"release(address,uint256)": "0357371d",
							"releaseInABNBc(address,uint256)": "7d6ae6f6",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unPause()": "f7b188a5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ChangeOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"ChangeProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_ceRouter\",\"outputs\":[{\"internalType\":\"contract ICerosRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_certToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_collateralToken\",\"outputs\":[{\"internalType\":\"contract ICertToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_dao\",\"outputs\":[{\"internalType\":\"contract IDao\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pool\",\"outputs\":[{\"internalType\":\"contract IBinancePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"changeCeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"changeCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"changeDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"changeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yields\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ceRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"liquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"provideInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"_operator()\":{\"notice\":\"Variables\"},\"changeDao(address)\":{\"notice\":\"UPDATING FUNCTIONALITY\"},\"claimInABNBc(address)\":{\"notice\":\"CLAIM\"},\"liquidation(address,uint256)\":{\"notice\":\"DAO FUNCTIONALITY\"},\"pause()\":{\"notice\":\"PAUSABLE FUNCTIONALITY\"},\"provide()\":{\"notice\":\"DEPOSIT\"},\"release(address,uint256)\":{\"notice\":\"RELEASE\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/HelioProvider.sol\":\"HelioProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"Heliocontracts/contracts/ceros/HelioProvider.sol\":{\"keccak256\":\"0xef64bf713d031ae4417f326413371714d1fc12c7edb176800519ac0b18bd2dd2\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://95a11ea1905f07845c6e3761aab4a1433b857449eddea4ddf43f60d22fb5c278\",\"dweb:/ipfs/QmSWgS8N9ZPByVa4GGPk7RWHUfuXGzVg4xAUDnceJTX5V2\"]},\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]},\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":{\"keccak256\":\"0xc0a632260a55a225fdfe6a347dd7a934cfe91d8fc23c1f446cadf42cd0ff864c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c8c8a95375a65c70595794b408f73b60fe67f3b83f6ae5abd570ff9f58890ef6\",\"dweb:/ipfs/QmeA9NeHgbwtYQUzMs4f4sv49FaUzAVGeR6qA3rcPdx9aE\"]},\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]},\"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol\":{\"keccak256\":\"0x193f8bb5bcbd9a64b456a0065bc7aed9aaa2a3532b4679d03bdd3904de46dd98\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://049004da26e81cf31f22e079734583e9bbb579416afbdb3959689d2bf00250ee\",\"dweb:/ipfs/QmZovpWFNpK4gE9P5bNMeSTngQmj1R5yx6ma2gaXGMaWaQ\"]},\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 303,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_paused",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 423,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_status",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1898,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_operator",
								"offset": 0,
								"slot": "201",
								"type": "t_address"
							},
							{
								"astId": 1900,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_certToken",
								"offset": 0,
								"slot": "202",
								"type": "t_address"
							},
							{
								"astId": 1902,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_ceToken",
								"offset": 0,
								"slot": "203",
								"type": "t_address"
							},
							{
								"astId": 1905,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_collateralToken",
								"offset": 0,
								"slot": "204",
								"type": "t_contract(ICertToken)2704"
							},
							{
								"astId": 1908,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_ceRouter",
								"offset": 0,
								"slot": "205",
								"type": "t_contract(ICerosRouter)2659"
							},
							{
								"astId": 1911,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_dao",
								"offset": 0,
								"slot": "206",
								"type": "t_contract(IDao)2817"
							},
							{
								"astId": 1914,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_pool",
								"offset": 0,
								"slot": "207",
								"type": "t_contract(IBinancePool)2499"
							},
							{
								"astId": 1916,
								"contract": "Heliocontracts/contracts/ceros/HelioProvider.sol:HelioProvider",
								"label": "_proxy",
								"offset": 0,
								"slot": "208",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBinancePool)2499": {
								"encoding": "inplace",
								"label": "contract IBinancePool",
								"numberOfBytes": "20"
							},
							"t_contract(ICerosRouter)2659": {
								"encoding": "inplace",
								"label": "contract ICerosRouter",
								"numberOfBytes": "20"
							},
							"t_contract(ICertToken)2704": {
								"encoding": "inplace",
								"label": "contract ICertToken",
								"numberOfBytes": "20"
							},
							"t_contract(IDao)2817": {
								"encoding": "inplace",
								"label": "contract IDao",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"_operator()": {
								"notice": "Variables"
							},
							"changeDao(address)": {
								"notice": "UPDATING FUNCTIONALITY"
							},
							"claimInABNBc(address)": {
								"notice": "CLAIM"
							},
							"liquidation(address,uint256)": {
								"notice": "DAO FUNCTIONALITY"
							},
							"pause()": {
								"notice": "PAUSABLE FUNCTIONALITY"
							},
							"provide()": {
								"notice": "DEPOSIT"
							},
							"release(address,uint256)": {
								"notice": "RELEASE"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"IBinancePool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinimumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRelayerFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "pendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAndClaimCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinimumStake()": "d9bbd278",
							"getRelayerFee()": "c2117d82",
							"pendingUnstakesOf(address)": "3f9dac52",
							"stakeAndClaimCerts()": "ff0a42de",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"pendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAndClaimCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":\"IBinancePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ICerosRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceTokenJoin",
									"type": "address"
								}
							],
							"name": "ChangeCeTokenJoin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								}
							],
							"name": "ChangeCertToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "ChangeDex",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ChangeProvider",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "ChangeVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBcFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getProfitFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								}
							],
							"name": "withdrawWithSlippage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address)": "1e83409a",
							"claimProfit(address)": "c0ab44f6",
							"deposit()": "d0e30db0",
							"depositABNBc(uint256)": "7c0a75e5",
							"depositABNBcFrom(address,uint256)": "bcdef0a4",
							"getProfitFor(address)": "ac78467c",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawABNBc(address,uint256)": "03550d56",
							"withdrawFor(address,uint256)": "db518db2",
							"withdrawWithSlippage(address,uint256,uint256)": "ab43c3df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceTokenJoin\",\"type\":\"address\"}],\"name\":\"ChangeCeTokenJoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"}],\"name\":\"ChangeCertToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"ChangeDex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ChangeProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"ChangeVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBcFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getProfitFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"withdrawWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claim\"},\"deposit()\":{\"notice\":\"Deposit\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":\"ICerosRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposit(address,address,uint256,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claim"
							},
							"deposit()": {
								"notice": "Deposit"
							},
							"withdraw(address,uint256)": {
								"notice": "Withdrawal"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"IDao": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "keeper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AuctionFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "AuctionStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ilk",
									"type": "bytes32"
								}
							],
							"name": "CollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ilk",
									"type": "bytes32"
								}
							],
							"name": "CollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"name": "Payback",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dink",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								}
							],
							"name": "dropRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dink",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,address,uint256)": "8340f549",
							"dropRewards(address,address)": "216cc57a",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"CollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"CollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"Payback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dink\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"dropRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dink\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":\"IDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":{\"keccak256\":\"0xc0a632260a55a225fdfe6a347dd7a934cfe91d8fc23c1f446cadf42cd0ff864c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c8c8a95375a65c70595794b408f73b60fe67f3b83f6ae5abd570ff9f58890ef6\",\"dweb:/ipfs/QmeA9NeHgbwtYQUzMs4f4sv49FaUzAVGeR6qA3rcPdx9aE\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"IDex": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":\"IDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol": {
				"IHelioProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ChangeOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "ChangeProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "liquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "provide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "provideInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "releaseInABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimInABNBc(address)": "e3b0963a",
							"daoBurn(address,uint256)": "df3d23ae",
							"daoMint(address,uint256)": "14866aef",
							"liquidation(address,uint256)": "6f2bb86a",
							"provide()": "b9472535",
							"provideInABNBc(uint256)": "32b038a3",
							"release(address,uint256)": "0357371d",
							"releaseInABNBc(address,uint256)": "7d6ae6f6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ChangeOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"ChangeProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"liquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"provideInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseInABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"claimInABNBc(address)\":{\"notice\":\"Claim\"},\"liquidation(address,uint256)\":{\"notice\":\"DAO FUNCTIONALITY\"},\"provide()\":{\"notice\":\"Deposit\"},\"release(address,uint256)\":{\"notice\":\"Withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol\":\"IHelioProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol\":{\"keccak256\":\"0x193f8bb5bcbd9a64b456a0065bc7aed9aaa2a3532b4679d03bdd3904de46dd98\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://049004da26e81cf31f22e079734583e9bbb579416afbdb3959689d2bf00250ee\",\"dweb:/ipfs/QmZovpWFNpK4gE9P5bNMeSTngQmj1R5yx6ma2gaXGMaWaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"claimInABNBc(address)": {
								"notice": "Claim"
							},
							"liquidation(address,uint256)": {
								"notice": "DAO FUNCTIONALITY"
							},
							"provide()": {
								"notice": "Deposit"
							},
							"release(address,uint256)": {
								"notice": "Withdrawal"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "CeTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentRatio",
									"type": "uint256"
								}
							],
							"name": "RatioUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYieldsFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCeTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimedOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPrincipalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAmountInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimYields(address)": "b36684ac",
							"claimYieldsFor(address,address)": "1101596c",
							"deposit(uint256)": "b6b55f25",
							"depositFor(address,uint256)": "2f4f21e2",
							"getCeTokenBalanceOf(address)": "c96f0e01",
							"getClaimedOf(address)": "4226626a",
							"getDepositOf(address)": "5d602c00",
							"getPrincipalOf(address)": "aba317a9",
							"getTotalAmountInVault()": "fad83484",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawFor(address,address,uint256)": "9f1d9267"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"CeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRatio\",\"type\":\"uint256\"}],\"name\":\"RatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYieldsFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCeTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrincipalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmountInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Events\"},\"RatioUpdated(uint256)\":{\"notice\":\"Methods\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Events"
							},
							"RatioUpdated(uint256)": {
								"notice": "Methods"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"GemJoinLike": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gem",
							"outputs": [
								{
									"internalType": "contract GemLike",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "join",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exit(address,uint256)": "ef693bed",
							"gem()": "7bd2bea7",
							"join(address,uint256)": "3b4da69f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":\"GemJoinLike\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"GemLike": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/interfaces/GemLike.sol\":\"GemLike\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n  --> @openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:66:9:\n   |\n66 |         _status = _NOT_ENTERED;\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2894,
					"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"start": 2872
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Heliocontracts/contracts/ceros/HelioProvider.sol:88:29:\n   |\n88 |     function provideInABNBc(uint256 amount)\n   |                             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2568,
					"file": "Heliocontracts/contracts/ceros/HelioProvider.sol",
					"start": 2554
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Heliocontracts/contracts/ceros/HelioProvider.sol:92:14:\n   |\n92 |     returns (uint256 value)\n   |              ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2639,
					"file": "Heliocontracts/contracts/ceros/HelioProvider.sol",
					"start": 2626
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1149,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1148,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1107,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1106,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1106_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 881,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						],
						"PausableUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 1149,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 283,
							"src": "172:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "697:13:2"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "697:13:2"
								},
								{
									"baseName": {
										"id": 290,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "712:18:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "712:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "216:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409,
								1148,
								282
							],
							"name": "PausableUpgradeable",
							"nameLocation": "674:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "737:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 296,
									"name": "Paused",
									"nameLocation": "821:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "828:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:2"
									},
									"src": "815:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "851:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 301,
									"name": "Unpaused",
									"nameLocation": "932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "941:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:2"
									},
									"src": "926:32:2"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "977:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "964:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 302,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "964:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1116:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1126:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1126:27:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "991:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1099:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:2"
									},
									"scope": 409,
									"src": "1063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1229:32:2",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1239:15:2"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1212:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1175:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:2"
									},
									"scope": 409,
									"src": "1166:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1472:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1482:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1482:19:2"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1511:1:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1267:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 331,
									"name": "whenNotPaused",
									"nameLocation": "1456:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:2:2"
									},
									"src": "1447:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1719:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1729:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1729:16:2"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1525:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 339,
									"name": "whenPaused",
									"nameLocation": "1706:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:2"
									},
									"src": "1697:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1911:31:2",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "1928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "1921:14:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1769:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1867:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:6:2"
									},
									"scope": 409,
									"src": "1858:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2061:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2079:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 353,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2071:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2071:38:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1948:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2019:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:2"
									},
									"scope": 409,
									"src": "2010:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2236:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2254:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2122:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2197:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 409,
									"src": "2188:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2478:66:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2498:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2488:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2488:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "2524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2517:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2512:25:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2300:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2464:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2464:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2438:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 409,
									"src": "2429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2724:69:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2734:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2734:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "2773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2764:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2759:27:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2550:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 390,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 339,
												"src": "2713:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:2"
									},
									"scope": 409,
									"src": "2676:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2799:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 408,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3078:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "3058:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 407,
										"length": {
											"hexValue": "3439",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3058:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 410,
							"src": "656:2430:2",
							"usedErrors": []
						}
					],
					"src": "105:2982:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"Initializable": [
							282
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 283,
							"src": "121:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "964:13:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:3"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								282
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 418,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1732:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 421,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1779:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1823:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1913:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1923:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1896:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:3"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 468,
									"src": "1853:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2040:39:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2060:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 434,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2023:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:3"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 468,
									"src": "1970:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2480:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2569:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 447,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2580:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:3"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:3"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2872:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2882:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 462,
									"name": "nonReentrant",
									"nameLocation": "2465:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:3"
									},
									"src": "2456:445:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3166:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 466,
										"length": {
											"hexValue": "3439",
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "916:2278:3",
							"usedErrors": []
						}
					],
					"src": "97:3098:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 480,
									"name": "Transfer",
									"nameLocation": "405:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "414:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "436:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "456:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:4"
									},
									"src": "399:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 489,
									"name": "Approval",
									"nameLocation": "636:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "645:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "668:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:4"
									},
									"src": "630:78:4"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:4"
									},
									"scope": 546,
									"src": "785:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "942:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "982:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:4"
									},
									"scope": 546,
									"src": "923:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1234:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 546,
									"src": "1204:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 546,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2302:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2319:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2353:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:4"
									},
									"scope": 546,
									"src": "2285:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2688:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2710:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2730:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2769:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:4"
									},
									"scope": 546,
									"src": "2657:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "202:2575:4",
							"usedErrors": []
						}
					],
					"src": "106:2672:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "630:23:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "660:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1466:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1482:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1513:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1505:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1538:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1530:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1561:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1553:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1585:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1579:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 559,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1604:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1596:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1623:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 563,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:158:5"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:5"
									},
									"scope": 582,
									"src": "1457:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1646:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1954:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:15:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1999:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:9:5"
									},
									"scope": 582,
									"src": "1945:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2014:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2209:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:5"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2251:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:5"
									},
									"scope": 582,
									"src": "2200:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 583,
							"src": "620:1642:5",
							"usedErrors": []
						}
					],
					"src": "114:2149:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 547,
							"src": "140:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
							"file": "../extensions/draft-IERC20PermitUpgradeable.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 583,
							"src": "175:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1107,
							"src": "233:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "282:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 863,
							"linearizedBaseContracts": [
								863
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "748:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "781:18:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:37:6",
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "931:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "961:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 605,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "991:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 513,
																		"src": "991:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "991:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 608,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "1016:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 609,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "1020:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 603,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "968:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "968:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 601,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "941:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "941:86:6"
											}
										]
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "827:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "867:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "849:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 592,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "849:17:6"
													},
													"referencedDeclaration": 546,
													"src": "849:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "910:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "902:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:82:6"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:6"
									},
									"scope": 863,
									"src": "818:216:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "1179:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1209:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 630,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "1239:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 545,
																		"src": "1239:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1239:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 633,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "1268:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 634,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "1274:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "1278:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 628,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1216:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1216:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 626,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "1189:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1189:96:6"
											}
										]
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1049:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1093:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1075:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "1075:17:6"
													},
													"referencedDeclaration": 546,
													"src": "1075:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1116:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1108:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1138:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1130:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1158:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1150:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:104:6"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:6"
									},
									"scope": 863,
									"src": "1040:252:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1669:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "1918:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1927:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1918:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1917:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 660,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1958:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 659,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1950:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 658,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1950:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1950:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 662,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 646,
																					"src": "1965:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 656,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "1934:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 523,
																				"src": "1934:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1934:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1977:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1934:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1917:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1993:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1896:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1896:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "2089:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 675,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "2119:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 533,
																		"src": "2119:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2119:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 678,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2143:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2152:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2096:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2096:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2096:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2069:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2069:90:6"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1298:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1561:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1600:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1582:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "1582:17:6"
													},
													"referencedDeclaration": 546,
													"src": "1582:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1623:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1615:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1648:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1640:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:87:6"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:6"
									},
									"scope": 863,
									"src": "1552:614:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2299:194:6",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2317:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "2309:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2309:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 700,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2356:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2348:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2348:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2348:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 702,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "2363:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 696,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2332:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "2332:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2332:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 704,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2374:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2332:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2309:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2409:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 711,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "2439:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 533,
																		"src": "2439:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2439:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 714,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "2463:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 715,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "2472:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 709,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2416:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2416:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2416:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 707,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2389:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2389:97:6"
											}
										]
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2181:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2230:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2212:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "2212:17:6"
													},
													"referencedDeclaration": 546,
													"src": "2212:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2253:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2245:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2278:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2270:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:87:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2299:0:6"
									},
									"scope": 863,
									"src": "2172:321:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "2626:370:6",
										"statements": [
											{
												"id": 766,
												"nodeType": "UncheckedBlock",
												"src": "2636:354:6",
												"statements": [
													{
														"assignments": [
															731
														],
														"declarations": [
															{
																"constant": false,
																"id": 731,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2668:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 766,
																"src": "2660:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 730,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2660:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 740,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 736,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2707:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2699:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 734,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2699:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2699:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 738,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2714:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 732,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2683:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 523,
																"src": "2683:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2660:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 742,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "2744:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 743,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "2760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2744:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2767:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 741,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2736:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2736:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 747,
														"nodeType": "ExpressionStatement",
														"src": "2736:75:6"
													},
													{
														"assignments": [
															749
														],
														"declarations": [
															{
																"constant": false,
																"id": 749,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2833:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 766,
																"src": "2825:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 748,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2825:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 753,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "2848:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 751,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "2863:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2848:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2825:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 755,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2902:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 758,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "2932:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 533,
																				"src": "2932:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2932:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 761,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "2956:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 762,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "2965:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 756,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2909:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2909:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2909:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 754,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "2882:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2882:97:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "2882:97:6"
													}
												]
											}
										]
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2508:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2539:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 721,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "2539:17:6"
													},
													"referencedDeclaration": 546,
													"src": "2539:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2580:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2572:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2605:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2597:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:87:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2626:0:6"
									},
									"scope": 863,
									"src": "2499:497:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "3228:257:6",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3246:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3238:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 788,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3238:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"id": 792,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3273:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 790,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3260:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "3260:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3260:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3238:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3302:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3309:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "3318:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 801,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "3325:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 802,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "3335:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 803,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3338:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 804,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3341:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 795,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3289:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "3289:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "3289:54:6"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3361:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3353:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"id": 811,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3387:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 809,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3374:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "3374:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 815,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "3411:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 816,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3425:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3439:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3425:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3411:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3403:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "3403:75:6"
											}
										]
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "3011:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3055:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3031:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "IERC20PermitUpgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 582,
														"src": "3031:23:6"
													},
													"referencedDeclaration": 582,
													"src": "3031:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3126:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3118:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3149:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3141:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3167:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 780,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3167:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3192:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3184:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3211:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3203:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:197:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3228:0:6"
									},
									"scope": 863,
									"src": "3002:483:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "3949:636:6",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4311:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "4298:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 833,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4298:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4352:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4358:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 837,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4332:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4324:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4324:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4324:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "4324:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4324:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4298:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4407:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4427:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4407:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "4403:176:6",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "4430:149:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 851,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 834,
																				"src": "4502:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4515:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 852,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4515:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 854,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4514:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 849,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4491:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4491:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4491:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4523:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 848,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4483:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4483:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "4483:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "3491:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3877:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "3897:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "3897:17:6"
													},
													"referencedDeclaration": 546,
													"src": "3897:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3935:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "3922:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3922:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3896:44:6"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:6"
									},
									"scope": 863,
									"src": "3868:717:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 864,
							"src": "740:3847:6",
							"usedErrors": []
						}
					],
					"src": "115:4473:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 866,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "1252:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 874,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "1476:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 873,
												"id": 879,
												"nodeType": "Return",
												"src": "1469:30:7"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1206:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:7"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1246:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:7"
									},
									"scope": 1106,
									"src": "1186:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2494:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 892,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 890,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 895,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2537:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:7"
											},
											{
												"assignments": [
													901,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2589:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 900,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 908,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 902,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "2607:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 904,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2629:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2658:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:7"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2442:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2469:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:7"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:7"
									},
									"scope": 1106,
									"src": "2423:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3566:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3596:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3604:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 925,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															952
														],
														"referencedDeclaration": 952,
														"src": "3583:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 930,
												"nodeType": "Return",
												"src": "3576:67:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:7"
									},
									"scope": 1106,
									"src": "3477:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "4019:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4058:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "4066:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 948,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "4075:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 944,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "4036:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 943,
												"id": 950,
												"nodeType": "Return",
												"src": "4029:59:7"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3903:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3927:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3954:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:7"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4005:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:7"
									},
									"scope": 1106,
									"src": "3872:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4600:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4639:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4647:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "4653:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 964,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "4617:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 963,
												"id": 970,
												"nodeType": "Return",
												"src": "4610:94:7"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4497:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4521:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4548:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4586:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:7"
									},
									"scope": 1106,
									"src": "4457:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5138:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 989,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 987,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 992,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5181:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "5258:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5247:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:7"
											},
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5311:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5325:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"arguments": [
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5378:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1008,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5352:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1010,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5371:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "5417:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5426:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1018,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "5438:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1015,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "5400:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 985,
												"id": 1020,
												"nodeType": "Return",
												"src": "5393:58:7"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4999:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5023:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5050:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5073:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5124:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:7"
									},
									"scope": 1106,
									"src": "4959:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "5735:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1033,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "5771:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5779:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1032,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1074
														],
														"referencedDeclaration": 1074,
														"src": "5752:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1037,
												"nodeType": "Return",
												"src": "5745:80:7"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5663:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5679:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:7"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5721:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:7"
									},
									"scope": 1106,
									"src": "5635:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "6174:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1053,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "6203:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1052,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "6192:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:7"
											},
											{
												"assignments": [
													1059,
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "6263:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1058,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "6277:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1060,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"id": 1064,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "6322:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1062,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6304:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "6361:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1069,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6370:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1070,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "6382:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1067,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "6344:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1072,
												"nodeType": "Return",
												"src": "6337:58:7"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6053:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6077:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6104:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6160:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:7"
									},
									"scope": 1106,
									"src": "6016:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "6782:582:7",
										"statements": [
											{
												"condition": {
													"id": 1086,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1077,
													"src": "6796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "6853:505:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1090,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "6937:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1100,
																"nodeType": "Block",
																"src": "7295:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1097,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "7320:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1096,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1099,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:7"
																	}
																]
															},
															"id": 1101,
															"nodeType": "IfStatement",
															"src": "6933:415:7",
															"trueBody": {
																"id": 1095,
																"nodeType": "Block",
																"src": "6960:329:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:7"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1079,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1079,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1094,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "6792:566:7",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "6805:42:7",
													"statements": [
														{
															"expression": {
																"id": 1087,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "6826:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1085,
															"id": 1088,
															"nodeType": "Return",
															"src": "6819:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6657:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6679:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6712:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1080,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:7"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1106,
									"src": "6622:742:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "194:7172:7",
							"usedErrors": []
						}
					],
					"src": "101:7266:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 283,
							"src": "110:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1111,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:8"
									},
									"id": 1112,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1110,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "763:7:8",
										"statements": []
									},
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 1148,
									"src": "711:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "838:7:8",
										"statements": []
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1120,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:8"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:8"
									},
									"scope": 1148,
									"src": "776:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "912:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1131,
												"nodeType": "Return",
												"src": "922:17:8"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:8"
									},
									"scope": 1148,
									"src": "850:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1019:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1140,
												"nodeType": "Return",
												"src": "1029:15:8"
											}
										]
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:8"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1003:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:8"
									},
									"scope": 1148,
									"src": "952:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1147,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "1316:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1146,
										"length": {
											"hexValue": "3530",
											"id": 1145,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "651:693:8",
							"usedErrors": []
						}
					],
					"src": "86:1259:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1226
						]
					},
					"id": 1227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1226,
							"linearizedBaseContracts": [
								1226
							],
							"name": "IERC20",
							"nameLocation": "212:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1160,
									"name": "Transfer",
									"nameLocation": "394:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "403:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "425:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "445:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:9"
									},
									"src": "388:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1169,
									"name": "Approval",
									"nameLocation": "625:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "634:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "657:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "682:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:9"
									},
									"src": "619:78:9"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:9",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "820:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:9"
									},
									"scope": 1226,
									"src": "774:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:9",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "931:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:9"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "971:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:9"
									},
									"scope": 1226,
									"src": "912:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:9",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1211:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1223:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:9"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1257:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:9"
									},
									"scope": 1226,
									"src": "1193:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1557:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1572:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:9"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1612:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:9"
									},
									"scope": 1226,
									"src": "1538:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:9",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2291:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2308:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:9"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2342:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:9"
									},
									"scope": 1226,
									"src": "2274:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:9",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2677:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2699:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2719:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2758:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:9"
									},
									"scope": 1226,
									"src": "2646:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1227,
							"src": "202:2564:9",
							"usedErrors": []
						}
					],
					"src": "106:2661:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1229,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:10",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:10",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1471:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1494:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1519:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1542:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1568:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1239,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1585:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1604:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:10"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:10"
									},
									"scope": 1262,
									"src": "1446:183:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:10",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1950:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:10"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1988:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:10"
									},
									"scope": 1262,
									"src": "1934:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:10",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:10"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2240:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:10"
									},
									"scope": 1262,
									"src": "2189:60:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "620:1631:10",
							"usedErrors": []
						}
					],
					"src": "114:2138:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1873
						],
						"IERC20": [
							1226
						],
						"IERC20Permit": [
							1262
						],
						"SafeERC20": [
							1543
						]
					},
					"id": 1544,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 1227,
							"src": "140:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 1266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 1263,
							"src": "164:46:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 1874,
							"src": "211:36:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1268,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:11",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1271,
									"libraryName": {
										"id": 1269,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "737:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:11",
									"typeName": {
										"id": 1270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "865:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "895:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1285,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1226",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1193,
																		"src": "925:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1288,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "950:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "954:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1283,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1281,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "875:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "875:86:11"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "794:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1272,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "794:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "794:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "816:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "836:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:11"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:11"
									},
									"scope": 1543,
									"src": "763:205:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "1102:113:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "1132:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "1162:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1226",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1225,
																		"src": "1162:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1313,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "1191:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1314,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "1197:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "1201:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "1112:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:11"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1009:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1296,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1295,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "1009:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "1009:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1031:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1053:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1073:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:11"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:11"
									},
									"scope": 1543,
									"src": "974:241:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "1581:497:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "1830:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1340,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1543",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1543",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1338,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "1877:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1336,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "1846:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1226",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1203,
																				"src": "1846:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "2001:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "2031:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1226",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1213,
																		"src": "2031:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "2055:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1359,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "2064:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "1981:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:11"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:11",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1505:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1322,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "1505:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "1505:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1527:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1552:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:11"
									},
									"scope": 1543,
									"src": "1475:603:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "2200:194:11",
										"statements": [
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "2210:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1380,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1543",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1543",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1378,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1382,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "2264:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1376,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "2233:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1226",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1203,
															"src": "2233:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1384,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "2275:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "2310:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1391,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "2340:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1226",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1213,
																		"src": "2340:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1394,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "2364:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1395,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2373:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1389,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1387,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "2290:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:11"
											}
										]
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2124:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1365,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "2124:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "2124:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2146:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2171:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:11"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:11"
									},
									"scope": 1543,
									"src": "2084:310:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "2516:370:11",
										"statements": [
											{
												"id": 1446,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:11",
												"statements": [
													{
														"assignments": [
															1411
														],
														"declarations": [
															{
																"constant": false,
																"id": 1411,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1446,
																"src": "2550:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1410,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1420,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1416,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1543",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1543",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1414,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1418,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "2604:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1412,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "2573:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1226",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1203,
																"src": "2573:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1422,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "2634:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "2650:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1421,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1427,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:11"
													},
													{
														"assignments": [
															1429
														],
														"declarations": [
															{
																"constant": false,
																"id": 1429,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1446,
																"src": "2715:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1433,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2738:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "2753:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "2792:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1226",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1438,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1403,
																					"src": "2822:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1226",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1213,
																				"src": "2822:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1441,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "2846:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1442,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "2855:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1436,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1226",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1434,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "2772:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1445,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:11"
													}
												]
											}
										]
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "2440:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1401,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "2440:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "2440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "2462:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "2487:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:11"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:11"
									},
									"scope": 1543,
									"src": "2400:486:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "3107:257:11",
										"statements": [
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "3117:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [
														{
															"id": 1472,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "3152:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1470,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3139:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1262",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1255,
														"src": "3139:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "3181:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3188:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3197:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1481,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3204:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1482,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "3214:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1483,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "3217:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1484,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "3220:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3168:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1262",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1247,
														"src": "3168:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:11"
											},
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "3232:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"arguments": [
														{
															"id": 1491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "3266:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1489,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3253:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1262",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1255,
														"src": "3253:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "3290:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1496,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "3304:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:11"
											}
										]
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2921:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$1262",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1449,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1262,
														"src": "2921:12:11"
													},
													"referencedDeclaration": 1262,
													"src": "2921:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$1262",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2949:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2972:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2997:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3020:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3046:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1460,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3063:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3082:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:11"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:11"
									},
									"scope": 1543,
									"src": "2892:472:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "3817:636:11",
										"statements": [
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "4166:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1513,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"arguments": [
														{
															"id": 1520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "4220:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "4200:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1226",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1226",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1633,
														"src": "4192:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4275:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "IfStatement",
												"src": "4271:176:11",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "4298:149:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "4370:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:11",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1528,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1538,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:11",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3776:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1226",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1506,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1226,
														"src": "3776:6:11"
													},
													"referencedDeclaration": 1226,
													"src": "3776:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1226",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3790:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:11"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:11"
									},
									"scope": 1543,
									"src": "3747:706:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1544,
							"src": "707:3748:11",
							"usedErrors": []
						}
					],
					"src": "115:4341:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1873
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1545,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1546,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:12",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1873,
							"linearizedBaseContracts": [
								1873
							],
							"name": "Address",
							"nameLocation": "202:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "1241:254:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1554,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "1465:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1553,
												"id": 1559,
												"nodeType": "Return",
												"src": "1458:30:12"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:12",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1195:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:12"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1235:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:12"
									},
									"scope": 1873,
									"src": "1175:320:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "2483:241:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1873",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1873",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1575,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "2526:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:12"
											},
											{
												"assignments": [
													1581,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "2578:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1580,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1582,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "2596:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1584,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "2618:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "2647:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:12"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:12",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2431:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2458:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:12"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:12"
									},
									"scope": 1873,
									"src": "2412:312:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "3555:96:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "3594:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "3602:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1605,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1653,
															1697
														],
														"referencedDeclaration": 1697,
														"src": "3572:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1611,
												"nodeType": "Return",
												"src": "3565:79:12"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:12",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3488:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3504:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:12"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3541:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:12"
									},
									"scope": 1873,
									"src": "3466:185:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "4020:76:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "4059:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1627,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "4067:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "4076:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1625,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1653,
															1697
														],
														"referencedDeclaration": 1697,
														"src": "4037:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1624,
												"id": 1631,
												"nodeType": "Return",
												"src": "4030:59:12"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "3904:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "3928:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "3955:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:12"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "4006:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:12"
									},
									"scope": 1873,
									"src": "3873:223:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "4601:111:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1646,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "4640:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "4648:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "4654:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1645,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1653,
															1697
														],
														"referencedDeclaration": 1697,
														"src": "4618:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1651,
												"nodeType": "Return",
												"src": "4611:94:12"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4498:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4522:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4549:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:12"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4587:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:12"
									},
									"scope": 1873,
									"src": "4458:254:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "5139:267:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1670,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1873",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1873",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1668,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1673,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "5182:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:12"
											},
											{
												"assignments": [
													1679,
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1679,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5241:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1678,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5255:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1680,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"initialValue": {
													"arguments": [
														{
															"id": 1686,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "5308:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1682,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "5282:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "5301:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1690,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "5357:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "5365:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1692,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "5374:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1693,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "5386:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1689,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "5330:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1666,
												"id": 1695,
												"nodeType": "Return",
												"src": "5323:76:12"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:12",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5000:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5024:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5051:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5074:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:12"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5125:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:12"
									},
									"scope": 1873,
									"src": "4960:446:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "5683:97:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "5719:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "5727:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1707,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1714,
															1743
														],
														"referencedDeclaration": 1743,
														"src": "5700:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1712,
												"nodeType": "Return",
												"src": "5693:80:12"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "5611:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "5627:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:12"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "5669:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:12"
									},
									"scope": 1873,
									"src": "5583:197:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "6122:168:12",
										"statements": [
											{
												"assignments": [
													1727,
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "6133:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1726,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "6147:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1728,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"id": 1732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6192:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "6174:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1736,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "6241:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1737,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "6249:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1738,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "6258:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1739,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "6270:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1735,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "6214:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1741,
												"nodeType": "Return",
												"src": "6207:76:12"
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "6001:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "6025:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "6052:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:12"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "6108:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:12"
									},
									"scope": 1873,
									"src": "5964:326:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "6566:101:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "6604:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "6612:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1753,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1760,
															1789
														],
														"referencedDeclaration": 1789,
														"src": "6583:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1752,
												"id": 1758,
												"nodeType": "Return",
												"src": "6576:84:12"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6499:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6515:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:12"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6552:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:12"
									},
									"scope": 1873,
									"src": "6469:198:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "7008:170:12",
										"statements": [
											{
												"assignments": [
													1773,
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1788,
														"src": "7019:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1772,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1788,
														"src": "7033:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1774,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1780,
												"initialValue": {
													"arguments": [
														{
															"id": 1778,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "7080:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1776,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "7060:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1782,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "7129:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1783,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "7137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1784,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "7146:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1785,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "7158:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1781,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "7102:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1787,
												"nodeType": "Return",
												"src": "7095:76:12"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "6892:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "6916:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "6943:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:12"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "6994:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:12"
									},
									"scope": 1873,
									"src": "6853:325:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "7660:434:12",
										"statements": [
											{
												"condition": {
													"id": 1803,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1794,
													"src": "7674:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "8030:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1821,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "8052:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1822,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1798,
																		"src": "8064:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1820,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "8044:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1824,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:12"
														}
													]
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "7670:418:12",
												"trueBody": {
													"id": 1819,
													"nodeType": "Block",
													"src": "7683:341:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1804,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "7701:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1816,
															"nodeType": "IfStatement",
															"src": "7697:286:12",
															"trueBody": {
																"id": 1815,
																"nodeType": "Block",
																"src": "7725:258:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1810,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1792,
																							"src": "7927:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1809,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1561,
																						"src": "7916:10:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1812,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1808,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1814,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1817,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "8003:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1802,
															"id": 1818,
															"nodeType": "Return",
															"src": "7996:17:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:12",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7511:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7535:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7557:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7590:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:12"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7646:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:12"
									},
									"scope": 1873,
									"src": "7466:628:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "8475:135:12",
										"statements": [
											{
												"condition": {
													"id": 1840,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1831,
													"src": "8489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1849,
													"nodeType": "Block",
													"src": "8546:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1845,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "8568:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1846,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "8580:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1844,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "8560:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1848,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:12"
														}
													]
												},
												"id": 1850,
												"nodeType": "IfStatement",
												"src": "8485:119:12",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "8498:42:12",
													"statements": [
														{
															"expression": {
																"id": 1841,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "8519:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1839,
															"id": 1842,
															"nodeType": "Return",
															"src": "8512:17:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:12",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8350:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8372:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8405:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8461:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:12"
									},
									"scope": 1873,
									"src": "8315:295:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "8699:457:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1859,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "8775:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1869,
													"nodeType": "Block",
													"src": "9105:45:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1866,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "9126:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1865,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1868,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:12"
														}
													]
												},
												"id": 1870,
												"nodeType": "IfStatement",
												"src": "8771:379:12",
												"trueBody": {
													"id": 1864,
													"nodeType": "Block",
													"src": "8798:301:12",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:12"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:12",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:12"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:12"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1854,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1854,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:12",
																	"valueSize": 1
																}
															],
															"id": 1863,
															"nodeType": "InlineAssembly",
															"src": "8947:142:12"
														}
													]
												}
											}
										]
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8633:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8658:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:12"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:12"
									},
									"scope": 1873,
									"src": "8616:540:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1874,
							"src": "194:8964:12",
							"usedErrors": []
						}
					],
					"src": "101:9058:12"
				},
				"id": 12
			},
			"Heliocontracts/contracts/ceros/HelioProvider.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/HelioProvider.sol",
					"exportedSymbols": {
						"Address": [
							1873
						],
						"AddressUpgradeable": [
							1106
						],
						"CollateralType": [
							2717
						],
						"ContextUpgradeable": [
							1148
						],
						"GemJoinLike": [
							3216
						],
						"GemLike": [
							3227
						],
						"HelioProvider": [
							2469
						],
						"IBinancePool": [
							2499
						],
						"ICerosRouter": [
							2659
						],
						"ICertToken": [
							2704
						],
						"IDao": [
							2817
						],
						"IDex": [
							2951
						],
						"IERC20": [
							1226
						],
						"IERC20Permit": [
							1262
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"IHelioProvider": [
							3057
						],
						"IVault": [
							3192
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						],
						"PausableUpgradeable": [
							409
						],
						"ReentrancyGuardUpgradeable": [
							468
						],
						"SafeERC20": [
							1543
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 2470,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 132,
							"src": "65:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 469,
							"src": "141:85:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 1878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 410,
							"src": "227:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 1227,
							"src": "306:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 1544,
							"src": "363:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
							"file": "./interfaces/IVault.sol",
							"id": 1881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 3193,
							"src": "429:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
							"file": "./interfaces/IDex.sol",
							"id": 1882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 2952,
							"src": "463:31:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDao.sol",
							"file": "./interfaces/IDao.sol",
							"id": 1883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 2818,
							"src": "495:31:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
							"file": "./interfaces/ICerosRouter.sol",
							"id": 1884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 2660,
							"src": "527:39:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol",
							"file": "./interfaces/IHelioProvider.sol",
							"id": 1885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 3058,
							"src": "567:41:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
							"file": "./interfaces/IBinancePool.sol",
							"id": 1886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 2500,
							"src": "609:39:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "./interfaces/ICertToken.sol",
							"id": 1887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2470,
							"sourceUnit": 2705,
							"src": "649:37:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1888,
										"name": "IHelioProvider",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3057,
										"src": "713:14:13"
									},
									"id": 1889,
									"nodeType": "InheritanceSpecifier",
									"src": "713:14:13"
								},
								{
									"baseName": {
										"id": 1890,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "729:18:13"
									},
									"id": 1891,
									"nodeType": "InheritanceSpecifier",
									"src": "729:18:13"
								},
								{
									"baseName": {
										"id": 1892,
										"name": "PausableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "749:19:13"
									},
									"id": 1893,
									"nodeType": "InheritanceSpecifier",
									"src": "749:19:13"
								},
								{
									"baseName": {
										"id": 1894,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "770:26:13"
									},
									"id": 1895,
									"nodeType": "InheritanceSpecifier",
									"src": "770:26:13"
								}
							],
							"canonicalName": "HelioProvider",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2469,
							"linearizedBaseContracts": [
								2469,
								468,
								409,
								131,
								1148,
								282,
								3057
							],
							"name": "HelioProvider",
							"nameLocation": "696:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "803:28:13",
										"text": " Variables"
									},
									"functionSelector": "70b0a843",
									"id": 1898,
									"mutability": "mutable",
									"name": "_operator",
									"nameLocation": "851:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "836:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1897,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "836:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9479cfa2",
									"id": 1900,
									"mutability": "mutable",
									"name": "_certToken",
									"nameLocation": "895:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "880:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1899,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "880:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e8d9a18",
									"id": 1902,
									"mutability": "mutable",
									"name": "_ceToken",
									"nameLocation": "926:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "911:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1901,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "911:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "358b2b1a",
									"id": 1905,
									"mutability": "mutable",
									"name": "_collateralToken",
									"nameLocation": "958:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "940:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$2704",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 1904,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1903,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2704,
											"src": "940:10:13"
										},
										"referencedDeclaration": 2704,
										"src": "940:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$2704",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51c3e7be",
									"id": 1908,
									"mutability": "mutable",
									"name": "_ceRouter",
									"nameLocation": "1018:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "998:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICerosRouter_$2659",
										"typeString": "contract ICerosRouter"
									},
									"typeName": {
										"id": 1907,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1906,
											"name": "ICerosRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2659,
											"src": "998:12:13"
										},
										"referencedDeclaration": 2659,
										"src": "998:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICerosRouter_$2659",
											"typeString": "contract ICerosRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0683726",
									"id": 1911,
									"mutability": "mutable",
									"name": "_dao",
									"nameLocation": "1045:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "1033:16:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDao_$2817",
										"typeString": "contract IDao"
									},
									"typeName": {
										"id": 1910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1909,
											"name": "IDao",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2817,
											"src": "1033:4:13"
										},
										"referencedDeclaration": 2817,
										"src": "1033:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDao_$2817",
											"typeString": "contract IDao"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "636fc28b",
									"id": 1914,
									"mutability": "mutable",
									"name": "_pool",
									"nameLocation": "1075:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "1055:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBinancePool_$2499",
										"typeString": "contract IBinancePool"
									},
									"typeName": {
										"id": 1913,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1912,
											"name": "IBinancePool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2499,
											"src": "1055:12:13"
										},
										"referencedDeclaration": 2499,
										"src": "1055:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBinancePool_$2499",
											"typeString": "contract IBinancePool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc2effdc",
									"id": 1916,
									"mutability": "mutable",
									"name": "_proxy",
									"nameLocation": "1101:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2469,
									"src": "1086:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1086:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"id": 1920,
									"libraryName": {
										"id": 1917,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "1119:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "1113:27:13",
									"typeName": {
										"id": 1919,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1918,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1226,
											"src": "1133:6:13"
										},
										"referencedDeclaration": 1226,
										"src": "1133:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1226",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "1202:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1924,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1233:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1233:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1926,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1247:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1247:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1233:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1929,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1258:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1258:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1931,
																	"name": "_operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "1272:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1258:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1233:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f70657261746f723a206e6f7420616c6c6f776564",
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1295:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09",
																"typeString": "literal_string \"Operator: not allowed\""
															},
															"value": "Operator: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_21ecb17da1101d74f213b9b255415cb18acf21047f23e59c667a796a31bc8b09",
																"typeString": "literal_string \"Operator: not allowed\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1212:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:116:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "1212:116:13"
											},
											{
												"id": 1937,
												"nodeType": "PlaceholderStatement",
												"src": "1338:1:13"
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "1145:28:13",
										"text": " Modifiers"
									},
									"id": 1939,
									"name": "onlyOperator",
									"nameLocation": "1187:12:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:13"
									},
									"src": "1178:168:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "1372:145:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1942,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1403:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1403:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1944,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1417:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1417:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1403:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1947,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1428:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1428:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1949,
																	"name": "_proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "1442:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1428:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1403:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e50726f78793a206e6f7420616c6c6f776564",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
																"typeString": "literal_string \"AuctionProxy: not allowed\""
															},
															"value": "AuctionProxy: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
																"typeString": "literal_string \"AuctionProxy: not allowed\""
															}
														],
														"id": 1941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1382:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1382:117:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "1382:117:13"
											},
											{
												"id": 1955,
												"nodeType": "PlaceholderStatement",
												"src": "1509:1:13"
											}
										]
									},
									"id": 1957,
									"name": "onlyProxy",
									"nameLocation": "1360:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:2:13"
									},
									"src": "1351:166:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "1728:424:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1974,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1738:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "1738:16:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1977,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1764:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1764:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "1764:17:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1980,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1791:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1791:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "1791:24:13"
											},
											{
												"expression": {
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1983,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1825:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1984,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1837:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1837:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1825:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1987,
												"nodeType": "ExpressionStatement",
												"src": "1825:22:13"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1988,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "1857:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2704",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1990,
																"name": "collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "1887:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1989,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2704,
															"src": "1876:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$2704_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:27:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2704",
															"typeString": "contract ICertToken"
														}
													},
													"src": "1857:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$2704",
														"typeString": "contract ICertToken"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "1857:46:13"
											},
											{
												"expression": {
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1994,
														"name": "_certToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "1913:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1995,
														"name": "certToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "1926:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1913:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "1913:22:13"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1998,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "1945:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1999,
														"name": "ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "1956:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1945:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "1945:18:13"
											},
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2002,
														"name": "_ceRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "1973:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICerosRouter_$2659",
															"typeString": "contract ICerosRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2004,
																"name": "ceRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "1998:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2003,
															"name": "ICerosRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "1985:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICerosRouter_$2659_$",
																"typeString": "type(contract ICerosRouter)"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1985:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICerosRouter_$2659",
															"typeString": "contract ICerosRouter"
														}
													},
													"src": "1973:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICerosRouter_$2659",
														"typeString": "contract ICerosRouter"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "1973:34:13"
											},
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2008,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "2017:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$2817",
															"typeString": "contract IDao"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2010,
																"name": "daoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "2029:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2009,
															"name": "IDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "2024:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDao_$2817_$",
																"typeString": "type(contract IDao)"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2024:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$2817",
															"typeString": "contract IDao"
														}
													},
													"src": "2017:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDao_$2817",
														"typeString": "contract IDao"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "2017:23:13"
											},
											{
												"expression": {
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2014,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "2050:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2499",
															"typeString": "contract IBinancePool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2016,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "2071:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2015,
															"name": "IBinancePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "2058:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBinancePool_$2499_$",
																"typeString": "type(contract IBinancePool)"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2058:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2499",
															"typeString": "contract IBinancePool"
														}
													},
													"src": "2050:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBinancePool_$2499",
														"typeString": "contract IBinancePool"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "2050:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2024,
															"name": "daoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2115:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2132:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2026,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2132:7:13",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2025,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2127:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2127:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2127:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2021,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "2093:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2020,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2086:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "2086:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1226_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:59:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "2086:59:13"
											}
										]
									},
									"functionSelector": "cc2a9a5b",
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1971,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1716:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1716:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1531:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "1559:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1551:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "certToken",
												"nameLocation": "1592:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1584:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "1619:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1611:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "ceRouter",
												"nameLocation": "1644:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1636:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "daoAddress",
												"nameLocation": "1670:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1662:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1698:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "1690:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:167:13"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:13"
									},
									"scope": 2469,
									"src": "1522:630:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3000
									],
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "2312:213:13",
										"statements": [
											{
												"expression": {
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2044,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "2322:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2045,
																	"name": "_ceRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "2330:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICerosRouter_$2659",
																		"typeString": "contract ICerosRouter"
																	}
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "deposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2576,
																"src": "2330:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																	"typeString": "function () payable external returns (uint256)"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"expression": {
																		"id": 2047,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2355:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2355:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "2330:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
																"typeString": "function () payable external returns (uint256)"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2330:37:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2322:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "2322:45:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2054,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2437:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2437:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2056,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "2449:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2053,
														"name": "_provideCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "2418:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "2418:37:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2478:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2478:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "2490:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2059,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "2470:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2064,
												"nodeType": "EmitStatement",
												"src": "2465:31:13"
											},
											{
												"expression": {
													"id": 2065,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2042,
													"src": "2513:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2066,
												"nodeType": "Return",
												"src": "2506:12:13"
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "2157:26:13",
										"text": " DEPOSIT"
									},
									"functionSelector": "b9472535",
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2037,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2249:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2249:13:13"
										},
										{
											"id": 2040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2039,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2267:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2267:12:13"
										}
									],
									"name": "provide",
									"nameLocation": "2197:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2036,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2236:8:13"
									},
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:13"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2301:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "2293:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:15:13"
									},
									"scope": 2469,
									"src": "2188:337:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3007
									],
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "2645:279:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "48656c696f50726f76696465722f44697361626c6564",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2662:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad",
																"typeString": "literal_string \"HelioProvider/Disabled\""
															},
															"value": "HelioProvider/Disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9bfa56e2f0a2934bcc55e7758e84b837dc30392af9cbd37f5685d1335b37c1ad",
																"typeString": "literal_string \"HelioProvider/Disabled\""
															}
														],
														"id": 2078,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "2655:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "2655:32:13"
											}
										]
									},
									"functionSelector": "32b038a3",
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2073,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2600:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2600:12:13"
										}
									],
									"name": "provideInABNBc",
									"nameLocation": "2539:14:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2072,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2587:8:13"
									},
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2562:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "2554:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2553:16:13"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "2626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:15:13"
									},
									"scope": 2469,
									"src": "2530:394:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3015
									],
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "3114:114:13",
										"statements": [
											{
												"expression": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2096,
														"name": "yields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "3124:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2099,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2086,
																"src": "3149:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2097,
																"name": "_ceRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "3133:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICerosRouter_$2659",
																	"typeString": "contract ICerosRouter"
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "claim",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2600,
															"src": "3133:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) external returns (uint256)"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3133:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3124:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "3124:35:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2104,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "3180:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2105,
															"name": "yields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "3191:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2103,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "3174:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3174:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "EmitStatement",
												"src": "3169:29:13"
											},
											{
												"expression": {
													"id": 2108,
													"name": "yields",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2094,
													"src": "3215:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2109,
												"nodeType": "Return",
												"src": "3208:13:13"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "2929:24:13",
										"text": " CLAIM"
									},
									"functionSelector": "e3b0963a",
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2089,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3051:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3051:12:13"
										},
										{
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2091,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1939,
												"src": "3068:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3068:12:13"
										}
									],
									"name": "claimInABNBc",
									"nameLocation": "2989:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3038:8:13"
									},
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3010:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3002:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3001:19:13"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "yields",
												"nameLocation": "3102:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3094:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:16:13"
									},
									"scope": 2469,
									"src": "2980:248:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3025
									],
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "3456:386:13",
										"statements": [
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "minumumUnstake",
														"nameLocation": "3474:14:13",
														"nodeType": "VariableDeclaration",
														"scope": 2162,
														"src": "3466:22:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3466:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2131,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2128,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "3491:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBinancePool_$2499",
																"typeString": "contract IBinancePool"
															}
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMinimumStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2486,
														"src": "3491:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3491:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3466:48:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2133,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "3545:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2134,
																"name": "minumumUnstake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "3555:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3545:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e20756e7374616b6520616d6f756e74",
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3583:47:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															},
															"value": "value must be greater than min unstake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															}
														],
														"id": 2132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:116:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "ExpressionStatement",
												"src": "3524:116:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3670:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3670:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "3682:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "_withdrawCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "3650:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3650:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "3650:39:13"
											},
											{
												"expression": {
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2145,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "3699:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2148,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "3734:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2149,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "3745:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2146,
																"name": "_ceRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "3712:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICerosRouter_$2659",
																	"typeString": "contract ICerosRouter"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2624,
															"src": "3712:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) external returns (uint256)"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3712:40:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3699:53:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2152,
												"nodeType": "ExpressionStatement",
												"src": "3699:53:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3778:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3778:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2156,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "3790:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "3801:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2153,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2974,
														"src": "3767:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3767:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "EmitStatement",
												"src": "3762:46:13"
											},
											{
												"expression": {
													"id": 2160,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2124,
													"src": "3825:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2161,
												"nodeType": "Return",
												"src": "3818:17:13"
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "3233:26:13",
										"text": " RELEASE"
									},
									"functionSelector": "0357371d",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2119,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "3388:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3388:13:13"
										},
										{
											"id": 2122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2121,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3406:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3406:12:13"
										}
									],
									"name": "release",
									"nameLocation": "3315:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3375:8:13"
									},
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3331:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "3323:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3350:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "3342:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:35:13"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "3440:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "3432:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:20:13"
									},
									"scope": 2469,
									"src": "3306:536:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3034
									],
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "3981:193:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2176,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4011:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4011:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2178,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "4023:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2175,
														"name": "_withdrawCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "3991:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3991:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "3991:39:13"
											},
											{
												"expression": {
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2181,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "4040:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2184,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "4072:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2185,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "4083:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2182,
																"name": "_ceRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "4048:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICerosRouter_$2659",
																	"typeString": "contract ICerosRouter"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawABNBc",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2644,
															"src": "4048:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) external returns (uint256)"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4048:42:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4040:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2188,
												"nodeType": "ExpressionStatement",
												"src": "4040:50:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4116:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4116:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "4128:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2193,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "4139:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2189,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2974,
														"src": "4105:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4105:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "EmitStatement",
												"src": "4100:45:13"
											},
											{
												"expression": {
													"id": 2196,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2173,
													"src": "4162:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2174,
												"id": 2197,
												"nodeType": "Return",
												"src": "4155:12:13"
											}
										]
									},
									"functionSelector": "7d6ae6f6",
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2170,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3936:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3936:12:13"
										}
									],
									"name": "releaseInABNBc",
									"nameLocation": "3856:14:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3923:8:13"
									},
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3879:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3871:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3898:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3890:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3870:35:13"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3970:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3962:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:15:13"
									},
									"scope": 2469,
									"src": "3847:327:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3042
									],
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "4337:59:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2215,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "4371:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2216,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "4382:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2212,
															"name": "_ceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "4347:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICerosRouter_$2659",
																"typeString": "contract ICerosRouter"
															}
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawABNBc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2644,
														"src": "4347:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) external returns (uint256)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "4347:42:13"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "4179:36:13",
										"text": " DAO FUNCTIONALITY"
									},
									"functionSelector": "6f2bb86a",
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2207,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1957,
												"src": "4306:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4306:9:13"
										},
										{
											"id": 2210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2209,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4320:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4320:12:13"
										}
									],
									"name": "liquidation",
									"nameLocation": "4229:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4293:8:13"
									},
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4249:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "4241:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4268:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "4260:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4260:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:35:13"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4337:0:13"
									},
									"scope": 2469,
									"src": "4220:176:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3049
									],
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "4511:54:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "4543:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "4552:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2232,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4521:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2704",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2672,
														"src": "4521:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4521:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "4521:37:13"
											}
										]
									},
									"functionSelector": "df3d23ae",
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2227,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1957,
												"src": "4480:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4480:9:13"
										},
										{
											"id": 2230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2229,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4494:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4494:12:13"
										}
									],
									"name": "daoBurn",
									"nameLocation": "4410:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:13"
									},
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4426:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4418:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4443:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4435:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4435:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:32:13"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4511:0:13"
									},
									"scope": 2469,
									"src": "4401:164:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3056
									],
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "4680:54:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2255,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4712:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2256,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "4721:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2252,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2704",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2679,
														"src": "4690:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "4690:37:13"
											}
										]
									},
									"functionSelector": "14866aef",
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2247,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1957,
												"src": "4649:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4649:9:13"
										},
										{
											"id": 2250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2249,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4663:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4663:12:13"
										}
									],
									"name": "daoMint",
									"nameLocation": "4579:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2246,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4636:8:13"
									},
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4595:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "4587:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4587:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4612:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "4604:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4604:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:32:13"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4680:0:13"
									},
									"scope": 2469,
									"src": "4570:164:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4809:113:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2270,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "4832:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2273,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "4849:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4841:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2271,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4841:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4841:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2275,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "4860:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2267,
															"name": "_dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "4819:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDao_$2817",
																"typeString": "contract IDao"
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2798,
														"src": "4819:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) external returns (uint256)"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4819:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "4819:48:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2281,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "4899:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2282,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "4908:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2278,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4877:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2704",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2679,
														"src": "4877:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4877:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "4877:38:13"
											}
										]
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_provideCollateral",
									"nameLocation": "4748:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4775:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4767:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4767:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4792:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4784:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:33:13"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4809:0:13"
									},
									"scope": 2469,
									"src": "4739:183:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "4998:114:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2296,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "5022:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2299,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5039:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5031:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5031:17:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "5050:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2293,
															"name": "_dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "5008:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDao_$2817",
																"typeString": "contract IDao"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2809,
														"src": "5008:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) external returns (uint256)"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "5008:49:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2307,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "5089:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "5098:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2304,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "5067:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2704",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2672,
														"src": "5067:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "5067:38:13"
											}
										]
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawCollateral",
									"nameLocation": "4936:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4964:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "4956:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4981:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "4973:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:33:13"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4998:0:13"
									},
									"scope": 2469,
									"src": "4927:185:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "5199:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2318,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5209:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "5209:8:13"
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "5117:41:13",
										"text": " PAUSABLE FUNCTIONALITY"
									},
									"functionSelector": "8456cb59",
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2315,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5189:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5189:9:13"
										}
									],
									"name": "pause",
									"nameLocation": "5172:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5177:2:13"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5199:0:13"
									},
									"scope": 2469,
									"src": "5163:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "5267:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2327,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "5277:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5277:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "5277:10:13"
											}
										]
									},
									"functionSelector": "f7b188a5",
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2324,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5257:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5257:9:13"
										}
									],
									"name": "unPause",
									"nameLocation": "5238:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5245:2:13"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5267:0:13"
									},
									"scope": 2469,
									"src": "5229:65:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "5396:190:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2345,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "5443:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5435:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2343,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5435:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5435:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2340,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5413:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2339,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5406:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5406:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "5406:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1226_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5406:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "5406:46:13"
											},
											{
												"expression": {
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2350,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "5462:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$2817",
															"typeString": "contract IDao"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2352,
																"name": "dao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "5474:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2351,
															"name": "IDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "5469:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDao_$2817_$",
																"typeString": "type(contract IDao)"
															}
														},
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5469:9:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$2817",
															"typeString": "contract IDao"
														}
													},
													"src": "5462:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDao_$2817",
														"typeString": "contract IDao"
													}
												},
												"id": 2355,
												"nodeType": "ExpressionStatement",
												"src": "5462:16:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2362,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "5525:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5517:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5517:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5517:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5537:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2365,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5537:7:13",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2364,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5532:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5532:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5532:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2357,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5495:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2356,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5488:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5488:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "5488:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1226_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:62:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2370,
												"nodeType": "ExpressionStatement",
												"src": "5488:62:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2372,
															"name": "dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "5575:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2371,
														"name": "ChangeDao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "5565:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5565:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "EmitStatement",
												"src": "5560:19:13"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "5299:41:13",
										"text": " UPDATING FUNCTIONALITY"
									},
									"functionSelector": "d8826fec",
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2336,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5386:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5386:9:13"
										}
									],
									"name": "changeDao",
									"nameLocation": "5354:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "5372:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5364:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5363:13:13"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:0:13"
									},
									"scope": 2469,
									"src": "5345:241:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "5650:200:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2389,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "5697:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5689:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5689:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5689:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5704:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2384,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5667:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2383,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5660:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5660:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "5660:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1226_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5660:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "5660:46:13"
											},
											{
												"expression": {
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2394,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "5716:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2395,
														"name": "ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "5727:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5716:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "5716:18:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2404,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "5781:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$2817",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5773:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5773:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5793:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2407,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5793:7:13",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2406,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5788:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5788:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5788:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2399,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5751:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2398,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5744:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5744:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "5744:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1226_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1226_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5744:62:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2412,
												"nodeType": "ExpressionStatement",
												"src": "5744:62:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2414,
															"name": "ceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "5835:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2413,
														"name": "ChangeCeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2982,
														"src": "5821:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2416,
												"nodeType": "EmitStatement",
												"src": "5816:27:13"
											}
										]
									},
									"functionSelector": "3fd44f17",
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2380,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5640:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5640:9:13"
										}
									],
									"name": "changeCeToken",
									"nameLocation": "5600:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "5622:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "5614:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:17:13"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5650:0:13"
									},
									"scope": 2469,
									"src": "5591:259:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "5917:78:13",
										"statements": [
											{
												"expression": {
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2425,
														"name": "_proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "5927:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2426,
														"name": "auctionProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "5936:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5927:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "5927:21:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2430,
															"name": "auctionProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "5975:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2429,
														"name": "ChangeProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2990,
														"src": "5963:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5963:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "EmitStatement",
												"src": "5958:30:13"
											}
										]
									},
									"functionSelector": "c4031841",
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2423,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2422,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5907:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5907:9:13"
										}
									],
									"name": "changeProxy",
									"nameLocation": "5864:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "auctionProxy",
												"nameLocation": "5884:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "5876:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:22:13"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5917:0:13"
									},
									"scope": 2469,
									"src": "5855:140:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "6075:116:13",
										"statements": [
											{
												"expression": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2441,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "6085:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2704",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2443,
																"name": "collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "6115:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2442,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2704,
															"src": "6104:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$2704_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6104:27:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2704",
															"typeString": "contract ICertToken"
														}
													},
													"src": "6085:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$2704",
														"typeString": "contract ICertToken"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "6085:46:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2448,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "6168:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2447,
														"name": "ChangeCollateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "6146:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6146:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2450,
												"nodeType": "EmitStatement",
												"src": "6141:43:13"
											}
										]
									},
									"functionSelector": "232da7fe",
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2439,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2438,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6065:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6065:9:13"
										}
									],
									"name": "changeCollateralToken",
									"nameLocation": "6009:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "6039:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "6031:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6031:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6030:25:13"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6075:0:13"
									},
									"scope": 2469,
									"src": "6000:191:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "6257:76:13",
										"statements": [
											{
												"expression": {
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2459,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "6267:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2460,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "6279:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6267:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "6267:20:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2464,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "6317:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2463,
														"name": "ChangeOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2994,
														"src": "6302:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2466,
												"nodeType": "EmitStatement",
												"src": "6297:29:13"
											}
										]
									},
									"functionSelector": "06394c9b",
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2456,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6247:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6247:9:13"
										}
									],
									"name": "changeOperator",
									"nameLocation": "6205:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6228:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "6220:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6220:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6219:18:13"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6257:0:13"
									},
									"scope": 2469,
									"src": "6196:137:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2470,
							"src": "687:5648:13",
							"usedErrors": []
						}
					],
					"src": "41:6295:13"
				},
				"id": 13
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
					"exportedSymbols": {
						"IBinancePool": [
							2499
						]
					},
					"id": 2500,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBinancePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2499,
							"linearizedBaseContracts": [
								2499
							],
							"name": "IBinancePool",
							"nameLocation": "77:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ff0a42de",
									"id": 2474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAndClaimCerts",
									"nameLocation": "105:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:2:14"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:14"
									},
									"scope": 2499,
									"src": "96:47:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 2481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "158:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "182:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "174:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "201:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "193:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:35:14"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:14"
									},
									"scope": 2499,
									"src": "149:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9bbd278",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStake",
									"nameLocation": "233:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:14"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:14"
									},
									"scope": 2499,
									"src": "224:59:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2117d82",
									"id": 2491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRelayerFee",
									"nameLocation": "298:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:14"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "337:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:14"
									},
									"scope": 2499,
									"src": "289:57:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f9dac52",
									"id": 2498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUnstakesOf",
									"nameLocation": "361:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "379:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:14"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "419:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:14"
									},
									"scope": 2499,
									"src": "352:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2500,
							"src": "67:363:14",
							"usedErrors": []
						}
					],
					"src": "41:389:14"
				},
				"id": 14
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
					"exportedSymbols": {
						"ICerosRouter": [
							2659
						]
					},
					"id": 2660,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICerosRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2659,
							"linearizedBaseContracts": [
								2659
							],
							"name": "ICerosRouter",
							"nameLocation": "76:12:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "95:25:15",
										"text": " Events"
									},
									"id": 2512,
									"name": "Deposit",
									"nameLocation": "132:7:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "165:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "149:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "198:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "182:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "221:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "213:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"indexed": false,
												"mutability": "mutable",
												"name": "profit",
												"nameLocation": "245:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "237:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:118:15"
									},
									"src": "126:132:15"
								},
								{
									"anonymous": false,
									"id": 2520,
									"name": "Claim",
									"nameLocation": "270:5:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "301:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "285:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "336:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "320:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "359:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "351:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:96:15"
									},
									"src": "264:108:15"
								},
								{
									"anonymous": false,
									"id": 2530,
									"name": "Withdrawal",
									"nameLocation": "384:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "420:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "404:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "451:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "435:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "486:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "470:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "501:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:127:15"
									},
									"src": "378:144:15"
								},
								{
									"anonymous": false,
									"id": 2534,
									"name": "ChangeVault",
									"nameLocation": "534:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "554:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "546:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:15:15"
									},
									"src": "528:33:15"
								},
								{
									"anonymous": false,
									"id": 2538,
									"name": "ChangeDex",
									"nameLocation": "573:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"indexed": false,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "591:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "583:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:13:15"
									},
									"src": "567:29:15"
								},
								{
									"anonymous": false,
									"id": 2542,
									"name": "ChangePool",
									"nameLocation": "608:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "627:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "619:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:14:15"
									},
									"src": "602:31:15"
								},
								{
									"anonymous": false,
									"id": 2546,
									"name": "ChangeBNBStakingPool",
									"nameLocation": "645:20:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "674:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "666:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:14:15"
									},
									"src": "639:41:15"
								},
								{
									"anonymous": false,
									"id": 2550,
									"name": "ChangeDao",
									"nameLocation": "692:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"indexed": false,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "710:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "702:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:13:15"
									},
									"src": "686:29:15"
								},
								{
									"anonymous": false,
									"id": 2554,
									"name": "ChangeCeToken",
									"nameLocation": "727:13:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "749:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "741:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:17:15"
									},
									"src": "721:37:15"
								},
								{
									"anonymous": false,
									"id": 2558,
									"name": "ChangeCeTokenJoin",
									"nameLocation": "770:17:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceTokenJoin",
												"nameLocation": "796:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "788:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:21:15"
									},
									"src": "764:45:15"
								},
								{
									"anonymous": false,
									"id": 2562,
									"name": "ChangeCertToken",
									"nameLocation": "821:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"indexed": false,
												"mutability": "mutable",
												"name": "certToken",
												"nameLocation": "845:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "837:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:19:15"
									},
									"src": "815:41:15"
								},
								{
									"anonymous": false,
									"id": 2566,
									"name": "ChangeCollateralToken",
									"nameLocation": "868:21:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "898:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "890:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:25:15"
									},
									"src": "862:53:15"
								},
								{
									"anonymous": false,
									"id": 2570,
									"name": "ChangeProvider",
									"nameLocation": "927:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "950:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "942:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:18:15"
									},
									"src": "921:39:15"
								},
								{
									"documentation": {
										"id": 2571,
										"nodeType": "StructuredDocumentation",
										"src": "998:26:15",
										"text": " Deposit"
									},
									"functionSelector": "d0e30db0",
									"id": 2576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1053:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:2:15"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "1089:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:9:15"
									},
									"scope": 2659,
									"src": "1044:54:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcdef0a4",
									"id": 2585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBcFrom",
									"nameLocation": "1129:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1154:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1146:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1169:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1161:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:31:15"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1203:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:9:15"
									},
									"scope": 2659,
									"src": "1120:92:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c0a75e5",
									"id": 2592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBc",
									"nameLocation": "1227:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "1240:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:16:15"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:9:15"
									},
									"scope": 2659,
									"src": "1218:65:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2593,
										"nodeType": "StructuredDocumentation",
										"src": "1289:24:15",
										"text": " Claim"
									},
									"functionSelector": "1e83409a",
									"id": 2600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1350:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1364:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "1356:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:19:15"
									},
									"returnParameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "1393:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:9:15"
									},
									"scope": 2659,
									"src": "1341:61:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0ab44f6",
									"id": 2605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimProfit",
									"nameLocation": "1417:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1437:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "1429:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:19:15"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:15"
									},
									"scope": 2659,
									"src": "1408:49:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "1463:29:15",
										"text": " Withdrawal"
									},
									"functionSelector": "f3fef3a3",
									"id": 2615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1518:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1535:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1527:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1554:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1546:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:35:15"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1588:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:9:15"
									},
									"scope": 2659,
									"src": "1509:88:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db518db2",
									"id": 2624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1623:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1643:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "1635:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "1654:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:35:15"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "1696:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:15"
									},
									"scope": 2659,
									"src": "1614:91:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ab43c3df",
									"id": 2635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawWithSlippage",
									"nameLocation": "1731:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1769:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "1761:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1796:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "1788:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "1820:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "1812:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:83:15"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "1853:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:9:15"
									},
									"scope": 2659,
									"src": "1722:140:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03550d56",
									"id": 2644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawABNBc",
									"nameLocation": "1890:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1912:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1904:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1931:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1923:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:35:15"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1965:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:9:15"
									},
									"scope": 2659,
									"src": "1881:93:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac78467c",
									"id": 2651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfitFor",
									"nameLocation": "1989:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2010:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "2002:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:17:15"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "2042:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:9:15"
									},
									"scope": 2659,
									"src": "1980:71:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 2658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "2065:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2085:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "2077:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:17:15"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "2116:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:9:15"
									},
									"scope": 2659,
									"src": "2056:69:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2660,
							"src": "66:2061:15",
							"usedErrors": []
						}
					],
					"src": "41:2086:15"
				},
				"id": 15
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							2704
						],
						"IERC20": [
							1226
						]
					},
					"id": 2705,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2705,
							"sourceUnit": 1227,
							"src": "66:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2664,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "219:6:16"
									},
									"id": 2665,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:16"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2663,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:16",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2704,
							"linearizedBaseContracts": [
								2704,
								1226
							],
							"name": "ICertToken",
							"nameLocation": "205:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 2672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "247:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "264:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:16"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:16"
									},
									"scope": 2704,
									"src": "233:56:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "309:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "326:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:16"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:16"
									},
									"scope": 2704,
									"src": "295:56:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 2686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "387:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:16"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "422:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:16"
									},
									"scope": 2704,
									"src": "357:74:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 2691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:16"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "477:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:16"
									},
									"scope": 2704,
									"src": "437:46:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 2696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:16"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "529:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:16"
									},
									"scope": 2704,
									"src": "489:49:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 2703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "567:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:16"
									},
									"returnParameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "606:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:16"
									},
									"scope": 2704,
									"src": "544:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2705,
							"src": "195:422:16",
							"usedErrors": []
						}
					],
					"src": "41:577:16"
				},
				"id": 16
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDao.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"CollateralType": [
							2717
						],
						"GemJoinLike": [
							3216
						],
						"GemLike": [
							3227
						],
						"IDao": [
							2817
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 2818,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:17"
						},
						{
							"absolutePath": "Heliocontracts/contracts/interfaces/GemJoinLike.sol",
							"file": "../../interfaces/GemJoinLike.sol",
							"id": 2707,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2818,
							"sourceUnit": 3217,
							"src": "66:42:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "CollateralType",
							"id": 2717,
							"members": [
								{
									"constant": false,
									"id": 2710,
									"mutability": "mutable",
									"name": "gem",
									"nameLocation": "154:3:17",
									"nodeType": "VariableDeclaration",
									"scope": 2717,
									"src": "142:15:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GemJoinLike_$3216",
										"typeString": "contract GemJoinLike"
									},
									"typeName": {
										"id": 2709,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2708,
											"name": "GemJoinLike",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3216,
											"src": "142:11:17"
										},
										"referencedDeclaration": 3216,
										"src": "142:11:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GemJoinLike_$3216",
											"typeString": "contract GemJoinLike"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2712,
									"mutability": "mutable",
									"name": "ilk",
									"nameLocation": "171:3:17",
									"nodeType": "VariableDeclaration",
									"scope": 2717,
									"src": "163:11:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2711,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2714,
									"mutability": "mutable",
									"name": "live",
									"nameLocation": "187:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 2717,
									"src": "180:11:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2713,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "180:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2716,
									"mutability": "mutable",
									"name": "clip",
									"nameLocation": "246:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 2717,
									"src": "238:12:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2715,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CollateralType",
							"nameLocation": "121:14:17",
							"nodeType": "StructDefinition",
							"scope": 2818,
							"src": "114:139:17",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDao",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2817,
							"linearizedBaseContracts": [
								2817
							],
							"name": "IDao",
							"nameLocation": "265:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2727,
									"name": "Deposit",
									"nameLocation": "283:7:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "307:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "291:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "321:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "313:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "341:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "333:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "357:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "349:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:79:17"
									},
									"src": "277:93:17"
								},
								{
									"anonymous": false,
									"id": 2739,
									"name": "Borrow",
									"nameLocation": "381:6:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "404:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "388:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "418:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "410:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "438:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "430:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "464:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "456:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nameLocation": "480:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "472:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:110:17"
									},
									"src": "375:123:17"
								},
								{
									"anonymous": false,
									"id": 2751,
									"name": "Payback",
									"nameLocation": "509:7:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "533:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "517:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "547:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "539:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "567:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "559:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"indexed": false,
												"mutability": "mutable",
												"name": "debt",
												"nameLocation": "583:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "575:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nameLocation": "597:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "589:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:98:17"
									},
									"src": "503:112:17"
								},
								{
									"anonymous": false,
									"id": 2757,
									"name": "Withdraw",
									"nameLocation": "626:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "651:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "635:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "665:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "657:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:38:17"
									},
									"src": "620:53:17"
								},
								{
									"anonymous": false,
									"id": 2763,
									"name": "CollateralEnabled",
									"nameLocation": "684:17:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "710:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "702:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"indexed": false,
												"mutability": "mutable",
												"name": "ilk",
												"nameLocation": "725:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "717:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:28:17"
									},
									"src": "678:52:17"
								},
								{
									"anonymous": false,
									"id": 2769,
									"name": "CollateralDisabled",
									"nameLocation": "741:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "768:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "760:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"indexed": false,
												"mutability": "mutable",
												"name": "ilk",
												"nameLocation": "783:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "775:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:28:17"
									},
									"src": "735:53:17"
								},
								{
									"anonymous": false,
									"id": 2779,
									"name": "AuctionStarted",
									"nameLocation": "799:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "830:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "814:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "845:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "837:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "859:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "851:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "875:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "867:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:68:17"
									},
									"src": "793:89:17"
								},
								{
									"anonymous": false,
									"id": 2787,
									"name": "AuctionFinished",
									"nameLocation": "893:15:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "925:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "909:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"indexed": false,
												"mutability": "mutable",
												"name": "keeper",
												"nameLocation": "940:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "932:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "957:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "949:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:56:17"
									},
									"src": "887:78:17"
								},
								{
									"functionSelector": "8340f549",
									"id": 2798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "980:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1005:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "997:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1034:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "1026:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "dink",
												"nameLocation": "1057:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "1049:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:80:17"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "1086:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:9:17"
									},
									"scope": 2817,
									"src": "971:124:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9caed12",
									"id": 2809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1110:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1136:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "1128:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1165:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "1157:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "dink",
												"nameLocation": "1188:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "1180:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:80:17"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "1217:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:9:17"
									},
									"scope": 2817,
									"src": "1101:125:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "216cc57a",
									"id": 2816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropRewards",
									"nameLocation": "1241:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1261:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "1253:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "1276:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "1268:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:28:17"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:17"
									},
									"scope": 2817,
									"src": "1232:58:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2818,
							"src": "255:1037:17",
							"usedErrors": []
						}
					],
					"src": "41:1252:17"
				},
				"id": 17
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
					"exportedSymbols": {
						"IDex": [
							2951
						]
					},
					"id": 2952,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2819,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDex",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2951,
							"linearizedBaseContracts": [
								2951
							],
							"name": "IDex",
							"nameLocation": "77:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "97:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:18"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "130:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:9:18"
									},
									"scope": 2951,
									"src": "88:51:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "154:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:18"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "184:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:9:18"
									},
									"scope": 2951,
									"src": "145:48:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "208:24:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "250:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "242:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "276:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "268:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "317:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "298:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2834,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "298:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2835,
													"nodeType": "ArrayTypeName",
													"src": "298:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "339:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "331:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "359:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "351:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:141:18"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "409:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "392:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2842,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "392:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2843,
													"nodeType": "ArrayTypeName",
													"src": "392:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:26:18"
									},
									"scope": 2951,
									"src": "199:219:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "433:24:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "475:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "467:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "502:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "494:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "542:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "523:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2851,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "523:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2852,
													"nodeType": "ArrayTypeName",
													"src": "523:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "564:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "556:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "584:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "576:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:141:18"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "634:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "617:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2859,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "617:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2860,
													"nodeType": "ArrayTypeName",
													"src": "617:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:26:18"
									},
									"scope": 2951,
									"src": "424:219:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "658:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "697:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "689:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "738:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "719:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2866,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "719:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2867,
													"nodeType": "ArrayTypeName",
													"src": "719:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "760:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "752:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "780:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "772:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:115:18"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "838:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "821:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2874,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "821:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2875,
													"nodeType": "ArrayTypeName",
													"src": "821:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:26:18"
									},
									"scope": 2951,
									"src": "649:198:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "862:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "901:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "893:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "927:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "919:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "968:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "949:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2883,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "949:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2884,
													"nodeType": "ArrayTypeName",
													"src": "949:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "990:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "982:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1010:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "1002:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:141:18"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1060:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "1043:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2891,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1043:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2892,
													"nodeType": "ArrayTypeName",
													"src": "1043:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:26:18"
									},
									"scope": 2951,
									"src": "853:216:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "1084:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1107:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "1099:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1132:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "1124:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1158:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "1150:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:83:18"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1204:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "1196:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:17:18"
									},
									"scope": 2951,
									"src": "1075:138:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1228:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1258:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1250:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1284:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1276:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1311:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1303:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:87:18"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1359:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1351:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:19:18"
									},
									"scope": 2951,
									"src": "1219:151:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "1385:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1414:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1406:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1441:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1433:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1468:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1460:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:88:18"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1516:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1508:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:18:18"
									},
									"scope": 2951,
									"src": "1376:150:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1541:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1563:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1555:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1592:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1573:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2931,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1573:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2932,
													"nodeType": "ArrayTypeName",
													"src": "1573:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:43:18"
									},
									"returnParameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1662:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1645:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2935,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1645:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2936,
													"nodeType": "ArrayTypeName",
													"src": "1645:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:26:18"
									},
									"scope": 2951,
									"src": "1532:139:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "1686:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1707:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "1699:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1737:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "1718:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2942,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1718:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2943,
													"nodeType": "ArrayTypeName",
													"src": "1718:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:44:18"
									},
									"returnParameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1807:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "1790:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2946,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1790:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2947,
													"nodeType": "ArrayTypeName",
													"src": "1790:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:26:18"
									},
									"scope": 2951,
									"src": "1677:139:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2952,
							"src": "67:1751:18",
							"usedErrors": []
						}
					],
					"src": "41:1778:18"
				},
				"id": 18
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IHelioProvider.sol",
					"exportedSymbols": {
						"IHelioProvider": [
							3057
						]
					},
					"id": 3058,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2953,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHelioProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3057,
							"linearizedBaseContracts": [
								3057
							],
							"name": "IHelioProvider",
							"nameLocation": "76:14:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "97:25:19",
										"text": " Events"
									},
									"id": 2960,
									"name": "Deposit",
									"nameLocation": "134:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "158:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "142:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "175:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "167:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:41:19"
									},
									"src": "128:55:19"
								},
								{
									"anonymous": false,
									"id": 2966,
									"name": "Claim",
									"nameLocation": "195:5:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "217:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "201:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "236:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "228:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:43:19"
									},
									"src": "189:55:19"
								},
								{
									"anonymous": false,
									"id": 2974,
									"name": "Withdrawal",
									"nameLocation": "256:10:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "292:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "276:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "323:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "307:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2972,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "350:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "342:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:96:19"
									},
									"src": "250:113:19"
								},
								{
									"anonymous": false,
									"id": 2978,
									"name": "ChangeDao",
									"nameLocation": "375:9:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"indexed": false,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "393:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "385:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:13:19"
									},
									"src": "369:29:19"
								},
								{
									"anonymous": false,
									"id": 2982,
									"name": "ChangeCeToken",
									"nameLocation": "410:13:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "432:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "424:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:17:19"
									},
									"src": "404:37:19"
								},
								{
									"anonymous": false,
									"id": 2986,
									"name": "ChangeCollateralToken",
									"nameLocation": "453:21:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "483:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "475:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:25:19"
									},
									"src": "447:53:19"
								},
								{
									"anonymous": false,
									"id": 2990,
									"name": "ChangeProxy",
									"nameLocation": "512:11:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"indexed": false,
												"mutability": "mutable",
												"name": "auctionProxy",
												"nameLocation": "532:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "524:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:22:19"
									},
									"src": "506:40:19"
								},
								{
									"anonymous": false,
									"id": 2994,
									"name": "ChangeOperator",
									"nameLocation": "558:14:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "581:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "573:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:18:19"
									},
									"src": "552:39:19"
								},
								{
									"documentation": {
										"id": 2995,
										"nodeType": "StructuredDocumentation",
										"src": "597:26:19",
										"text": " Deposit"
									},
									"functionSelector": "b9472535",
									"id": 3000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "provide",
									"nameLocation": "652:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:19"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "688:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:9:19"
									},
									"scope": 3057,
									"src": "643:54:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "32b038a3",
									"id": 3007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "provideInABNBc",
									"nameLocation": "728:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "751:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "743:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:16:19"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "777:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:9:19"
									},
									"scope": 3057,
									"src": "719:67:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3008,
										"nodeType": "StructuredDocumentation",
										"src": "792:24:19",
										"text": " Claim"
									},
									"functionSelector": "e3b0963a",
									"id": 3015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimInABNBc",
									"nameLocation": "853:12:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "874:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "866:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:19:19"
									},
									"returnParameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "903:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:19"
									},
									"scope": 3057,
									"src": "844:68:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3016,
										"nodeType": "StructuredDocumentation",
										"src": "918:29:19",
										"text": " Withdrawal"
									},
									"functionSelector": "0357371d",
									"id": 3025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "973:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "989:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "981:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1008:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1000:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:35:19"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1042:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:9:19"
									},
									"scope": 3057,
									"src": "964:87:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d6ae6f6",
									"id": 3034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseInABNBc",
									"nameLocation": "1079:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1102:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "1094:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1121:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "1113:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:35:19"
									},
									"returnParameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "1155:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:9:19"
									},
									"scope": 3057,
									"src": "1070:94:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "1170:36:19",
										"text": " DAO FUNCTIONALITY"
									},
									"functionSelector": "6f2bb86a",
									"id": 3042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidation",
									"nameLocation": "1221:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1241:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 3042,
												"src": "1233:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1260:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3042,
												"src": "1252:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:35:19"
									},
									"returnParameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:0:19"
									},
									"scope": 3057,
									"src": "1212:65:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "df3d23ae",
									"id": 3049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "daoBurn",
									"nameLocation": "1292:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1308:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "1300:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1325:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "1317:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:32:19"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:0:19"
									},
									"scope": 3057,
									"src": "1283:58:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14866aef",
									"id": 3056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "daoMint",
									"nameLocation": "1356:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1372:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "1364:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1389:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "1381:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:32:19"
									},
									"returnParameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:19"
									},
									"scope": 3057,
									"src": "1347:58:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3058,
							"src": "66:1341:19",
							"usedErrors": []
						}
					],
					"src": "41:1366:19"
				},
				"id": 19
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							3192
						]
					},
					"id": 3193,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3059,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3192,
							"linearizedBaseContracts": [
								3192
							],
							"name": "IVault",
							"nameLocation": "75:6:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3060,
										"nodeType": "StructuredDocumentation",
										"src": "88:25:20",
										"text": " Events"
									},
									"id": 3068,
									"name": "Deposited",
									"nameLocation": "124:9:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "159:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "143:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3064,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "190:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "174:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3066,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "217:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "209:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:95:20"
									},
									"src": "118:111:20"
								},
								{
									"anonymous": false,
									"id": 3076,
									"name": "Claimed",
									"nameLocation": "240:7:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "273:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "257:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3072,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "304:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "288:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3074,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "331:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "323:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:95:20"
									},
									"src": "234:109:20"
								},
								{
									"anonymous": false,
									"id": 3084,
									"name": "Withdrawn",
									"nameLocation": "354:9:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "389:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "373:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "420:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "404:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3082,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "447:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "439:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:95:20"
									},
									"src": "348:111:20"
								},
								{
									"anonymous": false,
									"id": 3088,
									"name": "RouterChanged",
									"nameLocation": "470:13:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"indexed": false,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "492:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "484:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:16:20"
									},
									"src": "464:36:20"
								},
								{
									"anonymous": false,
									"id": 3094,
									"name": "CeTokenChanged",
									"nameLocation": "511:14:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldToken",
												"nameLocation": "534:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "526:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"indexed": false,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "552:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "544:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:36:20"
									},
									"src": "505:57:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "567:26:20",
										"text": " Methods"
									},
									"id": 3099,
									"name": "RatioUpdated",
									"nameLocation": "604:12:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentRatio",
												"nameLocation": "625:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "617:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:22:20"
									},
									"src": "598:41:20"
								},
								{
									"functionSelector": "b6b55f25",
									"id": 3106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "653:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "669:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "661:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:16:20"
									},
									"returnParameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "695:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:20"
									},
									"scope": 3192,
									"src": "644:60:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f4f21e2",
									"id": 3115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFor",
									"nameLocation": "718:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "737:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "729:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "756:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "748:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:35:20"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "790:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:9:20"
									},
									"scope": 3192,
									"src": "709:90:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b36684ac",
									"id": 3122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYields",
									"nameLocation": "813:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "833:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "825:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:19:20"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "862:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:20"
									},
									"scope": 3192,
									"src": "804:67:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1101596c",
									"id": 3131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYieldsFor",
									"nameLocation": "885:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "900:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "923:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "915:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:34:20"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "960:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:9:20"
									},
									"scope": 3192,
									"src": "876:93:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 3140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "983:8:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1000:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "992:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1019:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "1011:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:35:20"
									},
									"returnParameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "1053:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:9:20"
									},
									"scope": 3192,
									"src": "974:88:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f1d9267",
									"id": 3151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1076:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1105:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1097:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1128:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1120:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1147:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:80:20"
									},
									"returnParameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1186:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:20"
									},
									"scope": 3192,
									"src": "1067:128:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aba317a9",
									"id": 3158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrincipalOf",
									"nameLocation": "1209:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1232:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "1224:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:17:20"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "1264:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:9:20"
									},
									"scope": 3192,
									"src": "1200:73:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 3165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "1287:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1307:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "1299:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:17:20"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "1339:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:9:20"
									},
									"scope": 3192,
									"src": "1278:70:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fad83484",
									"id": 3170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAmountInVault",
									"nameLocation": "1362:21:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:20"
									},
									"returnParameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "1409:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:20"
									},
									"scope": 3192,
									"src": "1353:65:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c96f0e01",
									"id": 3177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCeTokenBalanceOf",
									"nameLocation": "1432:19:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "1452:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:17:20"
									},
									"returnParameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "1492:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:20"
									},
									"scope": 3192,
									"src": "1423:78:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d602c00",
									"id": 3184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositOf",
									"nameLocation": "1515:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1536:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "1528:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:17:20"
									},
									"returnParameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "1568:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:9:20"
									},
									"scope": 3192,
									"src": "1506:71:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4226626a",
									"id": 3191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimedOf",
									"nameLocation": "1591:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1612:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1604:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:17:20"
									},
									"returnParameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1644:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:20"
									},
									"scope": 3192,
									"src": "1582:71:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3193,
							"src": "65:1590:20",
							"usedErrors": []
						}
					],
					"src": "41:1614:20"
				},
				"id": 20
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/interfaces/GemJoinLike.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"GemJoinLike": [
							3216
						],
						"GemLike": [
							3227
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 3217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3194,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:21"
						},
						{
							"absolutePath": "Heliocontracts/contracts/interfaces/GemLike.sol",
							"file": "./GemLike.sol",
							"id": 3195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3217,
							"sourceUnit": 3228,
							"src": "58:23:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GemJoinLike",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3216,
							"linearizedBaseContracts": [
								3216
							],
							"name": "GemJoinLike",
							"nameLocation": "93:11:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3b4da69f",
									"id": 3202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "join",
									"nameLocation": "120:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3197,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "133:3:21",
												"nodeType": "VariableDeclaration",
												"scope": 3202,
												"src": "125:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "146:3:21",
												"nodeType": "VariableDeclaration",
												"scope": 3202,
												"src": "138:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:26:21"
									},
									"returnParameters": {
										"id": 3201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:0:21"
									},
									"scope": 3216,
									"src": "111:49:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef693bed",
									"id": 3209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "175:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "188:3:21",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "180:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "201:3:21",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "193:11:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:26:21"
									},
									"returnParameters": {
										"id": 3208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:0:21"
									},
									"scope": 3216,
									"src": "166:49:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7bd2bea7",
									"id": 3215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gem",
									"nameLocation": "230:3:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:21"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "259:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GemLike_$3227",
													"typeString": "contract GemLike"
												},
												"typeName": {
													"id": 3212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3211,
														"name": "GemLike",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3227,
														"src": "259:7:21"
													},
													"referencedDeclaration": 3227,
													"src": "259:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GemLike_$3227",
														"typeString": "contract GemLike"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:9:21"
									},
									"scope": 3216,
									"src": "221:47:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3217,
							"src": "83:187:21",
							"usedErrors": []
						}
					],
					"src": "32:238:21"
				},
				"id": 21
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/interfaces/GemLike.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"GemLike": [
							3227
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 3228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:22"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 3219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3228,
							"sourceUnit": 864,
							"src": "58:88:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3220,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 546,
										"src": "169:17:22"
									},
									"id": 3221,
									"nodeType": "InheritanceSpecifier",
									"src": "169:17:22"
								}
							],
							"canonicalName": "GemLike",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3227,
							"linearizedBaseContracts": [
								3227,
								546
							],
							"name": "GemLike",
							"nameLocation": "158:7:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 3226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "202:8:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:22"
									},
									"returnParameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "236:4:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:6:22"
									},
									"scope": 3227,
									"src": "193:49:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3228,
							"src": "148:96:22",
							"usedErrors": []
						}
					],
					"src": "32:212:22"
				},
				"id": 22
			}
		}
	}
}