{
	"id": "9ccfa33751828894121346d9c377d014",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/ceros/CerosRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/IDex.sol\";\nimport \"./interfaces/ICerosRouter.sol\";\nimport \"./interfaces/IBinancePool.sol\";\nimport \"./interfaces/IBNBStakingPool.sol\";\nimport \"./interfaces/ICertToken.sol\";\n\ncontract CerosRouter is\nICerosRouter,\nOwnableUpgradeable,\nPausableUpgradeable,\nReentrancyGuardUpgradeable\n{\n    /**\n     * Variables\n     */\n    IVault private _vault;\n    IDex private _dex;\n    IBinancePool private _pool; // default (BinancePool)\n    // Tokens\n    ICertToken private _certToken; // (default aBNBc)\n    address private _wBnbAddress;\n    IERC20 private _ceToken; // (default ceABNBc)\n    mapping(address => uint256) private _profits;\n    address private _provider;\n    IBNBStakingPool private _bnbStakingPool; // new\n    using SafeERC20 for IERC20;\n    /**\n     * Modifiers\n     */\n    modifier onlyProvider() {\n        require(\n            msg.sender == owner() || msg.sender == _provider,\n            \"Provider: not allowed\"\n        );\n        _;\n    }\n    function initialize(\n        address certToken,\n        address wBnbToken,\n        address ceToken,\n        address bondToken,\n        address vault,\n        address dexAddress,\n        address pool\n    ) public initializer {\n        __Ownable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        _certToken = ICertToken(certToken);\n        _wBnbAddress = wBnbToken;\n        _ceToken = IERC20(ceToken);\n        _vault = IVault(vault);\n        _dex = IDex(dexAddress);\n        _pool = IBinancePool(pool);\n        IERC20(wBnbToken).safeApprove(dexAddress, type(uint256).max);\n        IERC20(certToken).safeApprove(dexAddress, type(uint256).max);\n        IERC20(certToken).safeApprove(bondToken, type(uint256).max);\n        IERC20(certToken).safeApprove(pool, type(uint256).max);\n        IERC20(certToken).safeApprove(vault, type(uint256).max);\n    }\n    /**\n     * DEPOSIT\n     */\n    function deposit()\n    external\n    payable\n    override\n    onlyProvider\n    nonReentrant\n    returns (uint256 value)\n    {\n        uint256 amount = msg.value;\n        // get returned amount from Dex\n        // address[] memory path = new address[](2);\n        // path[0] = _wBnbAddress;\n        // path[1] = address(_certToken);\n        // uint256[] memory outAmounts = _dex.getAmountsOut(amount, path);\n        // uint256 dexABNBcAmount = outAmounts[outAmounts.length - 1];\n        // // let's calculate returned amount of aBNBc from BinancePool\n        // // poolABNBcAmount = amount - relayerFee - amount*(1-ratio);\n        uint256 minimumStake = _bnbStakingPool.getMinStake();\n        uint256 shares;\n        if (amount >= minimumStake) {\n            shares = _certToken.bondsToShares(amount);\n        }\n        // compare poolABNBcAmount with dexABNBcAmount from Dex\n        // if poolABNBcAmount >= dexABNBcAmount -> stake via BinancePool\n        // else -> swap on Dex\n        uint256 realAmount;\n        uint256 profit;\n        if (shares >= 0) {\n            realAmount = shares;\n            _bnbStakingPool.stakeCerts{value: amount}();\n        } else {\n            revert(\"DEX DISABLED\");\n            // uint256[] memory amounts = _dex.swapExactETHForTokens{\n            //     value: amount\n            // }(dexABNBcAmount, path, address(this), block.timestamp + 300);\n            // realAmount = amounts[1];\n            // if (realAmount > poolABNBcAmount && poolABNBcAmount != 0) {\n            //     profit = realAmount - poolABNBcAmount;\n            // }\n        }\n        // let's check balance of CeRouter in aBNBc\n        require(\n            _certToken.balanceOf(address(this)) >= realAmount,\n            \"insufficient amount of CerosRouter in cert token\"\n        );\n        // add profit\n        // TODO profit is 0\n        _profits[msg.sender] += profit;\n        value = _vault.depositFor(msg.sender, realAmount - profit);\n        emit Deposit(msg.sender, _wBnbAddress, realAmount - profit, profit);\n        return value;\n    }\n    function depositABNBcFrom(address owner, uint256 amount)\n    external\n    override\n    onlyProvider\n    nonReentrant\n    returns (uint256 value)\n    {\n        IERC20(_certToken).safeTransferFrom(owner, address(this), amount);\n        value = _vault.depositFor(msg.sender, amount);\n        emit Deposit(msg.sender, address(_certToken), amount, 0);\n        return value;\n    }\n    function depositABNBc(uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256 value)\n    {\n        revert(\"CeRouter/Disabled\");\n        // _certToken.transferFrom(msg.sender, address(this), amount);\n        // value = _vault.depositFor(msg.sender, amount);\n        // emit Deposit(msg.sender, address(_certToken), amount, 0);\n        // return value;\n    }\n    /**\n     * CLAIM\n     */\n    // claim yields in aBNBc\n    function claim(address recipient)\n    external\n    override\n    nonReentrant\n    returns (uint256 yields)\n    {\n        yields = _vault.claimYieldsFor(msg.sender, recipient);\n        emit Claim(recipient, address(_certToken), yields);\n        return yields;\n    }\n    // claim profit in aBNBc\n    function claimProfit(address recipient) external nonReentrant {\n        uint256 profit = _profits[msg.sender];\n        require(profit > 0, \"has not got a profit\");\n        // let's check balance of CeRouter in aBNBc\n        require(\n            _certToken.balanceOf(address(this)) >= profit,\n            \"insufficient amount\"\n        );\n        IERC20(_certToken).safeTransfer(recipient, profit);\n        _profits[msg.sender] -= profit;\n        emit Claim(recipient, address(_certToken), profit);\n    }\n    /**\n     * WITHDRAWAL\n     */\n    // withdrawal in BNB via staking pool\n    /// @param recipient address to receive withdrawan BNB\n    /// @param amount in BNB to withdraw from vault\n    function withdraw(address recipient, uint256 amount)\n    external\n    override\n    onlyProvider\n    nonReentrant\n    returns (uint256 realAmount)\n    {\n        require(\n            amount >= _bnbStakingPool.getMinUnstake(),\n            \"value must be greater than min unstake amount\"\n        );\n        realAmount = _vault.withdrawFor(msg.sender, address(this), amount);\n        _bnbStakingPool.unstakeCertsFor(recipient, realAmount);\n        emit Withdrawal(msg.sender, recipient, _wBnbAddress, amount);\n        return realAmount;\n    }\n    // withdrawal aBNBc\n    /// @param recipient address to receive withdrawan aBNBc\n    /// @param amount in BNB\n    function withdrawABNBc(address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    returns (uint256 realAmount)\n    {\n        realAmount = _vault.withdrawFor(msg.sender, recipient, amount);\n        emit Withdrawal(msg.sender, recipient, address(_certToken), realAmount);\n        return realAmount;\n    }\n    function withdrawFor(address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    onlyProvider\n    returns (uint256 realAmount)\n    {\n        realAmount = _vault.withdrawFor(msg.sender, address(this), amount);\n        _bnbStakingPool.unstakeCertsFor(recipient, realAmount); // realAmount -> BNB\n        emit Withdrawal(msg.sender, recipient, _wBnbAddress, amount);\n        return realAmount;\n    }\n    // withdrawal in BNB via DEX\n    function withdrawWithSlippage(\n        address recipient,\n        uint256 amount,\n        uint256 outAmount\n    ) external override nonReentrant returns (uint256 realAmount) {\n        realAmount = _vault.withdrawFor(msg.sender, address(this), amount);\n        address[] memory path = new address[](2);\n        path[0] = address(_certToken);\n        path[1] = _wBnbAddress;\n        uint256[] memory amounts = _dex.swapExactTokensForETH(\n            realAmount,\n            outAmount,\n            path,\n            recipient,\n            block.timestamp + 300\n        );\n        emit Withdrawal(msg.sender, recipient, _wBnbAddress, amounts[1]);\n        return amounts[1];\n    }\n    function getProfitFor(address account) external view returns (uint256) {\n        return _profits[account];\n    }\n    function getYieldFor(address account) external view returns(uint256) {\n        return _vault.getYieldFor(account);\n    }\n    function getPendingWithdrawalOf(address account)\n    external\n    view\n    returns (uint256)\n    {\n        return _bnbStakingPool.getPendingUnstakesOf(account);\n    }\n    function changeVault(address vault) external onlyOwner {\n        // update allowances\n        IERC20(_certToken).safeApprove(address(_vault), 0);\n        _vault = IVault(vault);\n        IERC20(_certToken).safeApprove(address(_vault), type(uint256).max);\n        emit ChangeVault(vault);\n    }\n    function changeDex(address dex) external onlyOwner {\n        IERC20(_wBnbAddress).safeApprove(address(_dex), 0);\n        IERC20(_certToken).safeApprove(address(_dex), 0);\n        _dex = IDex(dex);\n        // update allowances\n        IERC20(_wBnbAddress).safeApprove(address(_dex), type(uint256).max);\n        IERC20(_certToken).safeApprove(address(_dex), type(uint256).max);\n        emit ChangeDex(dex);\n    }\n    function changePool(address pool) external onlyOwner {\n        // update allowances\n        IERC20(_certToken).safeApprove(address(_pool), 0);\n        _pool = IBinancePool(pool);\n        IERC20(_certToken).safeApprove(address(_pool), type(uint256).max);\n        emit ChangePool(pool);\n    }\n    function changeProvider(address provider) external onlyOwner {\n        _provider = provider;\n        emit ChangeProvider(provider);\n    }\n    function changeBNBStakingPool(address pool) external onlyOwner {\n        if (address(_bnbStakingPool) != address(0))\n            IERC20(_certToken).safeApprove(address(_bnbStakingPool), 0);\n\n        _bnbStakingPool = IBNBStakingPool(pool);\n        IERC20(_certToken).safeApprove(address(_bnbStakingPool), type(uint256).max);\n        emit ChangeBNBStakingPool(pool);\n    }\n    function getProvider() external view returns(address) {\n        return _provider;\n    }\n    function getCeToken() external view returns(address) {\n        return address(_ceToken);\n    }\n    function getWbnbAddress() external view returns(address) {\n        return _wBnbAddress;\n    }\n    function getCertToken() external view returns(address) {\n        return address(_certToken);\n    }\n    function getPoolAddress() external view returns(address) {\n        return address(_pool);\n    }\n    function getBNBStakingPoolAddress() external view returns(address) {\n        return address(_bnbStakingPool);\n    }\n    function getDexAddress() external view returns(address) {\n        return address(_dex);\n    }\n    function getVaultAddress() external view returns(address) {\n        return address(_vault);\n    }\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBNBStakingPool {\n    function stakeCerts() external payable;\n\n    function unstakeCertsFor(address receiverAddress, uint256 shares) external;\n\n    function getMinStake() external view returns (uint256);\n\n    function getMinUnstake() external view returns (uint256);\n\n    function getPendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBinancePool {\n    function stakeAndClaimCerts() external payable;\n\n    function unstakeCertsFor(address recipient, uint256 shares) external;\n\n    function getMinimumStake() external view returns (uint256);\n\n    function getRelayerFee() external view returns (uint256);\n\n    function pendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface ICerosRouter {\n    /**\n     * Events\n     */\n\n    event Deposit(\n        address indexed account,\n        address indexed token,\n        uint256 amount,\n        uint256 profit\n    );\n\n    event Claim(\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event Withdrawal(\n        address indexed owner,\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event ChangeVault(address vault);\n\n    event ChangeDex(address dex);\n\n    event ChangePool(address pool);\n\n    event ChangeBNBStakingPool(address pool);\n\n    event ChangeDao(address dao);\n\n    event ChangeCeToken(address ceToken);\n\n    event ChangeCeTokenJoin(address ceTokenJoin);\n\n    event ChangeCertToken(address certToken);\n\n    event ChangeCollateralToken(address collateralToken);\n\n    event ChangeProvider(address provider);\n\n    /**\n     * Methods\n     */\n\n    /**\n     * Deposit\n     */\n\n    // in BNB\n    function deposit() external payable returns (uint256);\n\n    // in aBNBc\n    function depositABNBcFrom(address owner, uint256 amount)\n    external\n    returns (uint256);\n\n    function depositABNBc(uint256 amount) external returns (uint256);\n\n    /**\n     * Claim\n     */\n\n    // claim in aBNBc\n    function claim(address recipient) external returns (uint256);\n\n    function claimProfit(address recipient) external;\n\n    /**\n     * Withdrawal\n     */\n\n    // BNB\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawWithSlippage(\n        address recipient,\n        uint256 amount,\n        uint256 slippage\n    ) external returns (uint256);\n\n    // aBNBc\n    function withdrawABNBc(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    function getProfitFor(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns(uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.2;\n\ninterface IDex {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapTokensForExactTokens(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function quote(\n        uint256 amountA,\n        uint256 reserveA,\n        uint256 reserveB\n    ) external pure returns (uint256 amountB);\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountOut);\n\n    function getAmountIn(\n        uint256 amountOut,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountIn);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\ninterface IVault {\n    /**\n     * Events\n     */\n    event Deposited(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Claimed(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Withdrawn(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event RouterChanged(address router);\n    event CeTokenChanged(address oldToken, address newToken);\n    /**\n     * Methods\n     */\n    event RatioUpdated(uint256 currentRatio);\n    function deposit(uint256 amount) external returns (uint256);\n    function depositFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function claimYields(address recipient) external returns (uint256);\n    function claimYieldsFor(address owner, address recipient)\n    external\n    returns (uint256);\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function withdrawFor(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256);\n    function getPrincipalOf(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns (uint256);\n    function getTotalAmountInVault() external view returns (uint256);\n    function getCeTokenBalanceOf(address account) external view returns (uint256);\n    function getDepositOf(address account) external view returns (uint256);\n    function getClaimedOf(address account) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "51",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF7 0xD3 DUP7 LOG1 0xE0 DUP16 PUSH31 0x27F98665828FB38A99BE70FF3899B87EAA947DB0DBA0313764736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF7 0xD3 DUP7 LOG1 0xE0 DUP16 PUSH31 0x27F98665828FB38A99BE70FF3899B87EAA947DB0DBA0313764736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2f7d386a1e08f7e27f98665828fb38a99be70ff3899b87eaa947db0dba0313764736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH6 0x3BE51346B1E7 0xE1 0x2F 0xB5 DUP2 0xB1 0xEF SELFBALANCE GASLIMIT 0xCC 0xEE DUP13 PUSH22 0xA7EC388D271915E99B4442F64736F6C634300080A00 CALLER ",
							"sourceMap": "707:3748:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH6 0x3BE51346B1E7 0xE1 0x2F 0xB5 DUP2 0xB1 0xEF SELFBALANCE GASLIMIT 0xCC 0xEE DUP13 PUSH22 0xA7EC388D271915E99B4442F64736F6C634300080A00 CALLER ",
							"sourceMap": "707:3748:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013653be51346b1e7e12fb581b1ef4745ccee8c750a7ec388d271915e99b4442f64736f6c634300080a0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SSTORE SWAP10 0xF9 CALLVALUE 0xEB 0x24 RETURNDATACOPY PUSH1 0xCF SMOD 0xC3 0xE EXP PUSH6 0xA1CF4679645A 0x4F 0xCE DUP12 0xB2 0xD4 PUSH23 0x348442187664736F6C634300080A003300000000000000 ",
							"sourceMap": "194:8964:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SSTORE SWAP10 0xF9 CALLVALUE 0xEB 0x24 RETURNDATACOPY PUSH1 0xCF SMOD 0xC3 0xE EXP PUSH6 0xA1CF4679645A 0x4F 0xCE DUP12 0xB2 0xD4 PUSH23 0x348442187664736F6C634300080A003300000000000000 ",
							"sourceMap": "194:8964:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b15599f934eb243e60cf07c30e0a65a1cf4679645a4fce8bb2d476348442187664736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/CerosRouter.sol": {
				"CerosRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceTokenJoin",
									"type": "address"
								}
							],
							"name": "ChangeCeTokenJoin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								}
							],
							"name": "ChangeCertToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "ChangeDex",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ChangeProvider",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "ChangeVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "changeBNBStakingPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "changeDex",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "changePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "changeProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "changeVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "yields",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBcFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBNBStakingPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCeToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCertToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDexAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPendingWithdrawalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getProfitFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVaultAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWbnbAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "wBnbToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "bondToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dexAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawWithSlippage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "in BNB to withdraw from vault",
									"recipient": "address to receive withdrawan BNB"
								}
							},
							"withdrawABNBc(address,uint256)": {
								"params": {
									"amount": "in BNB",
									"recipient": "address to receive withdrawan aBNBc"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":657:11075  contract CerosRouter is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":657:11075  contract CerosRouter is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x796f69aa\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xac78467c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdb518db2\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdb518db2\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf586c6d9\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0xac78467c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbcdef0a4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc0ab44f6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x97fd9be7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xab43c3df\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xab89b6af\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x796f69aa\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7c0a75e5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x854cf3cf\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x483d45bd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x665a21db\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x665a21db\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x69d2da9c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6eecfdaa\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x483d45bd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x60e232a9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x65cacaa4\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x223888c1\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x223888c1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x35876476\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3af82c59\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4339bc30\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x03550d56\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0c632bbe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e83409a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6862:7187  function withdrawABNBc(address recipient, uint256 amount)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10358:10452  function getCeToken() external view returns(address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5215:5478  function claim(address recipient)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8445:8565  function getYieldFor(address account) external view returns(uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1432:2303  function initialize(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9890:10261  function changeBNBStakingPool(address pool) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9453:9743  function changePool(address pool) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10266:10353  function getProvider() external view returns(address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8741:9033  function changeVault(address vault) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10976:11073  function getVaultAddress() external view returns(address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10457:10550  function getWbnbAddress() external view returns(address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9038:9448  function changeDex(address dex) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10555:10653  function getCertToken() external view returns(address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9748:9885  function changeProvider(address provider) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4772:5152  function depositABNBc(uint256 amount)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10878:10971  function getDexAddress() external view returns(address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10758:10873  function getBNBStakingPoolAddress() external view returns(address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7648:8323  function withdrawWithSlippage(... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8570:8736  function getPendingWithdrawalOf(address account)... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8328:8440  function getProfitFor(address account) external view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4393:4767  function depositABNBcFrom(address owner, uint256 amount)... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5512:6014  function claimProfit(address recipient) external nonReentrant {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2339:4388  function deposit()... */\n    tag_27:\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7192:7610  function withdrawFor(address recipient, uint256 amount)... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n    tag_163:\n      stop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6206:6743  function withdraw(address recipient, uint256 amount)... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10658:10753  function getPoolAddress() external view returns(address) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6862:7187  function withdrawABNBc(address recipient, uint256 amount)... */\n    tag_43:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6976:6994  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7023:7029  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7023:7041  _vault.withdrawFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f1d9267\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7042:7052  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7054:7063  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7065:7071  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7023:7072  _vault.withdrawFor(msg.sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7010:7072  realAmount = _vault.withdrawFor(msg.sender, recipient, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7129:7139  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7087:7153  Withdrawal(msg.sender, recipient, address(_certToken), realAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7110:7119  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7087:7153  Withdrawal(msg.sender, recipient, address(_certToken), realAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7098:7108  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7087:7153  Withdrawal(msg.sender, recipient, address(_certToken), realAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7142:7152  realAmount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7087:7153  Withdrawal(msg.sender, recipient, address(_certToken), realAmount) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6862:7187  function withdrawABNBc(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10358:10452  function getCeToken() external view returns(address) {... */\n    tag_48:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10402:10409  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10436:10444  _ceToken */\n      0xce\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10421:10445  return address(_ceToken) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10358:10452  function getCeToken() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5215:5478  function claim(address recipient)... */\n    tag_55:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5305:5319  uint256 yields */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_178\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5344:5350  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5344:5365  _vault.claimYieldsFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1101596c\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5366:5376  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5378:5387  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5344:5388  _vault.claimYieldsFor(msg.sender, recipient) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_196:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5335:5388  yields = _vault.claimYieldsFor(msg.sender, recipient) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5428:5438  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5403:5448  Claim(recipient, address(_certToken), yields) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5409:5418  recipient */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5403:5448  Claim(recipient, address(_certToken), yields) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5441:5447  yields */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5403:5448  Claim(recipient, address(_certToken), yields) */\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5215:5478  function claim(address recipient)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8445:8565  function getYieldFor(address account) external view returns(uint256) {... */\n    tag_60:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8505:8512  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8531:8537  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8531:8549  _vault.getYieldFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x223888c1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8550:8557  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8531:8558  _vault.getYieldFor(account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_202:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8524:8558  return _vault.getYieldFor(account) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8445:8565  function getYieldFor(address account) external view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1432:2303  function initialize(... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3147  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3193  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3264  AddressUpgradeable.isContract(address(this)) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3249  AddressUpgradeable.isContract */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3220:3264  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3264  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3284:3285  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3398:3412  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3444:3448  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_212:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1666:1682  __Ownable_init() */\n      tag_214\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1666:1680  __Ownable_init */\n      tag_215\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1666:1682  __Ownable_init() */\n      jump\t// in\n    tag_214:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1692:1709  __Pausable_init() */\n      tag_216\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1692:1707  __Pausable_init */\n      tag_217\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1692:1709  __Pausable_init() */\n      jump\t// in\n    tag_216:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1719:1743  __ReentrancyGuard_init() */\n      tag_218\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1719:1741  __ReentrancyGuard_init */\n      tag_219\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1719:1743  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_218:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1777:1786  certToken */\n      dup8\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1753:1763  _certToken */\n      0xcc\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1753:1787  _certToken = ICertToken(certToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1812:1821  wBnbToken */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1797:1809  _wBnbAddress */\n      0xcd\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1797:1821  _wBnbAddress = wBnbToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1849:1856  ceToken */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1831:1839  _ceToken */\n      0xce\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1831:1857  _ceToken = IERC20(ceToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1883:1888  vault */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1867:1873  _vault */\n      0xc9\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1867:1889  _vault = IVault(vault) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1911:1921  dexAddress */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1899:1903  _dex */\n      0xca\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1899:1922  _dex = IDex(dexAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1953:1957  pool */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1932:1937  _pool */\n      0xcb\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1932:1958  _pool = IBinancePool(pool) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1968:2028  IERC20(wBnbToken).safeApprove(dexAddress, type(uint256).max) */\n      tag_220\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1998:2008  dexAddress */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2010:2027  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1975:1984  wBnbToken */\n      dup10\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1968:1997  IERC20(wBnbToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1968:2028  IERC20(wBnbToken).safeApprove(dexAddress, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2038:2098  IERC20(certToken).safeApprove(dexAddress, type(uint256).max) */\n      tag_222\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2068:2078  dexAddress */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2080:2097  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2045:2054  certToken */\n      dup11\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2038:2067  IERC20(certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2038:2098  IERC20(certToken).safeApprove(dexAddress, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2108:2167  IERC20(certToken).safeApprove(bondToken, type(uint256).max) */\n      tag_223\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2138:2147  bondToken */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2149:2166  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2115:2124  certToken */\n      dup11\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2108:2137  IERC20(certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2108:2167  IERC20(certToken).safeApprove(bondToken, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2177:2231  IERC20(certToken).safeApprove(pool, type(uint256).max) */\n      tag_224\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2207:2211  pool */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2213:2230  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2184:2193  certToken */\n      dup11\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2177:2206  IERC20(certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2177:2231  IERC20(certToken).safeApprove(pool, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2241:2296  IERC20(certToken).safeApprove(vault, type(uint256).max) */\n      tag_225\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2271:2276  vault */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2278:2295  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2248:2257  certToken */\n      dup11\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2241:2270  IERC20(certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2241:2296  IERC20(certToken).safeApprove(vault, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3526  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3565:3566  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1432:2303  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9890:10261  function changeBNBStakingPool(address pool) external onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10003:10004  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9967:10005  address(_bnbStakingPool) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9975:9990  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9967:10005  address(_bnbStakingPool) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9963:10078  if (address(_bnbStakingPool) != address(0))... */\n      tag_233\n      jumpi\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10019:10078  IERC20(_certToken).safeApprove(address(_bnbStakingPool), 0) */\n      tag_234\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10058:10073  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10076:10077  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10026:10036  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10019:10049  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10019:10078  IERC20(_certToken).safeApprove(address(_bnbStakingPool), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9963:10078  if (address(_bnbStakingPool) != address(0))... */\n    tag_233:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10123:10127  pool */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10089:10104  _bnbStakingPool */\n      0xd1\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10089:10128  _bnbStakingPool = IBNBStakingPool(pool) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10138:10213  IERC20(_certToken).safeApprove(address(_bnbStakingPool), type(uint256).max) */\n      tag_235\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10177:10192  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10195:10212  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10145:10155  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10138:10168  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10138:10213  IERC20(_certToken).safeApprove(address(_bnbStakingPool), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10228:10254  ChangeBNBStakingPool(pool) */\n      0xc7c1b39b4c8950340ee2ddc449a99e16d5e090b420db2e99160d82a9ff5580d9\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10249:10253  pool */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10228:10254  ChangeBNBStakingPool(pool) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9890:10261  function changeBNBStakingPool(address pool) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9453:9743  function changePool(address pool) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9545:9594  IERC20(_certToken).safeApprove(address(_pool), 0) */\n      tag_240\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9584:9589  _pool */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9592:9593  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9552:9562  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9545:9575  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9545:9594  IERC20(_certToken).safeApprove(address(_pool), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9625:9629  pool */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9604:9609  _pool */\n      0xcb\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9604:9630  _pool = IBinancePool(pool) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9640:9705  IERC20(_certToken).safeApprove(address(_pool), type(uint256).max) */\n      tag_241\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9679:9684  _pool */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9687:9704  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9647:9657  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9640:9670  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9640:9705  IERC20(_certToken).safeApprove(address(_pool), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9720:9736  ChangePool(pool) */\n      0x79025dab199855650264c602de305dcf5c292b8e5b4470ef271724a79d0343f4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9731:9735  pool */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9720:9736  ChangePool(pool) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9453:9743  function changePool(address pool) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10266:10353  function getProvider() external view returns(address) {... */\n    tag_77:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10311:10318  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10337:10346  _provider */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10330:10346  return _provider */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10266:10353  function getProvider() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1905:1909  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1921:1935  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8741:9033  function changeVault(address vault) external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8835:8885  IERC20(_certToken).safeApprove(address(_vault), 0) */\n      tag_248\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8874:8880  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8883:8884  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8842:8852  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8835:8865  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8835:8885  IERC20(_certToken).safeApprove(address(_vault), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8911:8916  vault */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8895:8901  _vault */\n      0xc9\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8895:8917  _vault = IVault(vault) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8927:8993  IERC20(_certToken).safeApprove(address(_vault), type(uint256).max) */\n      tag_249\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8966:8972  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8975:8992  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8934:8944  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8927:8957  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8927:8993  IERC20(_certToken).safeApprove(address(_vault), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9008:9026  ChangeVault(vault) */\n      0x646d70535c6b451b92021874a72abd441f122ba1c0b8f24d074352bd169fad3f\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9020:9025  vault */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9008:9026  ChangeVault(vault) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8741:9033  function changeVault(address vault) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10976:11073  function getVaultAddress() external view returns(address) {... */\n    tag_90:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":11025:11032  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":11059:11065  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":11044:11066  return address(_vault) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10976:11073  function getVaultAddress() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10457:10550  function getWbnbAddress() external view returns(address) {... */\n    tag_94:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10505:10512  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10531:10543  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10524:10543  return _wBnbAddress */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10457:10550  function getWbnbAddress() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9038:9448  function changeDex(address dex) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9099:9149  IERC20(_wBnbAddress).safeApprove(address(_dex), 0) */\n      tag_256\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9140:9144  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9147:9148  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9106:9118  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9099:9131  IERC20(_wBnbAddress).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9099:9149  IERC20(_wBnbAddress).safeApprove(address(_dex), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9159:9207  IERC20(_certToken).safeApprove(address(_dex), 0) */\n      tag_257\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9198:9202  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9205:9206  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9166:9176  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9159:9189  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9159:9207  IERC20(_certToken).safeApprove(address(_dex), 0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9229:9232  dex */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9217:9221  _dex */\n      0xca\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9217:9233  _dex = IDex(dex) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9272:9338  IERC20(_wBnbAddress).safeApprove(address(_dex), type(uint256).max) */\n      tag_258\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9313:9317  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9320:9337  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9279:9291  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9272:9304  IERC20(_wBnbAddress).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9272:9338  IERC20(_wBnbAddress).safeApprove(address(_dex), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9348:9412  IERC20(_certToken).safeApprove(address(_dex), type(uint256).max) */\n      tag_259\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9387:9391  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9394:9411  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9355:9365  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9348:9378  IERC20(_certToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_221\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9348:9412  IERC20(_certToken).safeApprove(address(_dex), type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9427:9441  ChangeDex(dex) */\n      0x90252124b346c6d6c466196d470d708d0c0c7026fe5ba62a2e01b5adbf39e279\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9437:9440  dex */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9427:9441  ChangeDex(dex) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9038:9448  function changeDex(address dex) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10555:10653  function getCertToken() external view returns(address) {... */\n    tag_102:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10601:10608  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10635:10645  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10620:10646  return address(_certToken) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10555:10653  function getCertToken() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9748:9885  function changeProvider(address provider) external onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_268:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9831:9839  provider */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9819:9828  _provider */\n      0xd0\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9819:9839  _provider = provider */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9854:9878  ChangeProvider(provider) */\n      0x9a33114b94f1c4c094352deff0082e220c977361e70d556dfb5565ad4678ce4d\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9869:9877  provider */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9854:9878  ChangeProvider(provider) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":9748:9885  function changeProvider(address provider) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4772:5152  function depositABNBc(uint256 amount)... */\n    tag_115:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4866:4879  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_178\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4895:4922  revert(\"CeRouter/Disabled\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10878:10971  function getDexAddress() external view returns(address) {... */\n    tag_119:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10925:10932  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10959:10963  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10944:10964  return address(_dex) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10878:10971  function getDexAddress() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1487:1494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1519  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10758:10873  function getBNBStakingPoolAddress() external view returns(address) {... */\n    tag_127:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10816:10823  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10850:10865  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10835:10866  return address(_bnbStakingPool) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10758:10873  function getBNBStakingPoolAddress() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7648:8323  function withdrawWithSlippage(... */\n    tag_133:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7802:7820  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_178\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7845:7851  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7845:7863  _vault.withdrawFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f1d9267\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7864:7874  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7884:7888  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7891:7897  amount */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7845:7898  _vault.withdrawFor(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_287:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7832:7898  realAmount = _vault.withdrawFor(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7908:7929  address[] memory path */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7946:7947  2 */\n      0x02\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7932:7948  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_288\n      jumpi\n      tag_289\n      tag_290\n      jump\t// in\n    tag_289:\n    tag_288:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_291\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_291:\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7908:7948  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7976:7986  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7958:7962  path */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7963:7964  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7958:7965  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_294\n      jump\t// in\n    tag_293:\n    tag_292:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7958:7987  path[0] = address(_certToken) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8007:8019  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7997:8001  path */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8002:8003  1 */\n      0x01\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7997:8004  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_296\n      tag_294\n      jump\t// in\n    tag_296:\n    tag_295:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7997:8019  path[1] = _wBnbAddress */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8029:8053  uint256[] memory amounts */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8056:8060  _dex */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8056:8082  _dex.swapExactTokensForETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18cbafe5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8096:8106  realAmount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8120:8129  outAmount */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8143:8147  path */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8161:8170  recipient */\n      dup11\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8202:8205  300 */\n      0x012c\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8184:8199  block.timestamp */\n      timestamp\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8184:8205  block.timestamp + 300 */\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8056:8215  _dex.swapExactTokensForETH(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_302\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8029:8215  uint256[] memory amounts = _dex.swapExactTokensForETH(... */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8264:8276  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8230:8289  Withdrawal(msg.sender, recipient, _wBnbAddress, amounts[1]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8253:8262  recipient */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8230:8289  Withdrawal(msg.sender, recipient, _wBnbAddress, amounts[1]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8241:8251  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8230:8289  Withdrawal(msg.sender, recipient, _wBnbAddress, amounts[1]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8278:8285  amounts */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8286:8287  1 */\n      0x01\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8278:8288  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_306\n      tag_294\n      jump\t// in\n    tag_306:\n    tag_305:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8230:8289  Withdrawal(msg.sender, recipient, _wBnbAddress, amounts[1]) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8306:8313  amounts */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8314:8315  1 */\n      0x01\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8306:8316  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_309\n      tag_294\n      jump\t// in\n    tag_309:\n    tag_308:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8299:8316  return amounts[1] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7648:8323  function withdrawWithSlippage(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8570:8736  function getPendingWithdrawalOf(address account)... */\n    tag_138:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8654:8661  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8684:8699  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8684:8720  _bnbStakingPool.getPendingUnstakesOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x46faa33c\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8721:8728  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8684:8729  _bnbStakingPool.getPendingUnstakesOf(account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_311:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_314:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8677:8729  return _bnbStakingPool.getPendingUnstakesOf(account) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8570:8736  function getPendingWithdrawalOf(address account)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8328:8440  function getProfitFor(address account) external view returns (uint256) {... */\n    tag_143:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8390:8397  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8416:8424  _profits */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8416:8433  _profits[account] */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8425:8432  account */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8416:8433  _profits[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8409:8433  return _profits[account] */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":8328:8440  function getProfitFor(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4393:4767  function depositABNBcFrom(address owner, uint256 amount)... */\n    tag_148:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4523:4536  uint256 value */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      tag_317\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1333  owner */\n      tag_123\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_317:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1324  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n      dup1\n      tag_318\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1353:1362  _provider */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1349  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n    tag_318:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1293:1409  require(... */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_178\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4552:4617  IERC20(_certToken).safeTransferFrom(owner, address(this), amount) */\n      tag_326\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4588:4593  owner */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4603:4607  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4610:4616  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4559:4569  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4552:4587  IERC20(_certToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_327\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4552:4617  IERC20(_certToken).safeTransferFrom(owner, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_326:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4635:4641  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4635:4652  _vault.depositFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f4f21e2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4653:4663  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4665:4671  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4635:4672  _vault.depositFor(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_331:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_332\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_332:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4627:4672  value = _vault.depositFor(msg.sender, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4715:4725  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4687:4738  Deposit(msg.sender, address(_certToken), amount, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4695:4705  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4687:4738  Deposit(msg.sender, address(_certToken), amount, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4728:4734  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4736:4737  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4687:4738  Deposit(msg.sender, address(_certToken), amount, 0) */\n      mload(0x40)\n      tag_333\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4393:4767  function depositABNBcFrom(address owner, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5512:6014  function claimProfit(address recipient) external nonReentrant {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_178\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5584:5598  uint256 profit */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5601:5609  _profits */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5601:5621  _profits[msg.sender] */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5610:5620  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5601:5621  _profits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5584:5621  uint256 profit = _profits[msg.sender] */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5648:5649  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5639:5645  profit */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5639:5649  profit > 0 */\n      gt\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5631:5674  require(profit > 0, \"has not got a profit\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5796:5802  profit */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5757:5767  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5757:5777  _certToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5786:5790  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5757:5792  _certToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_342:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_345\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_345:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5757:5802  _certToken.balanceOf(address(this)) >= profit */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5736:5847  require(... */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5857:5907  IERC20(_certToken).safeTransfer(recipient, profit) */\n      tag_349\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5889:5898  recipient */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5900:5906  profit */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5864:5874  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5857:5888  IERC20(_certToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_350\n      swap1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5857:5907  IERC20(_certToken).safeTransfer(recipient, profit) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_349:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5941:5947  profit */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5917:5925  _profits */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5917:5937  _profits[msg.sender] */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5926:5936  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5917:5937  _profits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5917:5947  _profits[msg.sender] -= profit */\n      dup3\n      dup3\n      sload\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5987:5997  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5962:6007  Claim(recipient, address(_certToken), profit) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5968:5977  recipient */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5962:6007  Claim(recipient, address(_certToken), profit) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6000:6006  profit */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5962:6007  Claim(recipient, address(_certToken), profit) */\n      mload(0x40)\n      tag_353\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5574:6014  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":5512:6014  function claimProfit(address recipient) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2339:4388  function deposit()... */\n    tag_155:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2443:2456  uint256 value */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      tag_355\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1333  owner */\n      tag_123\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_355:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1324  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n      dup1\n      tag_356\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1353:1362  _provider */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1349  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n    tag_356:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1293:1409  require(... */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_321\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap1\n      tag_178\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2472:2486  uint256 amount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2489:2498  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2472:2498  uint256 amount = msg.value */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2968:2988  uint256 minimumStake */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2991:3006  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2991:3018  _bnbStakingPool.getMinStake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56a3b5fa\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2991:3020  _bnbStakingPool.getMinStake() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_365\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_365:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2968:3020  uint256 minimumStake = _bnbStakingPool.getMinStake() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3030:3044  uint256 shares */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3068:3080  minimumStake */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3058:3064  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3058:3080  amount >= minimumStake */\n      lt\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3054:3148  if (amount >= minimumStake) {... */\n      tag_366\n      jumpi\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3105:3115  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3105:3129  _certToken.bondsToShares */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x53616373\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3130:3136  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3105:3137  _certToken.bondsToShares(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_367:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_370\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_370:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3096:3137  shares = _certToken.bondsToShares(amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3054:3148  if (amount >= minimumStake) {... */\n    tag_366:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3325:3343  uint256 realAmount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3353:3367  uint256 profit */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3391:3392  0 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3381:3387  shares */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3381:3392  shares >= 0 */\n      lt\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3377:3919  if (shares >= 0) {... */\n      tag_371\n      jumpi\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3421:3427  shares */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3408:3427  realAmount = shares */\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3441:3456  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3441:3467  _bnbStakingPool.stakeCerts */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xac76d450\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3475:3481  amount */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3441:3484  _bnbStakingPool.stakeCerts{value: amount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_372\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_372:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_374\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_374:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3377:3919  if (shares >= 0) {... */\n      jump(tag_375)\n    tag_371:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3515:3537  revert(\"DEX DISABLED\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3377:3919  if (shares >= 0) {... */\n    tag_375:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4040:4050  realAmount */\n      dup2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4001:4011  _certToken */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4001:4021  _certToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4030:4034  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4001:4036  _certToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_378:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_380:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_381\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_381:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4001:4050  _certToken.balanceOf(address(this)) >= realAmount */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":3980:4124  require(... */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4208:4214  profit */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4184:4192  _profits */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4184:4204  _profits[msg.sender] */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4193:4203  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4184:4204  _profits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4184:4214  _profits[msg.sender] += profit */\n      dup3\n      dup3\n      sload\n      tag_385\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_385:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4232:4238  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4232:4249  _vault.depositFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f4f21e2\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4250:4260  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4275:4281  profit */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4262:4272  realAmount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4262:4281  realAmount - profit */\n      tag_386\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_386:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4232:4282  _vault.depositFor(msg.sender, realAmount - profit) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_387:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_389\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_389:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_390\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_390:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4224:4282  value = _vault.depositFor(msg.sender, realAmount - profit) */\n      swap6\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4317:4329  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4297:4359  Deposit(msg.sender, _wBnbAddress, realAmount - profit, profit) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4305:4315  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4297:4359  Deposit(msg.sender, _wBnbAddress, realAmount - profit, profit) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4344:4350  profit */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4331:4341  realAmount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4331:4350  realAmount - profit */\n      tag_391\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_391:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4352:4358  profit */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4297:4359  Deposit(msg.sender, _wBnbAddress, realAmount - profit, profit) */\n      mload(0x40)\n      tag_392\n      swap3\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":4369:4381  return value */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":2339:4388  function deposit()... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7192:7610  function withdrawFor(address recipient, uint256 amount)... */\n    tag_160:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7321:7339  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap1\n      tag_178\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      tag_398\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1333  owner */\n      tag_123\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_398:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1324  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n      dup1\n      tag_399\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1353:1362  _provider */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1349  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n    tag_399:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1293:1409  require(... */\n      tag_400\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap1\n      tag_321\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_400:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7368:7374  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7368:7386  _vault.withdrawFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f1d9267\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7387:7397  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7407:7411  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7414:7420  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7368:7421  _vault.withdrawFor(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_403:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_405\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_405:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_406\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_406:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7355:7421  realAmount = _vault.withdrawFor(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7431:7446  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7431:7462  _bnbStakingPool.unstakeCertsFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x81782dff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7463:7472  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7474:7484  realAmount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7431:7485  _bnbStakingPool.unstakeCertsFor(recipient, realAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_407\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_407:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_408\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_408:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_410\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_410:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7555:7567  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7521:7576  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7544:7553  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7521:7576  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7532:7542  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7521:7576  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7569:7575  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7521:7576  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      mload(0x40)\n      tag_411\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":7192:7610  function withdrawFor(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2429:2430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2417  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6206:6743  function withdraw(address recipient, uint256 amount)... */\n    tag_169:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6332:6350  uint256 realAmount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      tag_420\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1333  owner */\n      tag_123\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_420:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1324  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1335  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n      dup1\n      tag_421\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1353:1362  _provider */\n      0xd0\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1349  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1339:1362  msg.sender == _provider */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1314:1362  msg.sender == owner() || msg.sender == _provider */\n    tag_421:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":1293:1409  require(... */\n      tag_422\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_423\n      swap1\n      tag_321\n      jump\t// in\n    tag_423:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap1\n      tag_178\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6397:6412  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6397:6426  _bnbStakingPool.getMinUnstake */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x034c4454\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6397:6428  _bnbStakingPool.getMinUnstake() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_429\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_429:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_430\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_430:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6387:6393  amount */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6387:6428  amount >= _bnbStakingPool.getMinUnstake() */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6366:6499  require(... */\n      tag_431\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_431:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6522:6528  _vault */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6522:6540  _vault.withdrawFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f1d9267\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6541:6551  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6561:6565  this */\n      address\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6568:6574  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6522:6575  _vault.withdrawFor(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_434\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_434:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_437:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6509:6575  realAmount = _vault.withdrawFor(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6585:6600  _bnbStakingPool */\n      0xd1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6585:6616  _bnbStakingPool.unstakeCertsFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x81782dff\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6617:6626  recipient */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6628:6638  realAmount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6585:6639  _bnbStakingPool.unstakeCertsFor(recipient, realAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_438:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_439:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_441\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_441:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6688:6700  _wBnbAddress */\n      0xcd\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6654:6709  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6677:6686  recipient */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6654:6709  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6665:6675  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6654:6709  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6702:6708  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6654:6709  Withdrawal(msg.sender, recipient, _wBnbAddress, amount) */\n      mload(0x40)\n      tag_442\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":6206:6743  function withdraw(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10658:10753  function getPoolAddress() external view returns(address) {... */\n    tag_173:\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10706:10713  address */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10740:10745  _pool */\n      0xcb\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10725:10746  return address(_pool) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/CerosRouter.sol\":10658:10753  function getPoolAddress() external view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1246:1250  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1483  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1469:1499  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_450\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_453\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_454\n      swap1\n      tag_448\n      jump\t// in\n    tag_454:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_453:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      tag_456\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1151  __Pausable_init_unchained */\n      tag_457\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      jump\t// in\n    tag_456:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_459\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_460\n      swap1\n      tag_448\n      jump\t// in\n    tag_460:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_459:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_462\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_462:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1835  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1840  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_465\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1889:1890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1851  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1861  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1870:1874  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1877:1884  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1885  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_466\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_466:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_468\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_468:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_469\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1890  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_465:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1808:1971  require(... */\n      tag_470\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_471\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_470:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_473\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2001:2006  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2031:2053  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2055:2062  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2064:2069  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2008:2070  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_474\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_474:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2000  _callOptionalReturn */\n      tag_475\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_473:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      tag_477\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1683  _msgSender */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      jump\t// in\n    tag_477:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_479\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_479:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_480\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_481\n      swap1\n      tag_482\n      jump\t// in\n    tag_481:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2771  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2798  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2787  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2844:2852  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2834:2842  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_485\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_486\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_486:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_475\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_485:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_488\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_489\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_489:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_475\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_488:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_491\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_492\n      swap1\n      tag_448\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_491:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_494\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      tag_495\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1205  _msgSender */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_497\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_498\n      swap1\n      tag_448\n      jump\t// in\n    tag_498:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_497:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1249:1254  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1246  _paused */\n      0x65\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1254  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_501\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_502\n      swap1\n      tag_448\n      jump\t// in\n    tag_502:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_501:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2057  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2072  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_475:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_505\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_506\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_505:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_507\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_508\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_510\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_511\n      swap1\n      tag_512\n      jump\t// in\n    tag_511:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_510:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_507:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_506:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_515\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_516\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_515:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_516:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_518\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_519\n      swap1\n      tag_520\n      jump\t// in\n    tag_519:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_518:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_521\n      swap2\n      swap1\n      tag_522\n      jump\t// in\n    tag_521:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_525\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_524)\n    tag_525:\n      0x60\n      swap2\n      pop\n    tag_524:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_526\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_527\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_526:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_527:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_529\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      iszero\n      tag_530\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_531\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_532\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_533\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_534\n      swap1\n      tag_535\n      jump\t// in\n    tag_534:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_533:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_528)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_529:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_537\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_538\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_537:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_528:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_532:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_538:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_541\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_541:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_543\n      swap2\n      swap1\n      tag_544\n      jump\t// in\n    tag_543:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_545:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_546:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_547:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_548:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_549:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_631\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_548\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_550:\n        /* \"#utility.yul\":641:665   */\n      tag_633\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_549\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_634\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_634:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_551:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_636\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_550\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_552:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_553:\n        /* \"#utility.yul\":997:1021   */\n      tag_639\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_552\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_640\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_640:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_554:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_642\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_553\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_42:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_645\n      tag_546\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":1290:1409   */\n    tag_644:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_646\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_551\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_647\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_554\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_555:\n        /* \"#utility.yul\":1764:1788   */\n      tag_649\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_552\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_45:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_651\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_555\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2147   */\n    tag_556:\n        /* \"#utility.yul\":2116:2140   */\n      tag_653\n        /* \"#utility.yul\":2134:2139   */\n      dup2\n        /* \"#utility.yul\":2116:2140   */\n      tag_549\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":2111:2114   */\n      dup3\n        /* \"#utility.yul\":2104:2141   */\n      mstore\n        /* \"#utility.yul\":2029:2147   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2153:2375   */\n    tag_50:\n        /* \"#utility.yul\":2246:2250   */\n      0x00\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup3\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2261:2287   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2368   */\n      tag_655\n        /* \"#utility.yul\":2365:2366   */\n      0x00\n        /* \"#utility.yul\":2354:2363   */\n      dup4\n        /* \"#utility.yul\":2350:2367   */\n      add\n        /* \"#utility.yul\":2341:2347   */\n      dup5\n        /* \"#utility.yul\":2297:2368   */\n      tag_556\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":2153:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2710   */\n    tag_54:\n        /* \"#utility.yul\":2440:2446   */\n      0x00\n        /* \"#utility.yul\":2489:2491   */\n      0x20\n        /* \"#utility.yul\":2477:2486   */\n      dup3\n        /* \"#utility.yul\":2468:2475   */\n      dup5\n        /* \"#utility.yul\":2464:2487   */\n      sub\n        /* \"#utility.yul\":2460:2492   */\n      slt\n        /* \"#utility.yul\":2457:2576   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":2495:2574   */\n      tag_658\n      tag_546\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":2457:2576   */\n    tag_657:\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2640:2693   */\n      tag_659\n        /* \"#utility.yul\":2685:2692   */\n      dup5\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2665:2674   */\n      dup6\n        /* \"#utility.yul\":2661:2683   */\n      add\n        /* \"#utility.yul\":2640:2693   */\n      tag_551\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":2630:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2586:2703   */\n      pop\n        /* \"#utility.yul\":2381:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3919   */\n    tag_65:\n        /* \"#utility.yul\":2829:2835   */\n      0x00\n        /* \"#utility.yul\":2837:2843   */\n      dup1\n        /* \"#utility.yul\":2845:2851   */\n      0x00\n        /* \"#utility.yul\":2853:2859   */\n      dup1\n        /* \"#utility.yul\":2861:2867   */\n      0x00\n        /* \"#utility.yul\":2869:2875   */\n      dup1\n        /* \"#utility.yul\":2877:2883   */\n      0x00\n        /* \"#utility.yul\":2926:2929   */\n      0xe0\n        /* \"#utility.yul\":2914:2923   */\n      dup9\n        /* \"#utility.yul\":2905:2912   */\n      dup11\n        /* \"#utility.yul\":2901:2924   */\n      sub\n        /* \"#utility.yul\":2897:2930   */\n      slt\n        /* \"#utility.yul\":2894:3014   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":2933:3012   */\n      tag_662\n      tag_546\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":2894:3014   */\n    tag_661:\n        /* \"#utility.yul\":3053:3054   */\n      0x00\n        /* \"#utility.yul\":3078:3131   */\n      tag_663\n        /* \"#utility.yul\":3123:3130   */\n      dup11\n        /* \"#utility.yul\":3114:3120   */\n      dup3\n        /* \"#utility.yul\":3103:3112   */\n      dup12\n        /* \"#utility.yul\":3099:3121   */\n      add\n        /* \"#utility.yul\":3078:3131   */\n      tag_551\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":3068:3131   */\n      swap8\n      pop\n        /* \"#utility.yul\":3024:3141   */\n      pop\n        /* \"#utility.yul\":3180:3182   */\n      0x20\n        /* \"#utility.yul\":3206:3259   */\n      tag_664\n        /* \"#utility.yul\":3251:3258   */\n      dup11\n        /* \"#utility.yul\":3242:3248   */\n      dup3\n        /* \"#utility.yul\":3231:3240   */\n      dup12\n        /* \"#utility.yul\":3227:3249   */\n      add\n        /* \"#utility.yul\":3206:3259   */\n      tag_551\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":3196:3259   */\n      swap7\n      pop\n        /* \"#utility.yul\":3151:3269   */\n      pop\n        /* \"#utility.yul\":3308:3310   */\n      0x40\n        /* \"#utility.yul\":3334:3387   */\n      tag_665\n        /* \"#utility.yul\":3379:3386   */\n      dup11\n        /* \"#utility.yul\":3370:3376   */\n      dup3\n        /* \"#utility.yul\":3359:3368   */\n      dup12\n        /* \"#utility.yul\":3355:3377   */\n      add\n        /* \"#utility.yul\":3334:3387   */\n      tag_551\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":3324:3387   */\n      swap6\n      pop\n        /* \"#utility.yul\":3279:3397   */\n      pop\n        /* \"#utility.yul\":3436:3438   */\n      0x60\n        /* \"#utility.yul\":3462:3515   */\n      tag_666\n        /* \"#utility.yul\":3507:3514   */\n      dup11\n        /* \"#utility.yul\":3498:3504   */\n      dup3\n        /* \"#utility.yul\":3487:3496   */\n      dup12\n        /* \"#utility.yul\":3483:3505   */\n      add\n        /* \"#utility.yul\":3462:3515   */\n      tag_551\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":3452:3515   */\n      swap5\n      pop\n        /* \"#utility.yul\":3407:3525   */\n      pop\n        /* \"#utility.yul\":3564:3567   */\n      0x80\n        /* \"#utility.yul\":3591:3644   */\n      tag_667\n        /* \"#utility.yul\":3636:3643   */\n      dup11\n        /* \"#utility.yul\":3627:3633   */\n      dup3\n        /* \"#utility.yul\":3616:3625   */\n      dup12\n        /* \"#utility.yul\":3612:3634   */\n      add\n        /* \"#utility.yul\":3591:3644   */\n      tag_551\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":3581:3644   */\n      swap4\n      pop\n        /* \"#utility.yul\":3535:3654   */\n      pop\n        /* \"#utility.yul\":3693:3696   */\n      0xa0\n        /* \"#utility.yul\":3720:3773   */\n      tag_668\n        /* \"#utility.yul\":3765:3772   */\n      dup11\n        /* \"#utility.yul\":3756:3762   */\n      dup3\n        /* \"#utility.yul\":3745:3754   */\n      dup12\n        /* \"#utility.yul\":3741:3763   */\n      add\n        /* \"#utility.yul\":3720:3773   */\n      tag_551\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":3710:3773   */\n      swap3\n      pop\n        /* \"#utility.yul\":3664:3783   */\n      pop\n        /* \"#utility.yul\":3822:3825   */\n      0xc0\n        /* \"#utility.yul\":3849:3902   */\n      tag_669\n        /* \"#utility.yul\":3894:3901   */\n      dup11\n        /* \"#utility.yul\":3885:3891   */\n      dup3\n        /* \"#utility.yul\":3874:3883   */\n      dup12\n        /* \"#utility.yul\":3870:3892   */\n      add\n        /* \"#utility.yul\":3849:3902   */\n      tag_551\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":3839:3902   */\n      swap2\n      pop\n        /* \"#utility.yul\":3793:3912   */\n      pop\n        /* \"#utility.yul\":2716:3919   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3925:4015   */\n    tag_557:\n        /* \"#utility.yul\":3959:3966   */\n      0x00\n        /* \"#utility.yul\":4002:4007   */\n      dup2\n        /* \"#utility.yul\":3995:4008   */\n      iszero\n        /* \"#utility.yul\":3988:4009   */\n      iszero\n        /* \"#utility.yul\":3977:4009   */\n      swap1\n      pop\n        /* \"#utility.yul\":3925:4015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4021:4130   */\n    tag_558:\n        /* \"#utility.yul\":4102:4123   */\n      tag_672\n        /* \"#utility.yul\":4117:4122   */\n      dup2\n        /* \"#utility.yul\":4102:4123   */\n      tag_557\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":4097:4100   */\n      dup3\n        /* \"#utility.yul\":4090:4124   */\n      mstore\n        /* \"#utility.yul\":4021:4130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4346   */\n    tag_83:\n        /* \"#utility.yul\":4223:4227   */\n      0x00\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4250:4259   */\n      dup3\n        /* \"#utility.yul\":4246:4264   */\n      add\n        /* \"#utility.yul\":4238:4264   */\n      swap1\n      pop\n        /* \"#utility.yul\":4274:4339   */\n      tag_674\n        /* \"#utility.yul\":4336:4337   */\n      0x00\n        /* \"#utility.yul\":4325:4334   */\n      dup4\n        /* \"#utility.yul\":4321:4338   */\n      add\n        /* \"#utility.yul\":4312:4318   */\n      dup5\n        /* \"#utility.yul\":4274:4339   */\n      tag_558\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":4136:4346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4352:4681   */\n    tag_114:\n        /* \"#utility.yul\":4411:4417   */\n      0x00\n        /* \"#utility.yul\":4460:4462   */\n      0x20\n        /* \"#utility.yul\":4448:4457   */\n      dup3\n        /* \"#utility.yul\":4439:4446   */\n      dup5\n        /* \"#utility.yul\":4435:4458   */\n      sub\n        /* \"#utility.yul\":4431:4463   */\n      slt\n        /* \"#utility.yul\":4428:4547   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":4466:4545   */\n      tag_677\n      tag_546\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4428:4547   */\n    tag_676:\n        /* \"#utility.yul\":4586:4587   */\n      0x00\n        /* \"#utility.yul\":4611:4664   */\n      tag_678\n        /* \"#utility.yul\":4656:4663   */\n      dup5\n        /* \"#utility.yul\":4647:4653   */\n      dup3\n        /* \"#utility.yul\":4636:4645   */\n      dup6\n        /* \"#utility.yul\":4632:4654   */\n      add\n        /* \"#utility.yul\":4611:4664   */\n      tag_554\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":4601:4664   */\n      swap2\n      pop\n        /* \"#utility.yul\":4557:4674   */\n      pop\n        /* \"#utility.yul\":4352:4681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:5306   */\n    tag_132:\n        /* \"#utility.yul\":4764:4770   */\n      0x00\n        /* \"#utility.yul\":4772:4778   */\n      dup1\n        /* \"#utility.yul\":4780:4786   */\n      0x00\n        /* \"#utility.yul\":4829:4831   */\n      0x60\n        /* \"#utility.yul\":4817:4826   */\n      dup5\n        /* \"#utility.yul\":4808:4815   */\n      dup7\n        /* \"#utility.yul\":4804:4827   */\n      sub\n        /* \"#utility.yul\":4800:4832   */\n      slt\n        /* \"#utility.yul\":4797:4916   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":4835:4914   */\n      tag_681\n      tag_546\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":4797:4916   */\n    tag_680:\n        /* \"#utility.yul\":4955:4956   */\n      0x00\n        /* \"#utility.yul\":4980:5033   */\n      tag_682\n        /* \"#utility.yul\":5025:5032   */\n      dup7\n        /* \"#utility.yul\":5016:5022   */\n      dup3\n        /* \"#utility.yul\":5005:5014   */\n      dup8\n        /* \"#utility.yul\":5001:5023   */\n      add\n        /* \"#utility.yul\":4980:5033   */\n      tag_551\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":4970:5033   */\n      swap4\n      pop\n        /* \"#utility.yul\":4926:5043   */\n      pop\n        /* \"#utility.yul\":5082:5084   */\n      0x20\n        /* \"#utility.yul\":5108:5161   */\n      tag_683\n        /* \"#utility.yul\":5153:5160   */\n      dup7\n        /* \"#utility.yul\":5144:5150   */\n      dup3\n        /* \"#utility.yul\":5133:5142   */\n      dup8\n        /* \"#utility.yul\":5129:5151   */\n      add\n        /* \"#utility.yul\":5108:5161   */\n      tag_554\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":5098:5161   */\n      swap3\n      pop\n        /* \"#utility.yul\":5053:5171   */\n      pop\n        /* \"#utility.yul\":5210:5212   */\n      0x40\n        /* \"#utility.yul\":5236:5289   */\n      tag_684\n        /* \"#utility.yul\":5281:5288   */\n      dup7\n        /* \"#utility.yul\":5272:5278   */\n      dup3\n        /* \"#utility.yul\":5261:5270   */\n      dup8\n        /* \"#utility.yul\":5257:5279   */\n      add\n        /* \"#utility.yul\":5236:5289   */\n      tag_554\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":5226:5289   */\n      swap2\n      pop\n        /* \"#utility.yul\":5181:5299   */\n      pop\n        /* \"#utility.yul\":4687:5306   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5312:5481   */\n    tag_559:\n        /* \"#utility.yul\":5396:5407   */\n      0x00\n        /* \"#utility.yul\":5430:5436   */\n      dup3\n        /* \"#utility.yul\":5425:5428   */\n      dup3\n        /* \"#utility.yul\":5418:5437   */\n      mstore\n        /* \"#utility.yul\":5470:5474   */\n      0x20\n        /* \"#utility.yul\":5465:5468   */\n      dup3\n        /* \"#utility.yul\":5461:5475   */\n      add\n        /* \"#utility.yul\":5446:5475   */\n      swap1\n      pop\n        /* \"#utility.yul\":5312:5481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5487:5668   */\n    tag_560:\n        /* \"#utility.yul\":5627:5660   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5623:5624   */\n      0x00\n        /* \"#utility.yul\":5615:5621   */\n      dup3\n        /* \"#utility.yul\":5611:5625   */\n      add\n        /* \"#utility.yul\":5604:5661   */\n      mstore\n        /* \"#utility.yul\":5487:5668   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5674:6040   */\n    tag_561:\n        /* \"#utility.yul\":5816:5819   */\n      0x00\n        /* \"#utility.yul\":5837:5904   */\n      tag_688\n        /* \"#utility.yul\":5901:5903   */\n      0x1f\n        /* \"#utility.yul\":5896:5899   */\n      dup4\n        /* \"#utility.yul\":5837:5904   */\n      tag_559\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":5830:5904   */\n      swap2\n      pop\n        /* \"#utility.yul\":5913:6006   */\n      tag_689\n        /* \"#utility.yul\":6002:6005   */\n      dup3\n        /* \"#utility.yul\":5913:6006   */\n      tag_560\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"#utility.yul\":6026:6029   */\n      dup3\n        /* \"#utility.yul\":6022:6034   */\n      add\n        /* \"#utility.yul\":6015:6034   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:6040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6046:6465   */\n    tag_178:\n        /* \"#utility.yul\":6212:6216   */\n      0x00\n        /* \"#utility.yul\":6250:6252   */\n      0x20\n        /* \"#utility.yul\":6239:6248   */\n      dup3\n        /* \"#utility.yul\":6235:6253   */\n      add\n        /* \"#utility.yul\":6227:6253   */\n      swap1\n      pop\n        /* \"#utility.yul\":6299:6308   */\n      dup2\n        /* \"#utility.yul\":6293:6297   */\n      dup2\n        /* \"#utility.yul\":6289:6309   */\n      sub\n        /* \"#utility.yul\":6285:6286   */\n      0x00\n        /* \"#utility.yul\":6274:6283   */\n      dup4\n        /* \"#utility.yul\":6270:6287   */\n      add\n        /* \"#utility.yul\":6263:6310   */\n      mstore\n        /* \"#utility.yul\":6327:6458   */\n      tag_691\n        /* \"#utility.yul\":6453:6457   */\n      dup2\n        /* \"#utility.yul\":6327:6458   */\n      tag_561\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":6319:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6046:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6913   */\n    tag_181:\n        /* \"#utility.yul\":6620:6624   */\n      0x00\n        /* \"#utility.yul\":6658:6660   */\n      0x60\n        /* \"#utility.yul\":6647:6656   */\n      dup3\n        /* \"#utility.yul\":6643:6661   */\n      add\n        /* \"#utility.yul\":6635:6661   */\n      swap1\n      pop\n        /* \"#utility.yul\":6671:6742   */\n      tag_693\n        /* \"#utility.yul\":6739:6740   */\n      0x00\n        /* \"#utility.yul\":6728:6737   */\n      dup4\n        /* \"#utility.yul\":6724:6741   */\n      add\n        /* \"#utility.yul\":6715:6721   */\n      dup7\n        /* \"#utility.yul\":6671:6742   */\n      tag_556\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":6752:6824   */\n      tag_694\n        /* \"#utility.yul\":6820:6822   */\n      0x20\n        /* \"#utility.yul\":6809:6818   */\n      dup4\n        /* \"#utility.yul\":6805:6823   */\n      add\n        /* \"#utility.yul\":6796:6802   */\n      dup6\n        /* \"#utility.yul\":6752:6824   */\n      tag_556\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":6834:6906   */\n      tag_695\n        /* \"#utility.yul\":6902:6904   */\n      0x40\n        /* \"#utility.yul\":6891:6900   */\n      dup4\n        /* \"#utility.yul\":6887:6905   */\n      add\n        /* \"#utility.yul\":6878:6884   */\n      dup5\n        /* \"#utility.yul\":6834:6906   */\n      tag_555\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":6471:6913   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7062   */\n    tag_562:\n        /* \"#utility.yul\":6976:6981   */\n      0x00\n        /* \"#utility.yul\":7007:7013   */\n      dup2\n        /* \"#utility.yul\":7001:7014   */\n      mload\n        /* \"#utility.yul\":6992:7014   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7056   */\n      tag_697\n        /* \"#utility.yul\":7050:7055   */\n      dup2\n        /* \"#utility.yul\":7023:7056   */\n      tag_553\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":6919:7062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7068:7419   */\n    tag_185:\n        /* \"#utility.yul\":7138:7144   */\n      0x00\n        /* \"#utility.yul\":7187:7189   */\n      0x20\n        /* \"#utility.yul\":7175:7184   */\n      dup3\n        /* \"#utility.yul\":7166:7173   */\n      dup5\n        /* \"#utility.yul\":7162:7185   */\n      sub\n        /* \"#utility.yul\":7158:7190   */\n      slt\n        /* \"#utility.yul\":7155:7274   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":7193:7272   */\n      tag_700\n      tag_546\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7155:7274   */\n    tag_699:\n        /* \"#utility.yul\":7313:7314   */\n      0x00\n        /* \"#utility.yul\":7338:7402   */\n      tag_701\n        /* \"#utility.yul\":7394:7401   */\n      dup5\n        /* \"#utility.yul\":7385:7391   */\n      dup3\n        /* \"#utility.yul\":7374:7383   */\n      dup6\n        /* \"#utility.yul\":7370:7392   */\n      add\n        /* \"#utility.yul\":7338:7402   */\n      tag_562\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":7328:7402   */\n      swap2\n      pop\n        /* \"#utility.yul\":7284:7412   */\n      pop\n        /* \"#utility.yul\":7068:7419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7425:7757   */\n    tag_193:\n        /* \"#utility.yul\":7546:7550   */\n      0x00\n        /* \"#utility.yul\":7584:7586   */\n      0x40\n        /* \"#utility.yul\":7573:7582   */\n      dup3\n        /* \"#utility.yul\":7569:7587   */\n      add\n        /* \"#utility.yul\":7561:7587   */\n      swap1\n      pop\n        /* \"#utility.yul\":7597:7668   */\n      tag_703\n        /* \"#utility.yul\":7665:7666   */\n      0x00\n        /* \"#utility.yul\":7654:7663   */\n      dup4\n        /* \"#utility.yul\":7650:7667   */\n      add\n        /* \"#utility.yul\":7641:7647   */\n      dup6\n        /* \"#utility.yul\":7597:7668   */\n      tag_556\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":7678:7750   */\n      tag_704\n        /* \"#utility.yul\":7746:7748   */\n      0x20\n        /* \"#utility.yul\":7735:7744   */\n      dup4\n        /* \"#utility.yul\":7731:7749   */\n      add\n        /* \"#utility.yul\":7722:7728   */\n      dup5\n        /* \"#utility.yul\":7678:7750   */\n      tag_556\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":7425:7757   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7763:7996   */\n    tag_563:\n        /* \"#utility.yul\":7903:7937   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7899:7900   */\n      0x00\n        /* \"#utility.yul\":7891:7897   */\n      dup3\n        /* \"#utility.yul\":7887:7901   */\n      add\n        /* \"#utility.yul\":7880:7938   */\n      mstore\n        /* \"#utility.yul\":7972:7988   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7967:7969   */\n      0x20\n        /* \"#utility.yul\":7959:7965   */\n      dup3\n        /* \"#utility.yul\":7955:7970   */\n      add\n        /* \"#utility.yul\":7948:7989   */\n      mstore\n        /* \"#utility.yul\":7763:7996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8368   */\n    tag_564:\n        /* \"#utility.yul\":8144:8147   */\n      0x00\n        /* \"#utility.yul\":8165:8232   */\n      tag_707\n        /* \"#utility.yul\":8229:8231   */\n      0x2e\n        /* \"#utility.yul\":8224:8227   */\n      dup4\n        /* \"#utility.yul\":8165:8232   */\n      tag_559\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":8158:8232   */\n      swap2\n      pop\n        /* \"#utility.yul\":8241:8334   */\n      tag_708\n        /* \"#utility.yul\":8330:8333   */\n      dup3\n        /* \"#utility.yul\":8241:8334   */\n      tag_563\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":8359:8361   */\n      0x40\n        /* \"#utility.yul\":8354:8357   */\n      dup3\n        /* \"#utility.yul\":8350:8362   */\n      add\n        /* \"#utility.yul\":8343:8362   */\n      swap1\n      pop\n        /* \"#utility.yul\":8002:8368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8374:8793   */\n    tag_211:\n        /* \"#utility.yul\":8540:8544   */\n      0x00\n        /* \"#utility.yul\":8578:8580   */\n      0x20\n        /* \"#utility.yul\":8567:8576   */\n      dup3\n        /* \"#utility.yul\":8563:8581   */\n      add\n        /* \"#utility.yul\":8555:8581   */\n      swap1\n      pop\n        /* \"#utility.yul\":8627:8636   */\n      dup2\n        /* \"#utility.yul\":8621:8625   */\n      dup2\n        /* \"#utility.yul\":8617:8637   */\n      sub\n        /* \"#utility.yul\":8613:8614   */\n      0x00\n        /* \"#utility.yul\":8602:8611   */\n      dup4\n        /* \"#utility.yul\":8598:8615   */\n      add\n        /* \"#utility.yul\":8591:8638   */\n      mstore\n        /* \"#utility.yul\":8655:8786   */\n      tag_710\n        /* \"#utility.yul\":8781:8785   */\n      dup2\n        /* \"#utility.yul\":8655:8786   */\n      tag_564\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":8647:8786   */\n      swap1\n      pop\n        /* \"#utility.yul\":8374:8793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8799:8884   */\n    tag_565:\n        /* \"#utility.yul\":8844:8851   */\n      0x00\n        /* \"#utility.yul\":8873:8878   */\n      dup2\n        /* \"#utility.yul\":8862:8878   */\n      swap1\n      pop\n        /* \"#utility.yul\":8799:8884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8890:8976   */\n    tag_566:\n        /* \"#utility.yul\":8925:8932   */\n      0x00\n        /* \"#utility.yul\":8965:8969   */\n      0xff\n        /* \"#utility.yul\":8958:8963   */\n      dup3\n        /* \"#utility.yul\":8954:8970   */\n      and\n        /* \"#utility.yul\":8943:8970   */\n      swap1\n      pop\n        /* \"#utility.yul\":8890:8976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8982:9042   */\n    tag_567:\n        /* \"#utility.yul\":9010:9013   */\n      0x00\n        /* \"#utility.yul\":9031:9036   */\n      dup2\n        /* \"#utility.yul\":9024:9036   */\n      swap1\n      pop\n        /* \"#utility.yul\":8982:9042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9048:9202   */\n    tag_568:\n        /* \"#utility.yul\":9104:9113   */\n      0x00\n        /* \"#utility.yul\":9137:9196   */\n      tag_715\n        /* \"#utility.yul\":9153:9195   */\n      tag_716\n        /* \"#utility.yul\":9162:9194   */\n      tag_717\n        /* \"#utility.yul\":9188:9193   */\n      dup5\n        /* \"#utility.yul\":9162:9194   */\n      tag_565\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":9153:9195   */\n      tag_567\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":9137:9196   */\n      tag_566\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":9124:9196   */\n      swap1\n      pop\n        /* \"#utility.yul\":9048:9202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9208:9351   */\n    tag_569:\n        /* \"#utility.yul\":9301:9344   */\n      tag_719\n        /* \"#utility.yul\":9338:9343   */\n      dup2\n        /* \"#utility.yul\":9301:9344   */\n      tag_568\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":9296:9299   */\n      dup3\n        /* \"#utility.yul\":9289:9345   */\n      mstore\n        /* \"#utility.yul\":9208:9351   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9591   */\n    tag_228:\n        /* \"#utility.yul\":9456:9460   */\n      0x00\n        /* \"#utility.yul\":9494:9496   */\n      0x20\n        /* \"#utility.yul\":9483:9492   */\n      dup3\n        /* \"#utility.yul\":9479:9497   */\n      add\n        /* \"#utility.yul\":9471:9497   */\n      swap1\n      pop\n        /* \"#utility.yul\":9507:9584   */\n      tag_721\n        /* \"#utility.yul\":9581:9582   */\n      0x00\n        /* \"#utility.yul\":9570:9579   */\n      dup4\n        /* \"#utility.yul\":9566:9583   */\n      add\n        /* \"#utility.yul\":9557:9563   */\n      dup5\n        /* \"#utility.yul\":9507:9584   */\n      tag_569\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":9357:9591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9597:9764   */\n    tag_570:\n        /* \"#utility.yul\":9737:9756   */\n      0x4365526f757465722f44697361626c6564000000000000000000000000000000\n        /* \"#utility.yul\":9733:9734   */\n      0x00\n        /* \"#utility.yul\":9725:9731   */\n      dup3\n        /* \"#utility.yul\":9721:9735   */\n      add\n        /* \"#utility.yul\":9714:9757   */\n      mstore\n        /* \"#utility.yul\":9597:9764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9770:10136   */\n    tag_571:\n        /* \"#utility.yul\":9912:9915   */\n      0x00\n        /* \"#utility.yul\":9933:10000   */\n      tag_724\n        /* \"#utility.yul\":9997:9999   */\n      0x11\n        /* \"#utility.yul\":9992:9995   */\n      dup4\n        /* \"#utility.yul\":9933:10000   */\n      tag_559\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":9926:10000   */\n      swap2\n      pop\n        /* \"#utility.yul\":10009:10102   */\n      tag_725\n        /* \"#utility.yul\":10098:10101   */\n      dup3\n        /* \"#utility.yul\":10009:10102   */\n      tag_570\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":10127:10129   */\n      0x20\n        /* \"#utility.yul\":10122:10125   */\n      dup3\n        /* \"#utility.yul\":10118:10130   */\n      add\n        /* \"#utility.yul\":10111:10130   */\n      swap1\n      pop\n        /* \"#utility.yul\":9770:10136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10142:10561   */\n    tag_276:\n        /* \"#utility.yul\":10308:10312   */\n      0x00\n        /* \"#utility.yul\":10346:10348   */\n      0x20\n        /* \"#utility.yul\":10335:10344   */\n      dup3\n        /* \"#utility.yul\":10331:10349   */\n      add\n        /* \"#utility.yul\":10323:10349   */\n      swap1\n      pop\n        /* \"#utility.yul\":10395:10404   */\n      dup2\n        /* \"#utility.yul\":10389:10393   */\n      dup2\n        /* \"#utility.yul\":10385:10405   */\n      sub\n        /* \"#utility.yul\":10381:10382   */\n      0x00\n        /* \"#utility.yul\":10370:10379   */\n      dup4\n        /* \"#utility.yul\":10366:10383   */\n      add\n        /* \"#utility.yul\":10359:10406   */\n      mstore\n        /* \"#utility.yul\":10423:10554   */\n      tag_727\n        /* \"#utility.yul\":10549:10553   */\n      dup2\n        /* \"#utility.yul\":10423:10554   */\n      tag_571\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":10415:10554   */\n      swap1\n      pop\n        /* \"#utility.yul\":10142:10561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10567:10747   */\n    tag_290:\n        /* \"#utility.yul\":10615:10692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10612:10613   */\n      0x00\n        /* \"#utility.yul\":10605:10693   */\n      mstore\n        /* \"#utility.yul\":10712:10716   */\n      0x41\n        /* \"#utility.yul\":10709:10710   */\n      0x04\n        /* \"#utility.yul\":10702:10717   */\n      mstore\n        /* \"#utility.yul\":10736:10740   */\n      0x24\n        /* \"#utility.yul\":10733:10734   */\n      0x00\n        /* \"#utility.yul\":10726:10741   */\n      revert\n        /* \"#utility.yul\":10753:10933   */\n    tag_294:\n        /* \"#utility.yul\":10801:10878   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10798:10799   */\n      0x00\n        /* \"#utility.yul\":10791:10879   */\n      mstore\n        /* \"#utility.yul\":10898:10902   */\n      0x32\n        /* \"#utility.yul\":10895:10896   */\n      0x04\n        /* \"#utility.yul\":10888:10903   */\n      mstore\n        /* \"#utility.yul\":10922:10926   */\n      0x24\n        /* \"#utility.yul\":10919:10920   */\n      0x00\n        /* \"#utility.yul\":10912:10927   */\n      revert\n        /* \"#utility.yul\":10939:11119   */\n    tag_572:\n        /* \"#utility.yul\":10987:11064   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10984:10985   */\n      0x00\n        /* \"#utility.yul\":10977:11065   */\n      mstore\n        /* \"#utility.yul\":11084:11088   */\n      0x11\n        /* \"#utility.yul\":11081:11082   */\n      0x04\n        /* \"#utility.yul\":11074:11089   */\n      mstore\n        /* \"#utility.yul\":11108:11112   */\n      0x24\n        /* \"#utility.yul\":11105:11106   */\n      0x00\n        /* \"#utility.yul\":11098:11113   */\n      revert\n        /* \"#utility.yul\":11125:11430   */\n    tag_298:\n        /* \"#utility.yul\":11165:11168   */\n      0x00\n        /* \"#utility.yul\":11184:11204   */\n      tag_732\n        /* \"#utility.yul\":11202:11203   */\n      dup3\n        /* \"#utility.yul\":11184:11204   */\n      tag_552\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":11179:11204   */\n      swap2\n      pop\n        /* \"#utility.yul\":11218:11238   */\n      tag_733\n        /* \"#utility.yul\":11236:11237   */\n      dup4\n        /* \"#utility.yul\":11218:11238   */\n      tag_552\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":11213:11238   */\n      swap3\n      pop\n        /* \"#utility.yul\":11372:11373   */\n      dup3\n        /* \"#utility.yul\":11304:11370   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11300:11374   */\n      sub\n        /* \"#utility.yul\":11297:11298   */\n      dup3\n        /* \"#utility.yul\":11294:11375   */\n      gt\n        /* \"#utility.yul\":11291:11398   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":11378:11396   */\n      tag_735\n      tag_572\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":11291:11398   */\n    tag_734:\n        /* \"#utility.yul\":11422:11423   */\n      dup3\n        /* \"#utility.yul\":11419:11420   */\n      dup3\n        /* \"#utility.yul\":11415:11424   */\n      add\n        /* \"#utility.yul\":11408:11424   */\n      swap1\n      pop\n        /* \"#utility.yul\":11125:11430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11436:11550   */\n    tag_573:\n        /* \"#utility.yul\":11503:11509   */\n      0x00\n        /* \"#utility.yul\":11537:11542   */\n      dup2\n        /* \"#utility.yul\":11531:11543   */\n      mload\n        /* \"#utility.yul\":11521:11543   */\n      swap1\n      pop\n        /* \"#utility.yul\":11436:11550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11556:11740   */\n    tag_574:\n        /* \"#utility.yul\":11655:11666   */\n      0x00\n        /* \"#utility.yul\":11689:11695   */\n      dup3\n        /* \"#utility.yul\":11684:11687   */\n      dup3\n        /* \"#utility.yul\":11677:11696   */\n      mstore\n        /* \"#utility.yul\":11729:11733   */\n      0x20\n        /* \"#utility.yul\":11724:11727   */\n      dup3\n        /* \"#utility.yul\":11720:11734   */\n      add\n        /* \"#utility.yul\":11705:11734   */\n      swap1\n      pop\n        /* \"#utility.yul\":11556:11740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11746:11878   */\n    tag_575:\n        /* \"#utility.yul\":11813:11817   */\n      0x00\n        /* \"#utility.yul\":11836:11839   */\n      dup2\n        /* \"#utility.yul\":11828:11839   */\n      swap1\n      pop\n        /* \"#utility.yul\":11866:11870   */\n      0x20\n        /* \"#utility.yul\":11861:11864   */\n      dup3\n        /* \"#utility.yul\":11857:11871   */\n      add\n        /* \"#utility.yul\":11849:11871   */\n      swap1\n      pop\n        /* \"#utility.yul\":11746:11878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11884:11992   */\n    tag_576:\n        /* \"#utility.yul\":11961:11985   */\n      tag_740\n        /* \"#utility.yul\":11979:11984   */\n      dup2\n        /* \"#utility.yul\":11961:11985   */\n      tag_549\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":11956:11959   */\n      dup3\n        /* \"#utility.yul\":11949:11986   */\n      mstore\n        /* \"#utility.yul\":11884:11992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11998:12177   */\n    tag_577:\n        /* \"#utility.yul\":12067:12077   */\n      0x00\n        /* \"#utility.yul\":12088:12134   */\n      tag_742\n        /* \"#utility.yul\":12130:12133   */\n      dup4\n        /* \"#utility.yul\":12122:12128   */\n      dup4\n        /* \"#utility.yul\":12088:12134   */\n      tag_576\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":12166:12170   */\n      0x20\n        /* \"#utility.yul\":12161:12164   */\n      dup4\n        /* \"#utility.yul\":12157:12171   */\n      add\n        /* \"#utility.yul\":12143:12171   */\n      swap1\n      pop\n        /* \"#utility.yul\":11998:12177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12183:12296   */\n    tag_578:\n        /* \"#utility.yul\":12253:12257   */\n      0x00\n        /* \"#utility.yul\":12285:12289   */\n      0x20\n        /* \"#utility.yul\":12280:12283   */\n      dup3\n        /* \"#utility.yul\":12276:12290   */\n      add\n        /* \"#utility.yul\":12268:12290   */\n      swap1\n      pop\n        /* \"#utility.yul\":12183:12296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12332:13064   */\n    tag_579:\n        /* \"#utility.yul\":12451:12454   */\n      0x00\n        /* \"#utility.yul\":12480:12534   */\n      tag_745\n        /* \"#utility.yul\":12528:12533   */\n      dup3\n        /* \"#utility.yul\":12480:12534   */\n      tag_573\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":12550:12636   */\n      tag_746\n        /* \"#utility.yul\":12629:12635   */\n      dup2\n        /* \"#utility.yul\":12624:12627   */\n      dup6\n        /* \"#utility.yul\":12550:12636   */\n      tag_574\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":12543:12636   */\n      swap4\n      pop\n        /* \"#utility.yul\":12660:12716   */\n      tag_747\n        /* \"#utility.yul\":12710:12715   */\n      dup4\n        /* \"#utility.yul\":12660:12716   */\n      tag_575\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":12739:12746   */\n      dup1\n        /* \"#utility.yul\":12770:12771   */\n      0x00\n        /* \"#utility.yul\":12755:13039   */\n    tag_748:\n        /* \"#utility.yul\":12780:12786   */\n      dup4\n        /* \"#utility.yul\":12777:12778   */\n      dup2\n        /* \"#utility.yul\":12774:12787   */\n      lt\n        /* \"#utility.yul\":12755:13039   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":12856:12862   */\n      dup2\n        /* \"#utility.yul\":12850:12863   */\n      mload\n        /* \"#utility.yul\":12883:12946   */\n      tag_751\n        /* \"#utility.yul\":12942:12945   */\n      dup9\n        /* \"#utility.yul\":12927:12940   */\n      dup3\n        /* \"#utility.yul\":12883:12946   */\n      tag_577\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":12876:12946   */\n      swap8\n      pop\n        /* \"#utility.yul\":12969:13029   */\n      tag_752\n        /* \"#utility.yul\":13022:13028   */\n      dup4\n        /* \"#utility.yul\":12969:13029   */\n      tag_578\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":12959:13029   */\n      swap3\n      pop\n        /* \"#utility.yul\":12815:13039   */\n      pop\n        /* \"#utility.yul\":12802:12803   */\n      0x01\n        /* \"#utility.yul\":12799:12800   */\n      dup2\n        /* \"#utility.yul\":12795:12804   */\n      add\n        /* \"#utility.yul\":12790:12804   */\n      swap1\n      pop\n        /* \"#utility.yul\":12755:13039   */\n      jump(tag_748)\n    tag_750:\n        /* \"#utility.yul\":12759:12773   */\n      pop\n        /* \"#utility.yul\":13055:13058   */\n      dup6\n        /* \"#utility.yul\":13048:13058   */\n      swap4\n      pop\n        /* \"#utility.yul\":12456:13064   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12332:13064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13070:13885   */\n    tag_300:\n        /* \"#utility.yul\":13325:13329   */\n      0x00\n        /* \"#utility.yul\":13363:13366   */\n      0xa0\n        /* \"#utility.yul\":13352:13361   */\n      dup3\n        /* \"#utility.yul\":13348:13367   */\n      add\n        /* \"#utility.yul\":13340:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":13377:13448   */\n      tag_754\n        /* \"#utility.yul\":13445:13446   */\n      0x00\n        /* \"#utility.yul\":13434:13443   */\n      dup4\n        /* \"#utility.yul\":13430:13447   */\n      add\n        /* \"#utility.yul\":13421:13427   */\n      dup9\n        /* \"#utility.yul\":13377:13448   */\n      tag_555\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":13458:13530   */\n      tag_755\n        /* \"#utility.yul\":13526:13528   */\n      0x20\n        /* \"#utility.yul\":13515:13524   */\n      dup4\n        /* \"#utility.yul\":13511:13529   */\n      add\n        /* \"#utility.yul\":13502:13508   */\n      dup8\n        /* \"#utility.yul\":13458:13530   */\n      tag_555\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":13577:13586   */\n      dup2\n        /* \"#utility.yul\":13571:13575   */\n      dup2\n        /* \"#utility.yul\":13567:13587   */\n      sub\n        /* \"#utility.yul\":13562:13564   */\n      0x40\n        /* \"#utility.yul\":13551:13560   */\n      dup4\n        /* \"#utility.yul\":13547:13565   */\n      add\n        /* \"#utility.yul\":13540:13588   */\n      mstore\n        /* \"#utility.yul\":13605:13713   */\n      tag_756\n        /* \"#utility.yul\":13708:13712   */\n      dup2\n        /* \"#utility.yul\":13699:13705   */\n      dup7\n        /* \"#utility.yul\":13605:13713   */\n      tag_579\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":13597:13713   */\n      swap1\n      pop\n        /* \"#utility.yul\":13723:13795   */\n      tag_757\n        /* \"#utility.yul\":13791:13793   */\n      0x60\n        /* \"#utility.yul\":13780:13789   */\n      dup4\n        /* \"#utility.yul\":13776:13794   */\n      add\n        /* \"#utility.yul\":13767:13773   */\n      dup6\n        /* \"#utility.yul\":13723:13795   */\n      tag_556\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":13805:13878   */\n      tag_758\n        /* \"#utility.yul\":13873:13876   */\n      0x80\n        /* \"#utility.yul\":13862:13871   */\n      dup4\n        /* \"#utility.yul\":13858:13877   */\n      add\n        /* \"#utility.yul\":13849:13855   */\n      dup5\n        /* \"#utility.yul\":13805:13878   */\n      tag_555\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":13070:13885   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13891:14008   */\n    tag_580:\n        /* \"#utility.yul\":14000:14001   */\n      0x00\n        /* \"#utility.yul\":13997:13998   */\n      dup1\n        /* \"#utility.yul\":13990:14002   */\n      revert\n        /* \"#utility.yul\":14014:14116   */\n    tag_581:\n        /* \"#utility.yul\":14055:14061   */\n      0x00\n        /* \"#utility.yul\":14106:14108   */\n      0x1f\n        /* \"#utility.yul\":14102:14109   */\n      not\n        /* \"#utility.yul\":14097:14099   */\n      0x1f\n        /* \"#utility.yul\":14090:14095   */\n      dup4\n        /* \"#utility.yul\":14086:14100   */\n      add\n        /* \"#utility.yul\":14082:14110   */\n      and\n        /* \"#utility.yul\":14072:14110   */\n      swap1\n      pop\n        /* \"#utility.yul\":14014:14116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14122:14403   */\n    tag_582:\n        /* \"#utility.yul\":14205:14232   */\n      tag_762\n        /* \"#utility.yul\":14227:14231   */\n      dup3\n        /* \"#utility.yul\":14205:14232   */\n      tag_581\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":14197:14203   */\n      dup2\n        /* \"#utility.yul\":14193:14233   */\n      add\n        /* \"#utility.yul\":14335:14341   */\n      dup2\n        /* \"#utility.yul\":14323:14333   */\n      dup2\n        /* \"#utility.yul\":14320:14342   */\n      lt\n        /* \"#utility.yul\":14299:14317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14287:14297   */\n      dup3\n        /* \"#utility.yul\":14284:14318   */\n      gt\n        /* \"#utility.yul\":14281:14343   */\n      or\n        /* \"#utility.yul\":14278:14366   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":14346:14364   */\n      tag_764\n      tag_290\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":14278:14366   */\n    tag_763:\n        /* \"#utility.yul\":14386:14396   */\n      dup1\n        /* \"#utility.yul\":14382:14384   */\n      0x40\n        /* \"#utility.yul\":14375:14397   */\n      mstore\n        /* \"#utility.yul\":14165:14403   */\n      pop\n        /* \"#utility.yul\":14122:14403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14409:14538   */\n    tag_583:\n        /* \"#utility.yul\":14443:14449   */\n      0x00\n        /* \"#utility.yul\":14470:14490   */\n      tag_766\n      tag_545\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":14460:14490   */\n      swap1\n      pop\n        /* \"#utility.yul\":14499:14532   */\n      tag_767\n        /* \"#utility.yul\":14527:14531   */\n      dup3\n        /* \"#utility.yul\":14519:14525   */\n      dup3\n        /* \"#utility.yul\":14499:14532   */\n      tag_582\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":14409:14538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14544:14855   */\n    tag_584:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14711:14729   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14703:14709   */\n      dup3\n        /* \"#utility.yul\":14700:14730   */\n      gt\n        /* \"#utility.yul\":14697:14753   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":14733:14751   */\n      tag_770\n      tag_290\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":14697:14753   */\n    tag_769:\n        /* \"#utility.yul\":14783:14787   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14771:14788   */\n      mul\n        /* \"#utility.yul\":14763:14788   */\n      swap1\n      pop\n        /* \"#utility.yul\":14843:14847   */\n      0x20\n        /* \"#utility.yul\":14837:14841   */\n      dup2\n        /* \"#utility.yul\":14833:14848   */\n      add\n        /* \"#utility.yul\":14825:14848   */\n      swap1\n      pop\n        /* \"#utility.yul\":14544:14855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14861:14978   */\n    tag_585:\n        /* \"#utility.yul\":14970:14971   */\n      0x00\n        /* \"#utility.yul\":14967:14968   */\n      dup1\n        /* \"#utility.yul\":14960:14972   */\n      revert\n        /* \"#utility.yul\":15001:15733   */\n    tag_586:\n        /* \"#utility.yul\":15108:15113   */\n      0x00\n        /* \"#utility.yul\":15133:15214   */\n      tag_773\n        /* \"#utility.yul\":15149:15213   */\n      tag_774\n        /* \"#utility.yul\":15206:15212   */\n      dup5\n        /* \"#utility.yul\":15149:15213   */\n      tag_584\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":15133:15214   */\n      tag_583\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":15124:15214   */\n      swap1\n      pop\n        /* \"#utility.yul\":15234:15239   */\n      dup1\n        /* \"#utility.yul\":15263:15269   */\n      dup4\n        /* \"#utility.yul\":15256:15261   */\n      dup3\n        /* \"#utility.yul\":15249:15270   */\n      mstore\n        /* \"#utility.yul\":15297:15301   */\n      0x20\n        /* \"#utility.yul\":15290:15295   */\n      dup3\n        /* \"#utility.yul\":15286:15302   */\n      add\n        /* \"#utility.yul\":15279:15302   */\n      swap1\n      pop\n        /* \"#utility.yul\":15350:15354   */\n      0x20\n        /* \"#utility.yul\":15342:15348   */\n      dup5\n        /* \"#utility.yul\":15338:15355   */\n      mul\n        /* \"#utility.yul\":15330:15336   */\n      dup4\n        /* \"#utility.yul\":15326:15356   */\n      add\n        /* \"#utility.yul\":15379:15382   */\n      dup6\n        /* \"#utility.yul\":15371:15377   */\n      dup2\n        /* \"#utility.yul\":15368:15383   */\n      gt\n        /* \"#utility.yul\":15365:15487   */\n      iszero\n      tag_775\n      jumpi\n        /* \"#utility.yul\":15398:15477   */\n      tag_776\n      tag_585\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":15365:15487   */\n    tag_775:\n        /* \"#utility.yul\":15513:15519   */\n      dup4\n        /* \"#utility.yul\":15496:15727   */\n    tag_777:\n        /* \"#utility.yul\":15530:15536   */\n      dup2\n        /* \"#utility.yul\":15525:15528   */\n      dup2\n        /* \"#utility.yul\":15522:15537   */\n      lt\n        /* \"#utility.yul\":15496:15727   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":15605:15608   */\n      dup1\n        /* \"#utility.yul\":15634:15682   */\n      tag_780\n        /* \"#utility.yul\":15678:15681   */\n      dup9\n        /* \"#utility.yul\":15666:15676   */\n      dup3\n        /* \"#utility.yul\":15634:15682   */\n      tag_562\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":15629:15632   */\n      dup5\n        /* \"#utility.yul\":15622:15683   */\n      mstore\n        /* \"#utility.yul\":15712:15716   */\n      0x20\n        /* \"#utility.yul\":15707:15710   */\n      dup5\n        /* \"#utility.yul\":15703:15717   */\n      add\n        /* \"#utility.yul\":15696:15717   */\n      swap4\n      pop\n        /* \"#utility.yul\":15572:15727   */\n      pop\n        /* \"#utility.yul\":15556:15560   */\n      0x20\n        /* \"#utility.yul\":15551:15554   */\n      dup2\n        /* \"#utility.yul\":15547:15561   */\n      add\n        /* \"#utility.yul\":15540:15561   */\n      swap1\n      pop\n        /* \"#utility.yul\":15496:15727   */\n      jump(tag_777)\n    tag_779:\n        /* \"#utility.yul\":15500:15521   */\n      pop\n        /* \"#utility.yul\":15114:15733   */\n      pop\n      pop\n        /* \"#utility.yul\":15001:15733   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15756:16141   */\n    tag_587:\n        /* \"#utility.yul\":15838:15843   */\n      0x00\n        /* \"#utility.yul\":15887:15890   */\n      dup3\n        /* \"#utility.yul\":15880:15884   */\n      0x1f\n        /* \"#utility.yul\":15872:15878   */\n      dup4\n        /* \"#utility.yul\":15868:15885   */\n      add\n        /* \"#utility.yul\":15864:15891   */\n      slt\n        /* \"#utility.yul\":15854:15976   */\n      tag_782\n      jumpi\n        /* \"#utility.yul\":15895:15974   */\n      tag_783\n      tag_580\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":15854:15976   */\n    tag_782:\n        /* \"#utility.yul\":16005:16011   */\n      dup2\n        /* \"#utility.yul\":15999:16012   */\n      mload\n        /* \"#utility.yul\":16030:16135   */\n      tag_784\n        /* \"#utility.yul\":16131:16134   */\n      dup5\n        /* \"#utility.yul\":16123:16129   */\n      dup3\n        /* \"#utility.yul\":16116:16120   */\n      0x20\n        /* \"#utility.yul\":16108:16114   */\n      dup7\n        /* \"#utility.yul\":16104:16121   */\n      add\n        /* \"#utility.yul\":16030:16135   */\n      tag_586\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":16021:16135   */\n      swap2\n      pop\n        /* \"#utility.yul\":15844:16141   */\n      pop\n        /* \"#utility.yul\":15756:16141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16147:16701   */\n    tag_304:\n        /* \"#utility.yul\":16242:16248   */\n      0x00\n        /* \"#utility.yul\":16291:16293   */\n      0x20\n        /* \"#utility.yul\":16279:16288   */\n      dup3\n        /* \"#utility.yul\":16270:16277   */\n      dup5\n        /* \"#utility.yul\":16266:16289   */\n      sub\n        /* \"#utility.yul\":16262:16294   */\n      slt\n        /* \"#utility.yul\":16259:16378   */\n      iszero\n      tag_786\n      jumpi\n        /* \"#utility.yul\":16297:16376   */\n      tag_787\n      tag_546\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":16259:16378   */\n    tag_786:\n        /* \"#utility.yul\":16438:16439   */\n      0x00\n        /* \"#utility.yul\":16427:16436   */\n      dup3\n        /* \"#utility.yul\":16423:16440   */\n      add\n        /* \"#utility.yul\":16417:16441   */\n      mload\n        /* \"#utility.yul\":16468:16486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16460:16466   */\n      dup2\n        /* \"#utility.yul\":16457:16487   */\n      gt\n        /* \"#utility.yul\":16454:16571   */\n      iszero\n      tag_788\n      jumpi\n        /* \"#utility.yul\":16490:16569   */\n      tag_789\n      tag_547\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":16454:16571   */\n    tag_788:\n        /* \"#utility.yul\":16595:16684   */\n      tag_790\n        /* \"#utility.yul\":16676:16683   */\n      dup5\n        /* \"#utility.yul\":16667:16673   */\n      dup3\n        /* \"#utility.yul\":16656:16665   */\n      dup6\n        /* \"#utility.yul\":16652:16674   */\n      add\n        /* \"#utility.yul\":16595:16684   */\n      tag_587\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":16585:16684   */\n      swap2\n      pop\n        /* \"#utility.yul\":16388:16694   */\n      pop\n        /* \"#utility.yul\":16147:16701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16707:16878   */\n    tag_588:\n        /* \"#utility.yul\":16847:16870   */\n      0x50726f76696465723a206e6f7420616c6c6f7765640000000000000000000000\n        /* \"#utility.yul\":16843:16844   */\n      0x00\n        /* \"#utility.yul\":16835:16841   */\n      dup3\n        /* \"#utility.yul\":16831:16845   */\n      add\n        /* \"#utility.yul\":16824:16871   */\n      mstore\n        /* \"#utility.yul\":16707:16878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16884:17250   */\n    tag_589:\n        /* \"#utility.yul\":17026:17029   */\n      0x00\n        /* \"#utility.yul\":17047:17114   */\n      tag_793\n        /* \"#utility.yul\":17111:17113   */\n      0x15\n        /* \"#utility.yul\":17106:17109   */\n      dup4\n        /* \"#utility.yul\":17047:17114   */\n      tag_559\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":17040:17114   */\n      swap2\n      pop\n        /* \"#utility.yul\":17123:17216   */\n      tag_794\n        /* \"#utility.yul\":17212:17215   */\n      dup3\n        /* \"#utility.yul\":17123:17216   */\n      tag_588\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":17241:17243   */\n      0x20\n        /* \"#utility.yul\":17236:17239   */\n      dup3\n        /* \"#utility.yul\":17232:17244   */\n      add\n        /* \"#utility.yul\":17225:17244   */\n      swap1\n      pop\n        /* \"#utility.yul\":16884:17250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17256:17675   */\n    tag_321:\n        /* \"#utility.yul\":17422:17426   */\n      0x00\n        /* \"#utility.yul\":17460:17462   */\n      0x20\n        /* \"#utility.yul\":17449:17458   */\n      dup3\n        /* \"#utility.yul\":17445:17463   */\n      add\n        /* \"#utility.yul\":17437:17463   */\n      swap1\n      pop\n        /* \"#utility.yul\":17509:17518   */\n      dup2\n        /* \"#utility.yul\":17503:17507   */\n      dup2\n        /* \"#utility.yul\":17499:17519   */\n      sub\n        /* \"#utility.yul\":17495:17496   */\n      0x00\n        /* \"#utility.yul\":17484:17493   */\n      dup4\n        /* \"#utility.yul\":17480:17497   */\n      add\n        /* \"#utility.yul\":17473:17520   */\n      mstore\n        /* \"#utility.yul\":17537:17668   */\n      tag_796\n        /* \"#utility.yul\":17663:17667   */\n      dup2\n        /* \"#utility.yul\":17537:17668   */\n      tag_589\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":17529:17668   */\n      swap1\n      pop\n        /* \"#utility.yul\":17256:17675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17681:18013   */\n    tag_329:\n        /* \"#utility.yul\":17802:17806   */\n      0x00\n        /* \"#utility.yul\":17840:17842   */\n      0x40\n        /* \"#utility.yul\":17829:17838   */\n      dup3\n        /* \"#utility.yul\":17825:17843   */\n      add\n        /* \"#utility.yul\":17817:17843   */\n      swap1\n      pop\n        /* \"#utility.yul\":17853:17924   */\n      tag_798\n        /* \"#utility.yul\":17921:17922   */\n      0x00\n        /* \"#utility.yul\":17910:17919   */\n      dup4\n        /* \"#utility.yul\":17906:17923   */\n      add\n        /* \"#utility.yul\":17897:17903   */\n      dup6\n        /* \"#utility.yul\":17853:17924   */\n      tag_556\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":17934:18006   */\n      tag_799\n        /* \"#utility.yul\":18002:18004   */\n      0x20\n        /* \"#utility.yul\":17991:18000   */\n      dup4\n        /* \"#utility.yul\":17987:18005   */\n      add\n        /* \"#utility.yul\":17978:17984   */\n      dup5\n        /* \"#utility.yul\":17934:18006   */\n      tag_555\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":17681:18013   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18019:18104   */\n    tag_590:\n        /* \"#utility.yul\":18064:18071   */\n      0x00\n        /* \"#utility.yul\":18093:18098   */\n      dup2\n        /* \"#utility.yul\":18082:18098   */\n      swap1\n      pop\n        /* \"#utility.yul\":18019:18104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18110:18268   */\n    tag_591:\n        /* \"#utility.yul\":18168:18177   */\n      0x00\n        /* \"#utility.yul\":18201:18262   */\n      tag_802\n        /* \"#utility.yul\":18219:18261   */\n      tag_803\n        /* \"#utility.yul\":18228:18260   */\n      tag_804\n        /* \"#utility.yul\":18254:18259   */\n      dup5\n        /* \"#utility.yul\":18228:18260   */\n      tag_590\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":18219:18261   */\n      tag_567\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":18201:18262   */\n      tag_552\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":18188:18262   */\n      swap1\n      pop\n        /* \"#utility.yul\":18110:18268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18274:18421   */\n    tag_592:\n        /* \"#utility.yul\":18369:18414   */\n      tag_806\n        /* \"#utility.yul\":18408:18413   */\n      dup2\n        /* \"#utility.yul\":18369:18414   */\n      tag_591\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":18364:18367   */\n      dup3\n        /* \"#utility.yul\":18357:18415   */\n      mstore\n        /* \"#utility.yul\":18274:18421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18427:18775   */\n    tag_334:\n        /* \"#utility.yul\":18556:18560   */\n      0x00\n        /* \"#utility.yul\":18594:18596   */\n      0x40\n        /* \"#utility.yul\":18583:18592   */\n      dup3\n        /* \"#utility.yul\":18579:18597   */\n      add\n        /* \"#utility.yul\":18571:18597   */\n      swap1\n      pop\n        /* \"#utility.yul\":18607:18678   */\n      tag_808\n        /* \"#utility.yul\":18675:18676   */\n      0x00\n        /* \"#utility.yul\":18664:18673   */\n      dup4\n        /* \"#utility.yul\":18660:18677   */\n      add\n        /* \"#utility.yul\":18651:18657   */\n      dup6\n        /* \"#utility.yul\":18607:18678   */\n      tag_555\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":18688:18768   */\n      tag_809\n        /* \"#utility.yul\":18764:18766   */\n      0x20\n        /* \"#utility.yul\":18753:18762   */\n      dup4\n        /* \"#utility.yul\":18749:18767   */\n      add\n        /* \"#utility.yul\":18740:18746   */\n      dup5\n        /* \"#utility.yul\":18688:18768   */\n      tag_592\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":18427:18775   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18781:18951   */\n    tag_593:\n        /* \"#utility.yul\":18921:18943   */\n      0x686173206e6f7420676f7420612070726f666974000000000000000000000000\n        /* \"#utility.yul\":18917:18918   */\n      0x00\n        /* \"#utility.yul\":18909:18915   */\n      dup3\n        /* \"#utility.yul\":18905:18919   */\n      add\n        /* \"#utility.yul\":18898:18944   */\n      mstore\n        /* \"#utility.yul\":18781:18951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18957:19323   */\n    tag_594:\n        /* \"#utility.yul\":19099:19102   */\n      0x00\n        /* \"#utility.yul\":19120:19187   */\n      tag_812\n        /* \"#utility.yul\":19184:19186   */\n      0x14\n        /* \"#utility.yul\":19179:19182   */\n      dup4\n        /* \"#utility.yul\":19120:19187   */\n      tag_559\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":19113:19187   */\n      swap2\n      pop\n        /* \"#utility.yul\":19196:19289   */\n      tag_813\n        /* \"#utility.yul\":19285:19288   */\n      dup3\n        /* \"#utility.yul\":19196:19289   */\n      tag_593\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":19314:19316   */\n      0x20\n        /* \"#utility.yul\":19309:19312   */\n      dup3\n        /* \"#utility.yul\":19305:19317   */\n      add\n        /* \"#utility.yul\":19298:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":18957:19323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19329:19748   */\n    tag_341:\n        /* \"#utility.yul\":19495:19499   */\n      0x00\n        /* \"#utility.yul\":19533:19535   */\n      0x20\n        /* \"#utility.yul\":19522:19531   */\n      dup3\n        /* \"#utility.yul\":19518:19536   */\n      add\n        /* \"#utility.yul\":19510:19536   */\n      swap1\n      pop\n        /* \"#utility.yul\":19582:19591   */\n      dup2\n        /* \"#utility.yul\":19576:19580   */\n      dup2\n        /* \"#utility.yul\":19572:19592   */\n      sub\n        /* \"#utility.yul\":19568:19569   */\n      0x00\n        /* \"#utility.yul\":19557:19566   */\n      dup4\n        /* \"#utility.yul\":19553:19570   */\n      add\n        /* \"#utility.yul\":19546:19593   */\n      mstore\n        /* \"#utility.yul\":19610:19741   */\n      tag_815\n        /* \"#utility.yul\":19736:19740   */\n      dup2\n        /* \"#utility.yul\":19610:19741   */\n      tag_594\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":19602:19741   */\n      swap1\n      pop\n        /* \"#utility.yul\":19329:19748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19754:19923   */\n    tag_595:\n        /* \"#utility.yul\":19894:19915   */\n      0x696e73756666696369656e7420616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":19890:19891   */\n      0x00\n        /* \"#utility.yul\":19882:19888   */\n      dup3\n        /* \"#utility.yul\":19878:19892   */\n      add\n        /* \"#utility.yul\":19871:19916   */\n      mstore\n        /* \"#utility.yul\":19754:19923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19929:20295   */\n    tag_596:\n        /* \"#utility.yul\":20071:20074   */\n      0x00\n        /* \"#utility.yul\":20092:20159   */\n      tag_818\n        /* \"#utility.yul\":20156:20158   */\n      0x13\n        /* \"#utility.yul\":20151:20154   */\n      dup4\n        /* \"#utility.yul\":20092:20159   */\n      tag_559\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":20085:20159   */\n      swap2\n      pop\n        /* \"#utility.yul\":20168:20261   */\n      tag_819\n        /* \"#utility.yul\":20257:20260   */\n      dup3\n        /* \"#utility.yul\":20168:20261   */\n      tag_595\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":20286:20288   */\n      0x20\n        /* \"#utility.yul\":20281:20284   */\n      dup3\n        /* \"#utility.yul\":20277:20289   */\n      add\n        /* \"#utility.yul\":20270:20289   */\n      swap1\n      pop\n        /* \"#utility.yul\":19929:20295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20301:20720   */\n    tag_348:\n        /* \"#utility.yul\":20467:20471   */\n      0x00\n        /* \"#utility.yul\":20505:20507   */\n      0x20\n        /* \"#utility.yul\":20494:20503   */\n      dup3\n        /* \"#utility.yul\":20490:20508   */\n      add\n        /* \"#utility.yul\":20482:20508   */\n      swap1\n      pop\n        /* \"#utility.yul\":20554:20563   */\n      dup2\n        /* \"#utility.yul\":20548:20552   */\n      dup2\n        /* \"#utility.yul\":20544:20564   */\n      sub\n        /* \"#utility.yul\":20540:20541   */\n      0x00\n        /* \"#utility.yul\":20529:20538   */\n      dup4\n        /* \"#utility.yul\":20525:20542   */\n      add\n        /* \"#utility.yul\":20518:20565   */\n      mstore\n        /* \"#utility.yul\":20582:20713   */\n      tag_821\n        /* \"#utility.yul\":20708:20712   */\n      dup2\n        /* \"#utility.yul\":20582:20713   */\n      tag_596\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":20574:20713   */\n      swap1\n      pop\n        /* \"#utility.yul\":20301:20720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20726:20917   */\n    tag_352:\n        /* \"#utility.yul\":20766:20770   */\n      0x00\n        /* \"#utility.yul\":20786:20806   */\n      tag_823\n        /* \"#utility.yul\":20804:20805   */\n      dup3\n        /* \"#utility.yul\":20786:20806   */\n      tag_552\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":20781:20806   */\n      swap2\n      pop\n        /* \"#utility.yul\":20820:20840   */\n      tag_824\n        /* \"#utility.yul\":20838:20839   */\n      dup4\n        /* \"#utility.yul\":20820:20840   */\n      tag_552\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":20815:20840   */\n      swap3\n      pop\n        /* \"#utility.yul\":20859:20860   */\n      dup3\n        /* \"#utility.yul\":20856:20857   */\n      dup3\n        /* \"#utility.yul\":20853:20861   */\n      lt\n        /* \"#utility.yul\":20850:20884   */\n      iszero\n      tag_825\n      jumpi\n        /* \"#utility.yul\":20864:20882   */\n      tag_826\n      tag_572\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":20850:20884   */\n    tag_825:\n        /* \"#utility.yul\":20909:20910   */\n      dup3\n        /* \"#utility.yul\":20906:20907   */\n      dup3\n        /* \"#utility.yul\":20902:20911   */\n      sub\n        /* \"#utility.yul\":20894:20911   */\n      swap1\n      pop\n        /* \"#utility.yul\":20726:20917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20923:21085   */\n    tag_597:\n        /* \"#utility.yul\":21063:21077   */\n      0x4445582044495341424c45440000000000000000000000000000000000000000\n        /* \"#utility.yul\":21059:21060   */\n      0x00\n        /* \"#utility.yul\":21051:21057   */\n      dup3\n        /* \"#utility.yul\":21047:21061   */\n      add\n        /* \"#utility.yul\":21040:21078   */\n      mstore\n        /* \"#utility.yul\":20923:21085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21091:21457   */\n    tag_598:\n        /* \"#utility.yul\":21233:21236   */\n      0x00\n        /* \"#utility.yul\":21254:21321   */\n      tag_829\n        /* \"#utility.yul\":21318:21320   */\n      0x0c\n        /* \"#utility.yul\":21313:21316   */\n      dup4\n        /* \"#utility.yul\":21254:21321   */\n      tag_559\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":21247:21321   */\n      swap2\n      pop\n        /* \"#utility.yul\":21330:21423   */\n      tag_830\n        /* \"#utility.yul\":21419:21422   */\n      dup3\n        /* \"#utility.yul\":21330:21423   */\n      tag_597\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":21448:21450   */\n      0x20\n        /* \"#utility.yul\":21443:21446   */\n      dup3\n        /* \"#utility.yul\":21439:21451   */\n      add\n        /* \"#utility.yul\":21432:21451   */\n      swap1\n      pop\n        /* \"#utility.yul\":21091:21457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21463:21882   */\n    tag_377:\n        /* \"#utility.yul\":21629:21633   */\n      0x00\n        /* \"#utility.yul\":21667:21669   */\n      0x20\n        /* \"#utility.yul\":21656:21665   */\n      dup3\n        /* \"#utility.yul\":21652:21670   */\n      add\n        /* \"#utility.yul\":21644:21670   */\n      swap1\n      pop\n        /* \"#utility.yul\":21716:21725   */\n      dup2\n        /* \"#utility.yul\":21710:21714   */\n      dup2\n        /* \"#utility.yul\":21706:21726   */\n      sub\n        /* \"#utility.yul\":21702:21703   */\n      0x00\n        /* \"#utility.yul\":21691:21700   */\n      dup4\n        /* \"#utility.yul\":21687:21704   */\n      add\n        /* \"#utility.yul\":21680:21727   */\n      mstore\n        /* \"#utility.yul\":21744:21875   */\n      tag_832\n        /* \"#utility.yul\":21870:21874   */\n      dup2\n        /* \"#utility.yul\":21744:21875   */\n      tag_598\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":21736:21875   */\n      swap1\n      pop\n        /* \"#utility.yul\":21463:21882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21888:22123   */\n    tag_599:\n        /* \"#utility.yul\":22028:22062   */\n      0x696e73756666696369656e7420616d6f756e74206f66204365726f73526f7574\n        /* \"#utility.yul\":22024:22025   */\n      0x00\n        /* \"#utility.yul\":22016:22022   */\n      dup3\n        /* \"#utility.yul\":22012:22026   */\n      add\n        /* \"#utility.yul\":22005:22063   */\n      mstore\n        /* \"#utility.yul\":22097:22115   */\n      0x657220696e206365727420746f6b656e00000000000000000000000000000000\n        /* \"#utility.yul\":22092:22094   */\n      0x20\n        /* \"#utility.yul\":22084:22090   */\n      dup3\n        /* \"#utility.yul\":22080:22095   */\n      add\n        /* \"#utility.yul\":22073:22116   */\n      mstore\n        /* \"#utility.yul\":21888:22123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22129:22495   */\n    tag_600:\n        /* \"#utility.yul\":22271:22274   */\n      0x00\n        /* \"#utility.yul\":22292:22359   */\n      tag_835\n        /* \"#utility.yul\":22356:22358   */\n      0x30\n        /* \"#utility.yul\":22351:22354   */\n      dup4\n        /* \"#utility.yul\":22292:22359   */\n      tag_559\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":22285:22359   */\n      swap2\n      pop\n        /* \"#utility.yul\":22368:22461   */\n      tag_836\n        /* \"#utility.yul\":22457:22460   */\n      dup3\n        /* \"#utility.yul\":22368:22461   */\n      tag_599\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":22486:22488   */\n      0x40\n        /* \"#utility.yul\":22481:22484   */\n      dup3\n        /* \"#utility.yul\":22477:22489   */\n      add\n        /* \"#utility.yul\":22470:22489   */\n      swap1\n      pop\n        /* \"#utility.yul\":22129:22495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22501:22920   */\n    tag_384:\n        /* \"#utility.yul\":22667:22671   */\n      0x00\n        /* \"#utility.yul\":22705:22707   */\n      0x20\n        /* \"#utility.yul\":22694:22703   */\n      dup3\n        /* \"#utility.yul\":22690:22708   */\n      add\n        /* \"#utility.yul\":22682:22708   */\n      swap1\n      pop\n        /* \"#utility.yul\":22754:22763   */\n      dup2\n        /* \"#utility.yul\":22748:22752   */\n      dup2\n        /* \"#utility.yul\":22744:22764   */\n      sub\n        /* \"#utility.yul\":22740:22741   */\n      0x00\n        /* \"#utility.yul\":22729:22738   */\n      dup4\n        /* \"#utility.yul\":22725:22742   */\n      add\n        /* \"#utility.yul\":22718:22765   */\n      mstore\n        /* \"#utility.yul\":22782:22913   */\n      tag_838\n        /* \"#utility.yul\":22908:22912   */\n      dup2\n        /* \"#utility.yul\":22782:22913   */\n      tag_600\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":22774:22913   */\n      swap1\n      pop\n        /* \"#utility.yul\":22501:22920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22926:23258   */\n    tag_393:\n        /* \"#utility.yul\":23047:23051   */\n      0x00\n        /* \"#utility.yul\":23085:23087   */\n      0x40\n        /* \"#utility.yul\":23074:23083   */\n      dup3\n        /* \"#utility.yul\":23070:23088   */\n      add\n        /* \"#utility.yul\":23062:23088   */\n      swap1\n      pop\n        /* \"#utility.yul\":23098:23169   */\n      tag_840\n        /* \"#utility.yul\":23166:23167   */\n      0x00\n        /* \"#utility.yul\":23155:23164   */\n      dup4\n        /* \"#utility.yul\":23151:23168   */\n      add\n        /* \"#utility.yul\":23142:23148   */\n      dup6\n        /* \"#utility.yul\":23098:23169   */\n      tag_555\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":23179:23251   */\n      tag_841\n        /* \"#utility.yul\":23247:23249   */\n      0x20\n        /* \"#utility.yul\":23236:23245   */\n      dup4\n        /* \"#utility.yul\":23232:23250   */\n      add\n        /* \"#utility.yul\":23223:23229   */\n      dup5\n        /* \"#utility.yul\":23179:23251   */\n      tag_555\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":22926:23258   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23264:23489   */\n    tag_601:\n        /* \"#utility.yul\":23404:23438   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23400:23401   */\n      0x00\n        /* \"#utility.yul\":23392:23398   */\n      dup3\n        /* \"#utility.yul\":23388:23402   */\n      add\n        /* \"#utility.yul\":23381:23439   */\n      mstore\n        /* \"#utility.yul\":23473:23481   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23468:23470   */\n      0x20\n        /* \"#utility.yul\":23460:23466   */\n      dup3\n        /* \"#utility.yul\":23456:23471   */\n      add\n        /* \"#utility.yul\":23449:23482   */\n      mstore\n        /* \"#utility.yul\":23264:23489   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23495:23861   */\n    tag_602:\n        /* \"#utility.yul\":23637:23640   */\n      0x00\n        /* \"#utility.yul\":23658:23725   */\n      tag_844\n        /* \"#utility.yul\":23722:23724   */\n      0x26\n        /* \"#utility.yul\":23717:23720   */\n      dup4\n        /* \"#utility.yul\":23658:23725   */\n      tag_559\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":23651:23725   */\n      swap2\n      pop\n        /* \"#utility.yul\":23734:23827   */\n      tag_845\n        /* \"#utility.yul\":23823:23826   */\n      dup3\n        /* \"#utility.yul\":23734:23827   */\n      tag_601\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":23852:23854   */\n      0x40\n        /* \"#utility.yul\":23847:23850   */\n      dup3\n        /* \"#utility.yul\":23843:23855   */\n      add\n        /* \"#utility.yul\":23836:23855   */\n      swap1\n      pop\n        /* \"#utility.yul\":23495:23861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23867:24286   */\n    tag_417:\n        /* \"#utility.yul\":24033:24037   */\n      0x00\n        /* \"#utility.yul\":24071:24073   */\n      0x20\n        /* \"#utility.yul\":24060:24069   */\n      dup3\n        /* \"#utility.yul\":24056:24074   */\n      add\n        /* \"#utility.yul\":24048:24074   */\n      swap1\n      pop\n        /* \"#utility.yul\":24120:24129   */\n      dup2\n        /* \"#utility.yul\":24114:24118   */\n      dup2\n        /* \"#utility.yul\":24110:24130   */\n      sub\n        /* \"#utility.yul\":24106:24107   */\n      0x00\n        /* \"#utility.yul\":24095:24104   */\n      dup4\n        /* \"#utility.yul\":24091:24108   */\n      add\n        /* \"#utility.yul\":24084:24131   */\n      mstore\n        /* \"#utility.yul\":24148:24279   */\n      tag_847\n        /* \"#utility.yul\":24274:24278   */\n      dup2\n        /* \"#utility.yul\":24148:24279   */\n      tag_602\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":24140:24279   */\n      swap1\n      pop\n        /* \"#utility.yul\":23867:24286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24292:24524   */\n    tag_603:\n        /* \"#utility.yul\":24432:24466   */\n      0x76616c7565206d7573742062652067726561746572207468616e206d696e2075\n        /* \"#utility.yul\":24428:24429   */\n      0x00\n        /* \"#utility.yul\":24420:24426   */\n      dup3\n        /* \"#utility.yul\":24416:24430   */\n      add\n        /* \"#utility.yul\":24409:24467   */\n      mstore\n        /* \"#utility.yul\":24501:24516   */\n      0x6e7374616b6520616d6f756e7400000000000000000000000000000000000000\n        /* \"#utility.yul\":24496:24498   */\n      0x20\n        /* \"#utility.yul\":24488:24494   */\n      dup3\n        /* \"#utility.yul\":24484:24499   */\n      add\n        /* \"#utility.yul\":24477:24517   */\n      mstore\n        /* \"#utility.yul\":24292:24524   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24530:24896   */\n    tag_604:\n        /* \"#utility.yul\":24672:24675   */\n      0x00\n        /* \"#utility.yul\":24693:24760   */\n      tag_850\n        /* \"#utility.yul\":24757:24759   */\n      0x2d\n        /* \"#utility.yul\":24752:24755   */\n      dup4\n        /* \"#utility.yul\":24693:24760   */\n      tag_559\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":24686:24760   */\n      swap2\n      pop\n        /* \"#utility.yul\":24769:24862   */\n      tag_851\n        /* \"#utility.yul\":24858:24861   */\n      dup3\n        /* \"#utility.yul\":24769:24862   */\n      tag_603\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":24887:24889   */\n      0x40\n        /* \"#utility.yul\":24882:24885   */\n      dup3\n        /* \"#utility.yul\":24878:24890   */\n      add\n        /* \"#utility.yul\":24871:24890   */\n      swap1\n      pop\n        /* \"#utility.yul\":24530:24896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24902:25321   */\n    tag_433:\n        /* \"#utility.yul\":25068:25072   */\n      0x00\n        /* \"#utility.yul\":25106:25108   */\n      0x20\n        /* \"#utility.yul\":25095:25104   */\n      dup3\n        /* \"#utility.yul\":25091:25109   */\n      add\n        /* \"#utility.yul\":25083:25109   */\n      swap1\n      pop\n        /* \"#utility.yul\":25155:25164   */\n      dup2\n        /* \"#utility.yul\":25149:25153   */\n      dup2\n        /* \"#utility.yul\":25145:25165   */\n      sub\n        /* \"#utility.yul\":25141:25142   */\n      0x00\n        /* \"#utility.yul\":25130:25139   */\n      dup4\n        /* \"#utility.yul\":25126:25143   */\n      add\n        /* \"#utility.yul\":25119:25166   */\n      mstore\n        /* \"#utility.yul\":25183:25314   */\n      tag_853\n        /* \"#utility.yul\":25309:25313   */\n      dup2\n        /* \"#utility.yul\":25183:25314   */\n      tag_604\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":25175:25314   */\n      swap1\n      pop\n        /* \"#utility.yul\":24902:25321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25327:25557   */\n    tag_605:\n        /* \"#utility.yul\":25467:25501   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":25463:25464   */\n      0x00\n        /* \"#utility.yul\":25455:25461   */\n      dup3\n        /* \"#utility.yul\":25451:25465   */\n      add\n        /* \"#utility.yul\":25444:25502   */\n      mstore\n        /* \"#utility.yul\":25536:25549   */\n      0x6e697469616c697a696e67000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25531:25533   */\n      0x20\n        /* \"#utility.yul\":25523:25529   */\n      dup3\n        /* \"#utility.yul\":25519:25534   */\n      add\n        /* \"#utility.yul\":25512:25550   */\n      mstore\n        /* \"#utility.yul\":25327:25557   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25563:25929   */\n    tag_606:\n        /* \"#utility.yul\":25705:25708   */\n      0x00\n        /* \"#utility.yul\":25726:25793   */\n      tag_856\n        /* \"#utility.yul\":25790:25792   */\n      0x2b\n        /* \"#utility.yul\":25785:25788   */\n      dup4\n        /* \"#utility.yul\":25726:25793   */\n      tag_559\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":25719:25793   */\n      swap2\n      pop\n        /* \"#utility.yul\":25802:25895   */\n      tag_857\n        /* \"#utility.yul\":25891:25894   */\n      dup3\n        /* \"#utility.yul\":25802:25895   */\n      tag_605\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":25920:25922   */\n      0x40\n        /* \"#utility.yul\":25915:25918   */\n      dup3\n        /* \"#utility.yul\":25911:25923   */\n      add\n        /* \"#utility.yul\":25904:25923   */\n      swap1\n      pop\n        /* \"#utility.yul\":25563:25929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25935:26354   */\n    tag_448:\n        /* \"#utility.yul\":26101:26105   */\n      0x00\n        /* \"#utility.yul\":26139:26141   */\n      0x20\n        /* \"#utility.yul\":26128:26137   */\n      dup3\n        /* \"#utility.yul\":26124:26142   */\n      add\n        /* \"#utility.yul\":26116:26142   */\n      swap1\n      pop\n        /* \"#utility.yul\":26188:26197   */\n      dup2\n        /* \"#utility.yul\":26182:26186   */\n      dup2\n        /* \"#utility.yul\":26178:26198   */\n      sub\n        /* \"#utility.yul\":26174:26175   */\n      0x00\n        /* \"#utility.yul\":26163:26172   */\n      dup4\n        /* \"#utility.yul\":26159:26176   */\n      add\n        /* \"#utility.yul\":26152:26199   */\n      mstore\n        /* \"#utility.yul\":26216:26347   */\n      tag_859\n        /* \"#utility.yul\":26342:26346   */\n      dup2\n        /* \"#utility.yul\":26216:26347   */\n      tag_606\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":26208:26347   */\n      swap1\n      pop\n        /* \"#utility.yul\":25935:26354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26360:26601   */\n    tag_607:\n        /* \"#utility.yul\":26500:26534   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":26496:26497   */\n      0x00\n        /* \"#utility.yul\":26488:26494   */\n      dup3\n        /* \"#utility.yul\":26484:26498   */\n      add\n        /* \"#utility.yul\":26477:26535   */\n      mstore\n        /* \"#utility.yul\":26569:26593   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":26564:26566   */\n      0x20\n        /* \"#utility.yul\":26556:26562   */\n      dup3\n        /* \"#utility.yul\":26552:26567   */\n      add\n        /* \"#utility.yul\":26545:26594   */\n      mstore\n        /* \"#utility.yul\":26360:26601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26607:26973   */\n    tag_608:\n        /* \"#utility.yul\":26749:26752   */\n      0x00\n        /* \"#utility.yul\":26770:26837   */\n      tag_862\n        /* \"#utility.yul\":26834:26836   */\n      0x36\n        /* \"#utility.yul\":26829:26832   */\n      dup4\n        /* \"#utility.yul\":26770:26837   */\n      tag_559\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":26763:26837   */\n      swap2\n      pop\n        /* \"#utility.yul\":26846:26939   */\n      tag_863\n        /* \"#utility.yul\":26935:26938   */\n      dup3\n        /* \"#utility.yul\":26846:26939   */\n      tag_607\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":26964:26966   */\n      0x40\n        /* \"#utility.yul\":26959:26962   */\n      dup3\n        /* \"#utility.yul\":26955:26967   */\n      add\n        /* \"#utility.yul\":26948:26967   */\n      swap1\n      pop\n        /* \"#utility.yul\":26607:26973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26979:27398   */\n    tag_472:\n        /* \"#utility.yul\":27145:27149   */\n      0x00\n        /* \"#utility.yul\":27183:27185   */\n      0x20\n        /* \"#utility.yul\":27172:27181   */\n      dup3\n        /* \"#utility.yul\":27168:27186   */\n      add\n        /* \"#utility.yul\":27160:27186   */\n      swap1\n      pop\n        /* \"#utility.yul\":27232:27241   */\n      dup2\n        /* \"#utility.yul\":27226:27230   */\n      dup2\n        /* \"#utility.yul\":27222:27242   */\n      sub\n        /* \"#utility.yul\":27218:27219   */\n      0x00\n        /* \"#utility.yul\":27207:27216   */\n      dup4\n        /* \"#utility.yul\":27203:27220   */\n      add\n        /* \"#utility.yul\":27196:27243   */\n      mstore\n        /* \"#utility.yul\":27260:27391   */\n      tag_865\n        /* \"#utility.yul\":27386:27390   */\n      dup2\n        /* \"#utility.yul\":27260:27391   */\n      tag_608\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":27252:27391   */\n      swap1\n      pop\n        /* \"#utility.yul\":26979:27398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27404:27586   */\n    tag_609:\n        /* \"#utility.yul\":27544:27578   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":27540:27541   */\n      0x00\n        /* \"#utility.yul\":27532:27538   */\n      dup3\n        /* \"#utility.yul\":27528:27542   */\n      add\n        /* \"#utility.yul\":27521:27579   */\n      mstore\n        /* \"#utility.yul\":27404:27586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27592:27958   */\n    tag_610:\n        /* \"#utility.yul\":27734:27737   */\n      0x00\n        /* \"#utility.yul\":27755:27822   */\n      tag_868\n        /* \"#utility.yul\":27819:27821   */\n      0x20\n        /* \"#utility.yul\":27814:27817   */\n      dup4\n        /* \"#utility.yul\":27755:27822   */\n      tag_559\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":27748:27822   */\n      swap2\n      pop\n        /* \"#utility.yul\":27831:27924   */\n      tag_869\n        /* \"#utility.yul\":27920:27923   */\n      dup3\n        /* \"#utility.yul\":27831:27924   */\n      tag_609\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":27949:27951   */\n      0x20\n        /* \"#utility.yul\":27944:27947   */\n      dup3\n        /* \"#utility.yul\":27940:27952   */\n      add\n        /* \"#utility.yul\":27933:27952   */\n      swap1\n      pop\n        /* \"#utility.yul\":27592:27958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27964:28383   */\n    tag_482:\n        /* \"#utility.yul\":28130:28134   */\n      0x00\n        /* \"#utility.yul\":28168:28170   */\n      0x20\n        /* \"#utility.yul\":28157:28166   */\n      dup3\n        /* \"#utility.yul\":28153:28171   */\n      add\n        /* \"#utility.yul\":28145:28171   */\n      swap1\n      pop\n        /* \"#utility.yul\":28217:28226   */\n      dup2\n        /* \"#utility.yul\":28211:28215   */\n      dup2\n        /* \"#utility.yul\":28207:28227   */\n      sub\n        /* \"#utility.yul\":28203:28204   */\n      0x00\n        /* \"#utility.yul\":28192:28201   */\n      dup4\n        /* \"#utility.yul\":28188:28205   */\n      add\n        /* \"#utility.yul\":28181:28228   */\n      mstore\n        /* \"#utility.yul\":28245:28376   */\n      tag_871\n        /* \"#utility.yul\":28371:28375   */\n      dup2\n        /* \"#utility.yul\":28245:28376   */\n      tag_610\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":28237:28376   */\n      swap1\n      pop\n        /* \"#utility.yul\":27964:28383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28389:28505   */\n    tag_611:\n        /* \"#utility.yul\":28459:28480   */\n      tag_873\n        /* \"#utility.yul\":28474:28479   */\n      dup2\n        /* \"#utility.yul\":28459:28480   */\n      tag_557\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":28452:28457   */\n      dup2\n        /* \"#utility.yul\":28449:28481   */\n      eq\n        /* \"#utility.yul\":28439:28499   */\n      tag_874\n      jumpi\n        /* \"#utility.yul\":28495:28496   */\n      0x00\n        /* \"#utility.yul\":28492:28493   */\n      dup1\n        /* \"#utility.yul\":28485:28497   */\n      revert\n        /* \"#utility.yul\":28439:28499   */\n    tag_874:\n        /* \"#utility.yul\":28389:28505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28511:28648   */\n    tag_612:\n        /* \"#utility.yul\":28565:28570   */\n      0x00\n        /* \"#utility.yul\":28596:28602   */\n      dup2\n        /* \"#utility.yul\":28590:28603   */\n      mload\n        /* \"#utility.yul\":28581:28603   */\n      swap1\n      pop\n        /* \"#utility.yul\":28612:28642   */\n      tag_876\n        /* \"#utility.yul\":28636:28641   */\n      dup2\n        /* \"#utility.yul\":28612:28642   */\n      tag_611\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":28511:28648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28654:28999   */\n    tag_509:\n        /* \"#utility.yul\":28721:28727   */\n      0x00\n        /* \"#utility.yul\":28770:28772   */\n      0x20\n        /* \"#utility.yul\":28758:28767   */\n      dup3\n        /* \"#utility.yul\":28749:28756   */\n      dup5\n        /* \"#utility.yul\":28745:28768   */\n      sub\n        /* \"#utility.yul\":28741:28773   */\n      slt\n        /* \"#utility.yul\":28738:28857   */\n      iszero\n      tag_878\n      jumpi\n        /* \"#utility.yul\":28776:28855   */\n      tag_879\n      tag_546\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":28738:28857   */\n    tag_878:\n        /* \"#utility.yul\":28896:28897   */\n      0x00\n        /* \"#utility.yul\":28921:28982   */\n      tag_880\n        /* \"#utility.yul\":28974:28981   */\n      dup5\n        /* \"#utility.yul\":28965:28971   */\n      dup3\n        /* \"#utility.yul\":28954:28963   */\n      dup6\n        /* \"#utility.yul\":28950:28972   */\n      add\n        /* \"#utility.yul\":28921:28982   */\n      tag_612\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":28911:28982   */\n      swap2\n      pop\n        /* \"#utility.yul\":28867:28992   */\n      pop\n        /* \"#utility.yul\":28654:28999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29005:29234   */\n    tag_613:\n        /* \"#utility.yul\":29145:29179   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":29141:29142   */\n      0x00\n        /* \"#utility.yul\":29133:29139   */\n      dup3\n        /* \"#utility.yul\":29129:29143   */\n      add\n        /* \"#utility.yul\":29122:29180   */\n      mstore\n        /* \"#utility.yul\":29214:29226   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29209:29211   */\n      0x20\n        /* \"#utility.yul\":29201:29207   */\n      dup3\n        /* \"#utility.yul\":29197:29212   */\n      add\n        /* \"#utility.yul\":29190:29227   */\n      mstore\n        /* \"#utility.yul\":29005:29234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29240:29606   */\n    tag_614:\n        /* \"#utility.yul\":29382:29385   */\n      0x00\n        /* \"#utility.yul\":29403:29470   */\n      tag_883\n        /* \"#utility.yul\":29467:29469   */\n      0x2a\n        /* \"#utility.yul\":29462:29465   */\n      dup4\n        /* \"#utility.yul\":29403:29470   */\n      tag_559\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":29396:29470   */\n      swap2\n      pop\n        /* \"#utility.yul\":29479:29572   */\n      tag_884\n        /* \"#utility.yul\":29568:29571   */\n      dup3\n        /* \"#utility.yul\":29479:29572   */\n      tag_613\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":29597:29599   */\n      0x40\n        /* \"#utility.yul\":29592:29595   */\n      dup3\n        /* \"#utility.yul\":29588:29600   */\n      add\n        /* \"#utility.yul\":29581:29600   */\n      swap1\n      pop\n        /* \"#utility.yul\":29240:29606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29612:30031   */\n    tag_512:\n        /* \"#utility.yul\":29778:29782   */\n      0x00\n        /* \"#utility.yul\":29816:29818   */\n      0x20\n        /* \"#utility.yul\":29805:29814   */\n      dup3\n        /* \"#utility.yul\":29801:29819   */\n      add\n        /* \"#utility.yul\":29793:29819   */\n      swap1\n      pop\n        /* \"#utility.yul\":29865:29874   */\n      dup2\n        /* \"#utility.yul\":29859:29863   */\n      dup2\n        /* \"#utility.yul\":29855:29875   */\n      sub\n        /* \"#utility.yul\":29851:29852   */\n      0x00\n        /* \"#utility.yul\":29840:29849   */\n      dup4\n        /* \"#utility.yul\":29836:29853   */\n      add\n        /* \"#utility.yul\":29829:29876   */\n      mstore\n        /* \"#utility.yul\":29893:30024   */\n      tag_886\n        /* \"#utility.yul\":30019:30023   */\n      dup2\n        /* \"#utility.yul\":29893:30024   */\n      tag_614\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":29885:30024   */\n      swap1\n      pop\n        /* \"#utility.yul\":29612:30031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30037:30262   */\n    tag_615:\n        /* \"#utility.yul\":30177:30211   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30173:30174   */\n      0x00\n        /* \"#utility.yul\":30165:30171   */\n      dup3\n        /* \"#utility.yul\":30161:30175   */\n      add\n        /* \"#utility.yul\":30154:30212   */\n      mstore\n        /* \"#utility.yul\":30246:30254   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30241:30243   */\n      0x20\n        /* \"#utility.yul\":30233:30239   */\n      dup3\n        /* \"#utility.yul\":30229:30244   */\n      add\n        /* \"#utility.yul\":30222:30255   */\n      mstore\n        /* \"#utility.yul\":30037:30262   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30268:30634   */\n    tag_616:\n        /* \"#utility.yul\":30410:30413   */\n      0x00\n        /* \"#utility.yul\":30431:30498   */\n      tag_889\n        /* \"#utility.yul\":30495:30497   */\n      0x26\n        /* \"#utility.yul\":30490:30493   */\n      dup4\n        /* \"#utility.yul\":30431:30498   */\n      tag_559\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":30424:30498   */\n      swap2\n      pop\n        /* \"#utility.yul\":30507:30600   */\n      tag_890\n        /* \"#utility.yul\":30596:30599   */\n      dup3\n        /* \"#utility.yul\":30507:30600   */\n      tag_615\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":30625:30627   */\n      0x40\n        /* \"#utility.yul\":30620:30623   */\n      dup3\n        /* \"#utility.yul\":30616:30628   */\n      add\n        /* \"#utility.yul\":30609:30628   */\n      swap1\n      pop\n        /* \"#utility.yul\":30268:30634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30640:31059   */\n    tag_520:\n        /* \"#utility.yul\":30806:30810   */\n      0x00\n        /* \"#utility.yul\":30844:30846   */\n      0x20\n        /* \"#utility.yul\":30833:30842   */\n      dup3\n        /* \"#utility.yul\":30829:30847   */\n      add\n        /* \"#utility.yul\":30821:30847   */\n      swap1\n      pop\n        /* \"#utility.yul\":30893:30902   */\n      dup2\n        /* \"#utility.yul\":30887:30891   */\n      dup2\n        /* \"#utility.yul\":30883:30903   */\n      sub\n        /* \"#utility.yul\":30879:30880   */\n      0x00\n        /* \"#utility.yul\":30868:30877   */\n      dup4\n        /* \"#utility.yul\":30864:30881   */\n      add\n        /* \"#utility.yul\":30857:30904   */\n      mstore\n        /* \"#utility.yul\":30921:31052   */\n      tag_892\n        /* \"#utility.yul\":31047:31051   */\n      dup2\n        /* \"#utility.yul\":30921:31052   */\n      tag_616\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":30913:31052   */\n      swap1\n      pop\n        /* \"#utility.yul\":30640:31059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31065:31163   */\n    tag_617:\n        /* \"#utility.yul\":31116:31122   */\n      0x00\n        /* \"#utility.yul\":31150:31155   */\n      dup2\n        /* \"#utility.yul\":31144:31156   */\n      mload\n        /* \"#utility.yul\":31134:31156   */\n      swap1\n      pop\n        /* \"#utility.yul\":31065:31163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31169:31316   */\n    tag_618:\n        /* \"#utility.yul\":31270:31281   */\n      0x00\n        /* \"#utility.yul\":31307:31310   */\n      dup2\n        /* \"#utility.yul\":31292:31310   */\n      swap1\n      pop\n        /* \"#utility.yul\":31169:31316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31322:31629   */\n    tag_619:\n        /* \"#utility.yul\":31390:31391   */\n      0x00\n        /* \"#utility.yul\":31400:31513   */\n    tag_896:\n        /* \"#utility.yul\":31414:31420   */\n      dup4\n        /* \"#utility.yul\":31411:31412   */\n      dup2\n        /* \"#utility.yul\":31408:31421   */\n      lt\n        /* \"#utility.yul\":31400:31513   */\n      iszero\n      tag_898\n      jumpi\n        /* \"#utility.yul\":31499:31500   */\n      dup1\n        /* \"#utility.yul\":31494:31497   */\n      dup3\n        /* \"#utility.yul\":31490:31501   */\n      add\n        /* \"#utility.yul\":31484:31502   */\n      mload\n        /* \"#utility.yul\":31480:31481   */\n      dup2\n        /* \"#utility.yul\":31475:31478   */\n      dup5\n        /* \"#utility.yul\":31471:31482   */\n      add\n        /* \"#utility.yul\":31464:31503   */\n      mstore\n        /* \"#utility.yul\":31436:31438   */\n      0x20\n        /* \"#utility.yul\":31433:31434   */\n      dup2\n        /* \"#utility.yul\":31429:31439   */\n      add\n        /* \"#utility.yul\":31424:31439   */\n      swap1\n      pop\n        /* \"#utility.yul\":31400:31513   */\n      jump(tag_896)\n    tag_898:\n        /* \"#utility.yul\":31531:31537   */\n      dup4\n        /* \"#utility.yul\":31528:31529   */\n      dup2\n        /* \"#utility.yul\":31525:31538   */\n      gt\n        /* \"#utility.yul\":31522:31623   */\n      iszero\n      tag_899\n      jumpi\n        /* \"#utility.yul\":31611:31612   */\n      0x00\n        /* \"#utility.yul\":31602:31608   */\n      dup5\n        /* \"#utility.yul\":31597:31600   */\n      dup5\n        /* \"#utility.yul\":31593:31609   */\n      add\n        /* \"#utility.yul\":31586:31613   */\n      mstore\n        /* \"#utility.yul\":31522:31623   */\n    tag_899:\n        /* \"#utility.yul\":31371:31629   */\n      pop\n        /* \"#utility.yul\":31322:31629   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31635:32008   */\n    tag_620:\n        /* \"#utility.yul\":31739:31742   */\n      0x00\n        /* \"#utility.yul\":31767:31805   */\n      tag_901\n        /* \"#utility.yul\":31799:31804   */\n      dup3\n        /* \"#utility.yul\":31767:31805   */\n      tag_617\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":31821:31909   */\n      tag_902\n        /* \"#utility.yul\":31902:31908   */\n      dup2\n        /* \"#utility.yul\":31897:31900   */\n      dup6\n        /* \"#utility.yul\":31821:31909   */\n      tag_618\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":31814:31909   */\n      swap4\n      pop\n        /* \"#utility.yul\":31918:31970   */\n      tag_903\n        /* \"#utility.yul\":31963:31969   */\n      dup2\n        /* \"#utility.yul\":31958:31961   */\n      dup6\n        /* \"#utility.yul\":31951:31955   */\n      0x20\n        /* \"#utility.yul\":31944:31949   */\n      dup7\n        /* \"#utility.yul\":31940:31956   */\n      add\n        /* \"#utility.yul\":31918:31970   */\n      tag_619\n      jump\t// in\n    tag_903:\n        /* \"#utility.yul\":31995:32001   */\n      dup1\n        /* \"#utility.yul\":31990:31993   */\n      dup5\n        /* \"#utility.yul\":31986:32002   */\n      add\n        /* \"#utility.yul\":31979:32002   */\n      swap2\n      pop\n        /* \"#utility.yul\":31743:32008   */\n      pop\n        /* \"#utility.yul\":31635:32008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32014:32285   */\n    tag_522:\n        /* \"#utility.yul\":32144:32147   */\n      0x00\n        /* \"#utility.yul\":32166:32259   */\n      tag_905\n        /* \"#utility.yul\":32255:32258   */\n      dup3\n        /* \"#utility.yul\":32246:32252   */\n      dup5\n        /* \"#utility.yul\":32166:32259   */\n      tag_620\n      jump\t// in\n    tag_905:\n        /* \"#utility.yul\":32159:32259   */\n      swap2\n      pop\n        /* \"#utility.yul\":32276:32279   */\n      dup2\n        /* \"#utility.yul\":32269:32279   */\n      swap1\n      pop\n        /* \"#utility.yul\":32014:32285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32291:32470   */\n    tag_621:\n        /* \"#utility.yul\":32431:32462   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":32427:32428   */\n      0x00\n        /* \"#utility.yul\":32419:32425   */\n      dup3\n        /* \"#utility.yul\":32415:32429   */\n      add\n        /* \"#utility.yul\":32408:32463   */\n      mstore\n        /* \"#utility.yul\":32291:32470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32476:32842   */\n    tag_622:\n        /* \"#utility.yul\":32618:32621   */\n      0x00\n        /* \"#utility.yul\":32639:32706   */\n      tag_908\n        /* \"#utility.yul\":32703:32705   */\n      0x1d\n        /* \"#utility.yul\":32698:32701   */\n      dup4\n        /* \"#utility.yul\":32639:32706   */\n      tag_559\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":32632:32706   */\n      swap2\n      pop\n        /* \"#utility.yul\":32715:32808   */\n      tag_909\n        /* \"#utility.yul\":32804:32807   */\n      dup3\n        /* \"#utility.yul\":32715:32808   */\n      tag_621\n      jump\t// in\n    tag_909:\n        /* \"#utility.yul\":32833:32835   */\n      0x20\n        /* \"#utility.yul\":32828:32831   */\n      dup3\n        /* \"#utility.yul\":32824:32836   */\n      add\n        /* \"#utility.yul\":32817:32836   */\n      swap1\n      pop\n        /* \"#utility.yul\":32476:32842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32848:33267   */\n    tag_535:\n        /* \"#utility.yul\":33014:33018   */\n      0x00\n        /* \"#utility.yul\":33052:33054   */\n      0x20\n        /* \"#utility.yul\":33041:33050   */\n      dup3\n        /* \"#utility.yul\":33037:33055   */\n      add\n        /* \"#utility.yul\":33029:33055   */\n      swap1\n      pop\n        /* \"#utility.yul\":33101:33110   */\n      dup2\n        /* \"#utility.yul\":33095:33099   */\n      dup2\n        /* \"#utility.yul\":33091:33111   */\n      sub\n        /* \"#utility.yul\":33087:33088   */\n      0x00\n        /* \"#utility.yul\":33076:33085   */\n      dup4\n        /* \"#utility.yul\":33072:33089   */\n      add\n        /* \"#utility.yul\":33065:33112   */\n      mstore\n        /* \"#utility.yul\":33129:33260   */\n      tag_911\n        /* \"#utility.yul\":33255:33259   */\n      dup2\n        /* \"#utility.yul\":33129:33260   */\n      tag_622\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":33121:33260   */\n      swap1\n      pop\n        /* \"#utility.yul\":32848:33267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33273:33372   */\n    tag_623:\n        /* \"#utility.yul\":33325:33331   */\n      0x00\n        /* \"#utility.yul\":33359:33364   */\n      dup2\n        /* \"#utility.yul\":33353:33365   */\n      mload\n        /* \"#utility.yul\":33343:33365   */\n      swap1\n      pop\n        /* \"#utility.yul\":33273:33372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33378:33742   */\n    tag_624:\n        /* \"#utility.yul\":33466:33469   */\n      0x00\n        /* \"#utility.yul\":33494:33533   */\n      tag_914\n        /* \"#utility.yul\":33527:33532   */\n      dup3\n        /* \"#utility.yul\":33494:33533   */\n      tag_623\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":33549:33620   */\n      tag_915\n        /* \"#utility.yul\":33613:33619   */\n      dup2\n        /* \"#utility.yul\":33608:33611   */\n      dup6\n        /* \"#utility.yul\":33549:33620   */\n      tag_559\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":33542:33620   */\n      swap4\n      pop\n        /* \"#utility.yul\":33629:33681   */\n      tag_916\n        /* \"#utility.yul\":33674:33680   */\n      dup2\n        /* \"#utility.yul\":33669:33672   */\n      dup6\n        /* \"#utility.yul\":33662:33666   */\n      0x20\n        /* \"#utility.yul\":33655:33660   */\n      dup7\n        /* \"#utility.yul\":33651:33667   */\n      add\n        /* \"#utility.yul\":33629:33681   */\n      tag_619\n      jump\t// in\n    tag_916:\n        /* \"#utility.yul\":33706:33735   */\n      tag_917\n        /* \"#utility.yul\":33728:33734   */\n      dup2\n        /* \"#utility.yul\":33706:33735   */\n      tag_581\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":33701:33704   */\n      dup5\n        /* \"#utility.yul\":33697:33736   */\n      add\n        /* \"#utility.yul\":33690:33736   */\n      swap2\n      pop\n        /* \"#utility.yul\":33470:33742   */\n      pop\n        /* \"#utility.yul\":33378:33742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33748:34061   */\n    tag_544:\n        /* \"#utility.yul\":33861:33865   */\n      0x00\n        /* \"#utility.yul\":33899:33901   */\n      0x20\n        /* \"#utility.yul\":33888:33897   */\n      dup3\n        /* \"#utility.yul\":33884:33902   */\n      add\n        /* \"#utility.yul\":33876:33902   */\n      swap1\n      pop\n        /* \"#utility.yul\":33948:33957   */\n      dup2\n        /* \"#utility.yul\":33942:33946   */\n      dup2\n        /* \"#utility.yul\":33938:33958   */\n      sub\n        /* \"#utility.yul\":33934:33935   */\n      0x00\n        /* \"#utility.yul\":33923:33932   */\n      dup4\n        /* \"#utility.yul\":33919:33936   */\n      add\n        /* \"#utility.yul\":33912:33959   */\n      mstore\n        /* \"#utility.yul\":33976:34054   */\n      tag_919\n        /* \"#utility.yul\":34049:34053   */\n      dup2\n        /* \"#utility.yul\":34040:34046   */\n      dup5\n        /* \"#utility.yul\":33976:34054   */\n      tag_624\n      jump\t// in\n    tag_919:\n        /* \"#utility.yul\":33968:34054   */\n      swap1\n      pop\n        /* \"#utility.yul\":33748:34061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1a91f20f08d6bef89e170b12bd14697175cbbb6a5816417893a5e16df04d56564736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B18 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796F69AA GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xAC78467C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDB518DB2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB518DB2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xF586C6D9 EQ PUSH2 0x734 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xAC78467C EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xBCDEF0A4 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xC0AB44F6 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x673 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x97FD9BE7 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xAB43C3DF EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xAB89B6AF EQ PUSH2 0x593 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x796F69AA EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x7C0A75E5 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x854CF3CF EQ PUSH2 0x4D5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x483D45BD GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x665A21DB GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x665A21DB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x69D2DA9C EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x6EECFDAA EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x458 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x483D45BD EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x65CACAA4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x223888C1 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x223888C1 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x3AF82C59 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4339BC30 EQ PUSH2 0x306 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3550D56 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xC632BBE EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x23A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x3AD2 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x17C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x3BAA JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x3BD7 JUMP JUMPDEST PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x20BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67B PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x2C59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x749 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1101596C CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP3 SWAP2 SWAP1 PUSH2 0x3D20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA9A SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x223888C1 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xB85 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xBB2 JUMPI POP PUSH2 0xB94 ADDRESS PUSH2 0x30D6 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE8 SWAP1 PUSH2 0x3DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC36 PUSH2 0x30F9 JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x3152 JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x31AB JUMP JUMPDEST DUP8 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE17 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE62 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAD DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEF8 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF43 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFAE PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1145 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1187 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x11F7 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C7 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x79025DAB199855650264C602DE305DCF5C292B8E5B4470EF271724A79D0343F4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134A PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x13BA PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x148A PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x646D70535C6B451B92021874A72ABD441F122BA1C0B8F24D074352BD169FAD3F DUP2 PUSH1 0x40 MLOAD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1520 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1590 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1600 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16D0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x175F PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x90252124B346C6D6C466196D470D708D0C0C7026FE5BA62A2E01B5ADBF39E279 DUP2 PUSH1 0x40 MLOAD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17CB PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x17D5 PUSH1 0x0 PUSH2 0x33D1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x3353 JUMP JUMPDEST DUP1 PUSH1 0xD0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x9A33114B94F1C4C094352DEFF0082E220C977361E70D556DFB5565AD4678CE4D DUP2 PUSH1 0x40 MLOAD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1899 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DC SWAP1 PUSH2 0x3E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AA2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1ADC JUMPI PUSH2 0x1ADB PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B4D JUMPI PUSH2 0x1B4C PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP5 DUP7 DUP6 DUP11 PUSH2 0x12C TIMESTAMP PUSH2 0x1BD9 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x41D9 JUMP JUMPDEST SWAP1 POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1CDF JUMPI PUSH2 0x1CDE PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1CF4 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46FAA33C DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E23 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EA9 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1EE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDF SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1F2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F25 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1F85 DUP4 ADDRESS DUP5 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3497 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F4F21E2 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE2 SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2001 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2025 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x20A9 SWAP3 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x2105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FC SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218B SWAP1 PUSH2 0x4367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F0 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2231 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST LT ISZERO PUSH2 0x2272 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2269 SWAP1 PUSH2 0x43D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22BF DUP3 DUP3 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3520 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x230E SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2394 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B2 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2438 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246E SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x24BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B4 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56A3B5FA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255D SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2607 JUMPI PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53616373 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C3 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2604 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 LT PUSH2 0x269D JUMPI DUP3 SWAP2 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAC76D450 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x267F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26CF SWAP1 PUSH2 0x4473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2734 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2775 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST LT ISZERO PUSH2 0x27B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27AD SWAP1 PUSH2 0x4505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2805 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F4F21E2 CALLER DUP4 DUP6 PUSH2 0x2857 SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2874 SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B7 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP6 POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP6 PUSH2 0x2936 SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH2 0x2945 SWAP3 SWAP2 SWAP1 PUSH2 0x4525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299C SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x29B5 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2A3B JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A71 SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B1C SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81782DFF DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7B SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C43 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C61 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC8 SWAP1 PUSH2 0x45C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CDA DUP2 PUSH2 0x33D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE7 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D6D JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2DAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA3 SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DE9 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x34C4454 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E8B SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2ECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC4 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6F SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81782DFF DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FCE SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0x3096 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313F SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3150 PUSH2 0x35A6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3198 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A9 PUSH2 0x3607 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F1 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3202 PUSH2 0x3673 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x328E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324B SWAP3 SWAP2 SWAP1 PUSH2 0x3D20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3268 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x328C SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x32CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C4 SWAP1 PUSH2 0x4776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334E DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x32EC SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x335B PUSH2 0x3793 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3379 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C6 SWAP1 PUSH2 0x47E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x351A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x34B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x35A1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x353F SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x35F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35EC SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3605 PUSH2 0x3600 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x33D1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364D SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B9 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x378E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x374E SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST PUSH2 0x378D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3784 SWAP1 PUSH2 0x48CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x37AA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x37B3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x37F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37EF SWAP1 PUSH2 0x495F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3821 SWAP2 SWAP1 PUSH2 0x49F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x385E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3863 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3874 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3880 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x38E3 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x38DB JUMPI PUSH2 0x389B DUP6 PUSH2 0x38F6 JUMP JUMPDEST PUSH2 0x38DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D1 SWAP1 PUSH2 0x4A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x38EE JUMP JUMPDEST PUSH2 0x38ED DUP4 DUP4 PUSH2 0x3919 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x392C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3960 SWAP2 SWAP1 PUSH2 0x4AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A8 DUP3 PUSH2 0x397D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39B8 DUP2 PUSH2 0x399D JUMP JUMPDEST DUP2 EQ PUSH2 0x39C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39D5 DUP2 PUSH2 0x39AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39EE DUP2 PUSH2 0x39DB JUMP JUMPDEST DUP2 EQ PUSH2 0x39F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0B DUP2 PUSH2 0x39E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A28 JUMPI PUSH2 0x3A27 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A36 DUP6 DUP3 DUP7 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A47 DUP6 DUP3 DUP7 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5A DUP2 PUSH2 0x39DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A84 DUP2 PUSH2 0x399D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3ABB JUMPI PUSH2 0x3ABA PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AC9 DUP5 DUP3 DUP6 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3AF1 JUMPI PUSH2 0x3AF0 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AFF DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3B10 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3B21 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3B32 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B43 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3B54 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3B65 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B89 DUP2 PUSH2 0x3B74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC0 JUMPI PUSH2 0x3BBF PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BCE DUP5 DUP3 DUP6 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BF0 JUMPI PUSH2 0x3BEF PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BFE DUP7 DUP3 DUP8 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C0F DUP7 DUP3 DUP8 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C20 DUP7 DUP3 DUP8 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C71 PUSH1 0x1F DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7C DUP3 PUSH2 0x3C3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA0 DUP2 PUSH2 0x3C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3CBC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3CC9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3CD6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CED DUP2 PUSH2 0x39E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D09 JUMPI PUSH2 0x3D08 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D17 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D35 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3D42 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA5 PUSH1 0x2E DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3DB0 DUP3 PUSH2 0x3D49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD4 DUP2 PUSH2 0x3D98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E17 PUSH2 0x3E12 PUSH2 0x3E0D DUP5 PUSH2 0x3DDB JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH2 0x3DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E27 DUP2 PUSH2 0x3DFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4365526F757465722F44697361626C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7E PUSH1 0x11 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E89 DUP3 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EAD DUP2 PUSH2 0x3E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F4C DUP3 PUSH2 0x39DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F57 DUP4 PUSH2 0x39DB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3F8C JUMPI PUSH2 0x3F8B PUSH2 0x3F12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FCC DUP2 PUSH2 0x399D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FDE DUP4 DUP4 PUSH2 0x3FC3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4002 DUP3 PUSH2 0x3F97 JUMP JUMPDEST PUSH2 0x400C DUP2 DUP6 PUSH2 0x3FA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4017 DUP4 PUSH2 0x3FB3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4048 JUMPI DUP2 MLOAD PUSH2 0x402F DUP9 DUP3 PUSH2 0x3FD2 JUMP JUMPDEST SWAP8 POP PUSH2 0x403A DUP4 PUSH2 0x3FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x401B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x406A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4077 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3A51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4089 DUP2 DUP7 PUSH2 0x3FF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4098 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x40A5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40CE DUP3 PUSH2 0x40B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x40ED JUMPI PUSH2 0x40EC PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4100 PUSH2 0x3969 JUMP JUMPDEST SWAP1 POP PUSH2 0x410C DUP3 DUP3 PUSH2 0x40C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x412C JUMPI PUSH2 0x412B PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4155 PUSH2 0x4150 DUP5 PUSH2 0x4111 JUMP JUMPDEST PUSH2 0x40F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4178 JUMPI PUSH2 0x4177 PUSH2 0x413D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41A1 JUMPI DUP1 PUSH2 0x418D DUP9 DUP3 PUSH2 0x3CDE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x417A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x41C0 JUMPI PUSH2 0x41BF PUSH2 0x40AF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x41D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41EF JUMPI PUSH2 0x41EE PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x420D JUMPI PUSH2 0x420C PUSH2 0x3978 JUMP JUMPDEST JUMPDEST PUSH2 0x4219 DUP5 DUP3 DUP6 ADD PUSH2 0x41AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F76696465723A206E6F7420616C6C6F7765640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4258 PUSH1 0x15 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4263 DUP3 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4287 DUP2 PUSH2 0x424B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x42B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DC PUSH2 0x42D7 PUSH2 0x42D2 DUP5 PUSH2 0x42B7 JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH2 0x39DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42EC DUP2 PUSH2 0x42C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4307 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4314 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x686173206E6F7420676F7420612070726F666974000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4351 PUSH1 0x14 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x435C DUP3 PUSH2 0x431B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4380 DUP2 PUSH2 0x4344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43BD PUSH1 0x13 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x43C8 DUP3 PUSH2 0x4387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43EC DUP2 PUSH2 0x43B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FE DUP3 PUSH2 0x39DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4409 DUP4 PUSH2 0x39DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x441C JUMPI PUSH2 0x441B PUSH2 0x3F12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4445582044495341424C45440000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x445D PUSH1 0xC DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4468 DUP3 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x448C DUP2 PUSH2 0x4450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616D6F756E74206F66204365726F73526F7574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657220696E206365727420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44EF PUSH1 0x30 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x44FA DUP3 PUSH2 0x4493 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x451E DUP2 PUSH2 0x44E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x453A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4547 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AA PUSH1 0x26 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x45B5 DUP3 PUSH2 0x454E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D9 DUP2 PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E7374616B6520616D6F756E7400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463C PUSH1 0x2D DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4647 DUP3 PUSH2 0x45E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x462F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46CE PUSH1 0x2B DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x46D9 DUP3 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46FD DUP2 PUSH2 0x46C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4760 PUSH1 0x36 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x476B DUP3 PUSH2 0x4704 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x478F DUP2 PUSH2 0x4753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CC PUSH1 0x20 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x47D7 DUP3 PUSH2 0x4796 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47FB DUP2 PUSH2 0x47BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x480B DUP2 PUSH2 0x3B74 JUMP JUMPDEST DUP2 EQ PUSH2 0x4816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4828 DUP2 PUSH2 0x4802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4844 JUMPI PUSH2 0x4843 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4852 DUP5 DUP3 DUP6 ADD PUSH2 0x4819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B7 PUSH1 0x2A DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x48C2 DUP3 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48E6 DUP2 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4949 PUSH1 0x26 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4954 DUP3 PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4978 DUP2 PUSH2 0x493C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x49B3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4998 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x49C2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D3 DUP3 PUSH2 0x497F JUMP JUMPDEST PUSH2 0x49DD DUP2 DUP6 PUSH2 0x498A JUMP JUMPDEST SWAP4 POP PUSH2 0x49ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4995 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A05 DUP3 DUP5 PUSH2 0x49C8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A46 PUSH1 0x1D DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4A51 DUP3 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A75 DUP2 PUSH2 0x4A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4A7C JUMP JUMPDEST PUSH2 0x4A9C DUP2 DUP6 PUSH2 0x3C2A JUMP JUMPDEST SWAP4 POP PUSH2 0x4AAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4995 JUMP JUMPDEST PUSH2 0x4AB5 DUP2 PUSH2 0x40B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ADA DUP2 DUP5 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xA9 0x1F KECCAK256 CREATE DUP14 PUSH12 0xEF89E170B12BD14697175CBB 0xB6 0xA5 DUP2 PUSH5 0x17893A5E16 0xDF DIV 0xD5 PUSH6 0x64736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "657:10418:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 12537,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 13734,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_313": {
									"entryPoint": 12626,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_323": {
									"entryPoint": 13831,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_432": {
									"entryPoint": 12715,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_442": {
									"entryPoint": 13939,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1147": {
									"entryPoint": 14028,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 13139,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_738": {
									"entryPoint": 14227,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1477": {
									"entryPoint": 14617,
									"id": 1477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 13265,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBNBStakingPool_2423": {
									"entryPoint": 4006,
									"id": 2423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeDex_2309": {
									"entryPoint": 5400,
									"id": 2309,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePool_2353": {
									"entryPoint": 4479,
									"id": 2353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeProvider_2369": {
									"entryPoint": 6103,
									"id": 2369,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeVault_2239": {
									"entryPoint": 4930,
									"id": 2239,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimProfit_1935": {
									"entryPoint": 8383,
									"id": 1935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_1876": {
									"entryPoint": 2345,
									"id": 1876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositABNBcFrom_1829": {
									"entryPoint": 7705,
									"id": 1829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositABNBc_1844": {
									"entryPoint": 6234,
									"id": 1844,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposit_1780": {
									"entryPoint": 9128,
									"id": 1780,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_1302": {
									"entryPoint": 14259,
									"id": 1302,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1238": {
									"entryPoint": 14235,
									"id": 1238,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getBNBStakingPoolAddress_2483": {
									"entryPoint": 6457,
									"id": 2483,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCeToken_2442": {
									"entryPoint": 2303,
									"id": 2442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCertToken_2461": {
									"entryPoint": 6041,
									"id": 2461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDexAddress_2494": {
									"entryPoint": 6373,
									"id": 2494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPendingWithdrawalOf_2195": {
									"entryPoint": 7467,
									"id": 2195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPoolAddress_2472": {
									"entryPoint": 12460,
									"id": 2472,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getProfitFor_2169": {
									"entryPoint": 7632,
									"id": 2169,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getProvider_2431": {
									"entryPoint": 4865,
									"id": 2431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVaultAddress_2505": {
									"entryPoint": 5316,
									"id": 2505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWbnbAddress_2450": {
									"entryPoint": 5358,
									"id": 2450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getYieldFor_2182": {
									"entryPoint": 2735,
									"id": 2182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1672": {
									"entryPoint": 2900,
									"id": 1672,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@isContract_1166": {
									"entryPoint": 14582,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_486": {
									"entryPoint": 12502,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": 6415,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_348": {
									"entryPoint": 4907,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 6083,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_969": {
									"entryPoint": 12804,
									"id": 969,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_925": {
									"entryPoint": 13463,
									"id": 925,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_899": {
									"entryPoint": 13600,
									"id": 899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 11353,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1433": {
									"entryPoint": 14464,
									"id": 1433,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawABNBc_2027": {
									"entryPoint": 1887,
									"id": 2027,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawFor_2072": {
									"entryPoint": 10589,
									"id": 2072,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawWithSlippage_2157": {
									"entryPoint": 6499,
									"id": 2157,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1990": {
									"entryPoint": 11485,
									"id": 1990,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 16706,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 14790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 16811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 18457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 14844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 15582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 15013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 15058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 14865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 15319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 16857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 18478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 15274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 15603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 16338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 16323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 14971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 16375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 15232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 18888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 17123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 15902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 19079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 19001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 17220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 18259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 14929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 18937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 14986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 15648,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15527,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 17038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 15247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 15917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 19136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 19036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 18294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 17006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 14944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 17138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 17701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 16469,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 16630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 14697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 16657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 16307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 16279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 18815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 19068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 16362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 16290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 18826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 15402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 16193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 17395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 14749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 15220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 17079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 15835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 14717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 14811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 15845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 17089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 15868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 18837,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 16581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 15858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 16146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 16099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 16052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 16559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 16701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 14712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 14707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 16564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 17742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330": {
									"entryPoint": 17287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448": {
									"entryPoint": 15944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 18669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 15689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 18326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397": {
									"entryPoint": 17888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 18960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe": {
									"entryPoint": 17447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b": {
									"entryPoint": 18034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e": {
									"entryPoint": 17555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 18523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3": {
									"entryPoint": 17179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 15419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 18180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9": {
									"entryPoint": 16930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 14767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 18434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 14821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:34064:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:17",
														"type": ""
													}
												],
												"src": "466:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:17"
															},
															"nodeType": "YulIf",
															"src": "621:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:17",
														"type": ""
													}
												],
												"src": "568:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:17",
														"type": ""
													}
												],
												"src": "696:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:17",
														"type": ""
													}
												],
												"src": "841:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:17"
															},
															"nodeType": "YulIf",
															"src": "977:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:17",
														"type": ""
													}
												],
												"src": "924:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:17",
														"type": ""
													}
												],
												"src": "1052:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:17"
															},
															"nodeType": "YulIf",
															"src": "1290:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:17",
														"type": ""
													}
												],
												"src": "1197:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:17",
														"type": ""
													}
												],
												"src": "1677:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:17",
														"type": ""
													}
												],
												"src": "1801:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2094:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2111:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2134:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2116:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2082:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2089:3:17",
														"type": ""
													}
												],
												"src": "2029:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2273:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2269:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2261:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2341:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2365:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2297:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2297:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2223:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2235:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2246:4:17",
														"type": ""
													}
												],
												"src": "2153:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2447:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2495:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2468:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2477:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:32:17"
															},
															"nodeType": "YulIf",
															"src": "2457:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2586:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2601:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2605:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2630:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2665:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2676:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2661:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2685:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2640:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2630:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2417:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2428:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2440:6:17",
														"type": ""
													}
												],
												"src": "2381:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2884:1035:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2931:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2933:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2933:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2933:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2905:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:3:17",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2897:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2897:33:17"
															},
															"nodeType": "YulIf",
															"src": "2894:120:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3024:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3039:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3043:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3068:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3103:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3114:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3099:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3099:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3123:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3078:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3068:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3151:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3166:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3170:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3196:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3206:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3196:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3324:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3359:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3370:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3355:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3379:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3334:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3324:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3407:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3422:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:17",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3426:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3452:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3487:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3498:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3483:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3462:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3462:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3452:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3535:119:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3550:17:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:3:17",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3554:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3581:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3616:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3627:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3612:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3612:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3636:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3591:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3581:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3664:119:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3679:17:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3693:3:17",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3683:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3710:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3745:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3756:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3741:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3741:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3720:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3710:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3793:119:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3808:17:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:3:17",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3812:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3839:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3874:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3885:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3870:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3870:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3894:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3849:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3839:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2806:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2817:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2829:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2837:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2845:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2853:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2861:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2869:6:17",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2877:6:17",
														"type": ""
													}
												],
												"src": "2716:1203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3967:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3977:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4002:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3995:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3977:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3949:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3959:7:17",
														"type": ""
													}
												],
												"src": "3925:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4080:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4097:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4117:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4102:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4090:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4068:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4075:3:17",
														"type": ""
													}
												],
												"src": "4021:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4238:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4250:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4238:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4312:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4336:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4321:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4274:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4274:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4200:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4212:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:17",
														"type": ""
													}
												],
												"src": "4136:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4418:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4464:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4466:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4466:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4439:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4448:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4435:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4435:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4460:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:32:17"
															},
															"nodeType": "YulIf",
															"src": "4428:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4557:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4572:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4576:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4601:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4636:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4647:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4632:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4632:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4611:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4611:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4601:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4388:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4399:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4411:6:17",
														"type": ""
													}
												],
												"src": "4352:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4787:519:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4833:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4835:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4835:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4835:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4808:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4804:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4804:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4800:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:32:17"
															},
															"nodeType": "YulIf",
															"src": "4797:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4926:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4941:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4955:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4945:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4970:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5005:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5016:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5001:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5001:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5025:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4980:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4980:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4970:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5053:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5068:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5082:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5072:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5098:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5133:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5144:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5129:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5129:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5153:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5108:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5108:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5098:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5181:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5196:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5210:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5200:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5226:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5261:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5272:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5257:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5257:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5281:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5236:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5236:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5226:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4741:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4752:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4764:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4772:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4780:6:17",
														"type": ""
													}
												],
												"src": "4687:619:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5408:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5425:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5430:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5446:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5465:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5470:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5446:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5380:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5385:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5396:11:17",
														"type": ""
													}
												],
												"src": "5312:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5593:75:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5615:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5623:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5611:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5611:14:17"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5627:33:17",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:57:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5604:57:17"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5585:6:17",
														"type": ""
													}
												],
												"src": "5487:181:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5820:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5830:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5896:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5837:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6002:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "5913:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5913:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6015:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6026:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6031:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6022:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5808:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5816:3:17",
														"type": ""
													}
												],
												"src": "5674:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6217:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6227:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6239:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6250:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6235:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6235:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6227:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6274:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6285:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6270:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6270:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6293:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6299:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6289:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6289:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6263:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6263:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6319:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6453:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6327:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6319:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6197:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6212:4:17",
														"type": ""
													}
												],
												"src": "6046:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6625:288:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6635:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6635:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6715:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6728:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6739:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6724:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6724:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6671:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6671:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6796:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6752:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6752:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6752:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6878:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6891:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6902:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6887:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6887:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6834:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6834:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6581:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6593:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6601:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6609:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6620:4:17",
														"type": ""
													}
												],
												"src": "6471:442:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6982:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6992:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7007:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7001:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6992:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7050:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7023:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7023:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6960:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6968:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6976:5:17",
														"type": ""
													}
												],
												"src": "6919:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7145:274:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7191:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7193:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7193:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7166:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7175:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7162:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7162:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:32:17"
															},
															"nodeType": "YulIf",
															"src": "7155:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "7284:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7299:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7303:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7328:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7374:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7385:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7370:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7370:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7394:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7338:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7338:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7328:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7115:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7126:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7138:6:17",
														"type": ""
													}
												],
												"src": "7068:351:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7551:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7561:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7573:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7584:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7569:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7641:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7654:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7665:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7650:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7597:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7597:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7722:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7746:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7731:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7678:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7678:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7678:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7515:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7527:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7535:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7546:4:17",
														"type": ""
													}
												],
												"src": "7425:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7869:127:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7891:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7899:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7887:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7887:14:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7903:34:17",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7880:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7959:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7967:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7955:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7955:15:17"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7972:16:17",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7948:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7948:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7948:41:17"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7861:6:17",
														"type": ""
													}
												],
												"src": "7763:233:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8148:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8158:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8224:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8165:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8165:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8330:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "8241:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8241:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8241:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8354:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8359:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8350:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8136:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8144:3:17",
														"type": ""
													}
												],
												"src": "8002:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8545:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8555:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8567:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8602:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8613:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8598:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8598:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8621:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8627:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8617:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8591:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8647:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8781:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8655:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8647:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8525:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8540:4:17",
														"type": ""
													}
												],
												"src": "8374:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8852:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8862:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8873:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8862:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8834:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8844:7:17",
														"type": ""
													}
												],
												"src": "8799:85:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8933:43:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8943:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8958:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8965:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8954:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8943:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8915:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8925:7:17",
														"type": ""
													}
												],
												"src": "8890:86:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9024:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9031:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9024:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9000:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9010:3:17",
														"type": ""
													}
												],
												"src": "8982:60:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9114:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9124:72:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9188:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "9162:25:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9162:32:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9153:8:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9153:42:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9137:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9137:59:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9124:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9094:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9104:9:17",
														"type": ""
													}
												],
												"src": "9048:154:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9279:72:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9338:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "9301:36:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9301:43:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9289:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:56:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9289:56:17"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9267:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9274:3:17",
														"type": ""
													}
												],
												"src": "9208:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9461:130:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9471:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9483:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9494:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9479:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9479:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9471:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9557:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9507:49:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9507:77:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9507:77:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9433:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9445:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9456:4:17",
														"type": ""
													}
												],
												"src": "9357:234:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9703:61:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9725:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9733:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9721:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9721:14:17"
																	},
																	{
																		"hexValue": "4365526f757465722f44697361626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9737:19:17",
																		"type": "",
																		"value": "CeRouter/Disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9714:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9714:43:17"
														}
													]
												},
												"name": "store_literal_in_memory_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9695:6:17",
														"type": ""
													}
												],
												"src": "9597:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9916:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9926:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9992:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9997:2:17",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9933:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9933:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10098:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448",
																	"nodeType": "YulIdentifier",
																	"src": "10009:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10111:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10122:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10118:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10111:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9904:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9912:3:17",
														"type": ""
													}
												],
												"src": "9770:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10313:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10323:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10335:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10346:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10331:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10323:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10381:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10389:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10395:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10385:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10359:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10415:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10549:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10423:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10423:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10415:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10293:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10308:4:17",
														"type": ""
													}
												],
												"src": "10142:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10595:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10612:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10605:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10605:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10709:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10712:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10702:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10702:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10702:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10733:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10726:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10726:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10726:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10567:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10781:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10798:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10801:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10791:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10791:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10791:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10895:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10898:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10919:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10922:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10912:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10912:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10912:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10753:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10967:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10984:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10987:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10977:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10977:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10977:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11081:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11084:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11105:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11108:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11098:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11098:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11098:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10939:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11169:261:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11179:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11202:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11184:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11179:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11213:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11236:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11218:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11218:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11213:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11376:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11378:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11378:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11378:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11297:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11304:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11372:1:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11300:74:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11294:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11294:81:17"
															},
															"nodeType": "YulIf",
															"src": "11291:107:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11408:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11419:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11422:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11415:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11408:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11156:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11159:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11165:3:17",
														"type": ""
													}
												],
												"src": "11125:305:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11510:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11521:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11537:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11531:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11521:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11503:6:17",
														"type": ""
													}
												],
												"src": "11436:114:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11667:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11684:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11689:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11677:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11677:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11677:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11705:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11724:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11720:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11720:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11705:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11639:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11644:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11655:11:17",
														"type": ""
													}
												],
												"src": "11556:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11818:60:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11828:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "11836:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11828:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11849:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11861:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11866:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11857:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11857:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11849:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11805:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11813:4:17",
														"type": ""
													}
												],
												"src": "11746:132:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11939:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11956:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11979:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11961:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11961:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11949:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11949:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11949:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11927:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11934:3:17",
														"type": ""
													}
												],
												"src": "11884:108:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12078:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12122:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12130:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12088:33:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12088:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12088:46:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12143:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12161:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12166:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12157:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12157:14:17"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "12143:10:17"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12051:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12059:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "12067:10:17",
														"type": ""
													}
												],
												"src": "11998:179:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12258:38:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12268:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12280:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12285:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12276:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12276:14:17"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "12268:4:17"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12245:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "12253:4:17",
														"type": ""
													}
												],
												"src": "12183:113:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12456:608:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12466:68:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12528:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12480:47:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:54:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12470:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12543:93:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12624:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12629:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12550:73:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12550:86:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12543:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12645:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12710:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12660:49:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:56:17"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "12649:7:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12725:21:17",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "12739:7:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12729:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12815:224:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12829:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12856:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12850:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12850:13:17"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "12833:13:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12876:70:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "12927:13:17"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12942:3:17"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "12883:43:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12883:63:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12876:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12959:70:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13022:6:17"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "12969:52:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12969:60:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12959:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12777:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12780:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12774:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12774:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12788:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12790:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12799:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12802:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12795:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12795:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12790:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12759:14:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12761:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12770:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "12765:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12755:284:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13048:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13055:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13048:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12435:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12442:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12451:3:17",
														"type": ""
													}
												],
												"src": "12332:732:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13330:555:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13340:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13352:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13363:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13348:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13340:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13421:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13434:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13445:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13430:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13430:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13377:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13377:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13502:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13515:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13526:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13511:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13511:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13458:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13458:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13551:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13562:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13547:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13571:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13577:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13567:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13567:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13540:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13597:116:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13699:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13708:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13605:93:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13605:108:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13597:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13767:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13780:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13791:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13776:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13776:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13723:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13723:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13723:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13849:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13862:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13873:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13858:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13858:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13805:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13805:73:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13805:73:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13270:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13282:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13290:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13298:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13306:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13314:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13325:4:17",
														"type": ""
													}
												],
												"src": "13070:815:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13980:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13997:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14000:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13990:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13990:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13990:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13891:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14062:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14072:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14090:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14097:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14086:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14086:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14106:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14102:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14102:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14082:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14082:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14072:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14045:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14055:6:17",
														"type": ""
													}
												],
												"src": "14014:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14165:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14175:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14197:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "14227:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14205:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14205:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14193:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14179:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14344:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14346:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14346:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14346:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14287:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14299:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14284:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14284:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14323:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14335:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14320:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14320:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14281:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14281:62:17"
															},
															"nodeType": "YulIf",
															"src": "14278:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14382:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14386:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14375:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14375:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14151:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14159:4:17",
														"type": ""
													}
												],
												"src": "14122:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14450:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14460:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "14470:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "14460:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14519:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14527:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14499:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14499:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14499:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14434:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14443:6:17",
														"type": ""
													}
												],
												"src": "14409:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:229:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14731:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14733:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14733:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14733:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14703:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14711:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14700:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14700:30:17"
															},
															"nodeType": "YulIf",
															"src": "14697:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14763:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14775:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14783:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14771:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14771:17:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14763:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14825:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14837:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14843:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14610:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14621:4:17",
														"type": ""
													}
												],
												"src": "14544:311:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14950:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14967:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14970:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14960:12:17"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "14861:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15114:619:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15124:90:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15206:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "15149:56:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15149:64:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15133:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15133:81:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "15124:5:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15223:16:17",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "15234:5:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "15227:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "15256:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15263:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15249:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15249:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15249:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15279:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "15290:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15297:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15286:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15286:16:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "15279:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15312:44:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15330:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15342:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15350:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "15338:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15338:17:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15326:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:30:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "15316:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15384:103:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "15398:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15398:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15398:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "15371:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "15379:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15368:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15368:15:17"
															},
															"nodeType": "YulIf",
															"src": "15365:122:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15572:155:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15587:21:17",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "15605:3:17"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "15591:10:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "15629:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "15666:10:17"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "15678:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "15634:31:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15634:48:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15622:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15622:61:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15622:61:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15696:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "15707:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15712:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15703:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15703:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15696:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "15530:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15522:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15522:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15538:25:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15540:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "15551:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15556:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15547:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15547:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "15540:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15500:21:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15502:17:17",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "15513:6:17"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "15506:3:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15496:231:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15084:6:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15092:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15100:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15108:5:17",
														"type": ""
													}
												],
												"src": "15001:732:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15844:297:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15893:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "15895:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15895:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15895:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15872:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15880:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15868:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15868:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "15887:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "15864:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15864:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15857:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15857:35:17"
															},
															"nodeType": "YulIf",
															"src": "15854:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15985:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16005:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15999:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15999:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15989:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16021:114:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16108:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16116:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16104:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16104:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16123:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16131:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "16030:73:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16030:105:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "16021:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15822:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15830:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15838:5:17",
														"type": ""
													}
												],
												"src": "15756:385:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16249:452:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16295:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16297:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16297:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16297:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16270:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16279:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16266:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16266:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16291:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16262:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16262:32:17"
															},
															"nodeType": "YulIf",
															"src": "16259:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "16388:306:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16403:38:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16427:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16438:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16423:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16423:17:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16417:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16417:24:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16407:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16488:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16490:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16490:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16490:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16460:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16468:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16457:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16457:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "16454:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16585:99:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16656:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16667:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16652:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16652:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16676:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16595:56:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16595:89:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16585:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16219:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16230:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16242:6:17",
														"type": ""
													}
												],
												"src": "16147:554:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16813:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16835:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16843:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16831:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16831:14:17"
																	},
																	{
																		"hexValue": "50726f76696465723a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16847:23:17",
																		"type": "",
																		"value": "Provider: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16824:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16824:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16824:47:17"
														}
													]
												},
												"name": "store_literal_in_memory_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16805:6:17",
														"type": ""
													}
												],
												"src": "16707:171:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17030:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17040:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17106:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17111:2:17",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17047:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17047:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17040:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17212:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
																	"nodeType": "YulIdentifier",
																	"src": "17123:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17123:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17225:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17236:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17241:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17232:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17232:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17225:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17018:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17026:3:17",
														"type": ""
													}
												],
												"src": "16884:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17427:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17437:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17449:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17460:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17445:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17445:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17437:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17484:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17495:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17480:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17480:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17503:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17509:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17499:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17499:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17473:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17473:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17473:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17529:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17663:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17537:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17537:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17529:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17407:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17422:4:17",
														"type": ""
													}
												],
												"src": "17256:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17807:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17817:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17829:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17840:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17825:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17825:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17817:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17897:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17910:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17921:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17906:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17906:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17853:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17853:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17853:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17978:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17991:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18002:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17987:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17987:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17934:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17934:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17934:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17771:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17783:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17791:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17802:4:17",
														"type": ""
													}
												],
												"src": "17681:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18072:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18082:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18093:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18082:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18054:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18064:7:17",
														"type": ""
													}
												],
												"src": "18019:85:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18178:90:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18188:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18254:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "18228:25:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18228:32:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "18219:8:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18219:42:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18201:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18201:61:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18188:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18158:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18168:9:17",
														"type": ""
													}
												],
												"src": "18110:158:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18347:74:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18364:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18408:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "18369:38:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18369:45:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18357:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18357:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18357:58:17"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18335:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18342:3:17",
														"type": ""
													}
												],
												"src": "18274:147:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18561:214:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18571:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18583:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18594:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18579:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18579:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18571:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18651:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18664:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18675:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18660:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18660:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18607:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18607:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18607:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18740:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18753:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18764:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18749:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18749:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18688:51:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18688:80:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18688:80:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18525:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18537:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18545:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18556:4:17",
														"type": ""
													}
												],
												"src": "18427:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18887:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18909:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18917:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18905:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18905:14:17"
																	},
																	{
																		"hexValue": "686173206e6f7420676f7420612070726f666974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18921:22:17",
																		"type": "",
																		"value": "has not got a profit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18898:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18898:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18898:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18879:6:17",
														"type": ""
													}
												],
												"src": "18781:170:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19103:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19113:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19179:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19184:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19120:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19120:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19113:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19285:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3",
																	"nodeType": "YulIdentifier",
																	"src": "19196:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19196:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19196:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19298:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19309:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19314:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19305:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19305:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19298:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19091:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19099:3:17",
														"type": ""
													}
												],
												"src": "18957:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19500:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19510:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19522:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19533:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19518:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19518:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19510:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19557:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19568:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19553:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19553:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19576:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19582:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19572:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19572:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19546:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19546:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19546:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19602:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19736:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19610:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19610:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19602:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19480:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19495:4:17",
														"type": ""
													}
												],
												"src": "19329:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19860:63:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19882:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19890:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19878:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19878:14:17"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19894:21:17",
																		"type": "",
																		"value": "insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19871:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19871:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19871:45:17"
														}
													]
												},
												"name": "store_literal_in_memory_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19852:6:17",
														"type": ""
													}
												],
												"src": "19754:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20075:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20085:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20151:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20156:2:17",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20092:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20092:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20085:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20257:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330",
																	"nodeType": "YulIdentifier",
																	"src": "20168:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20168:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20168:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20270:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20281:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20286:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20277:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20277:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20270:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20063:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20071:3:17",
														"type": ""
													}
												],
												"src": "19929:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20472:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20482:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20494:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20505:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20490:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20490:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20482:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20529:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20540:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20525:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20525:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20548:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20554:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20544:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20544:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20518:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20518:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20518:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20574:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20708:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20582:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20582:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20574:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20452:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20467:4:17",
														"type": ""
													}
												],
												"src": "20301:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20771:146:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20781:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20804:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20786:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20786:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20781:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20815:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20838:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20820:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20820:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20815:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20862:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20864:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20864:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20864:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20856:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20859:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20853:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20853:8:17"
															},
															"nodeType": "YulIf",
															"src": "20850:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20894:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20906:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20909:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20902:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20902:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20894:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20757:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20760:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20766:4:17",
														"type": ""
													}
												],
												"src": "20726:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21029:56:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21051:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21059:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21047:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21047:14:17"
																	},
																	{
																		"hexValue": "4445582044495341424c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21063:14:17",
																		"type": "",
																		"value": "DEX DISABLED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21040:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21040:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21040:38:17"
														}
													]
												},
												"name": "store_literal_in_memory_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21021:6:17",
														"type": ""
													}
												],
												"src": "20923:162:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21237:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21247:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21313:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21318:2:17",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21254:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21254:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21247:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21419:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe",
																	"nodeType": "YulIdentifier",
																	"src": "21330:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21330:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21330:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21432:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21443:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21448:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21439:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21439:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21432:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21225:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21233:3:17",
														"type": ""
													}
												],
												"src": "21091:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21634:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21644:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21656:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21667:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21652:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21652:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21644:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21691:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21702:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21687:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21687:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21710:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21716:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21706:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21706:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21680:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21680:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21680:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21736:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21870:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21744:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21744:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21736:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21614:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21629:4:17",
														"type": ""
													}
												],
												"src": "21463:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21994:129:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22016:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22024:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22012:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22012:14:17"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616d6f756e74206f66204365726f73526f7574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22028:34:17",
																		"type": "",
																		"value": "insufficient amount of CerosRout"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22005:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22005:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22005:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22084:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22092:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22080:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22080:15:17"
																	},
																	{
																		"hexValue": "657220696e206365727420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22097:18:17",
																		"type": "",
																		"value": "er in cert token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22073:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22073:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22073:43:17"
														}
													]
												},
												"name": "store_literal_in_memory_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21986:6:17",
														"type": ""
													}
												],
												"src": "21888:235:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22275:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22285:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22351:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22356:2:17",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22292:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22292:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22285:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22457:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e",
																	"nodeType": "YulIdentifier",
																	"src": "22368:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22368:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22368:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22470:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22481:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22486:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22477:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22477:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22470:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22263:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22271:3:17",
														"type": ""
													}
												],
												"src": "22129:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22672:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22682:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22694:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22705:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22690:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22690:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22682:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22729:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22740:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22725:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22725:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22748:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22754:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22744:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22744:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22718:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22718:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22718:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22774:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22908:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22782:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22782:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22774:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22652:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22667:4:17",
														"type": ""
													}
												],
												"src": "22501:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23052:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23062:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23074:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23085:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23070:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23070:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23062:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23142:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23155:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23166:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23151:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23151:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23098:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23098:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23098:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23223:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23236:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23247:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23232:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23232:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23179:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23179:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23179:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23016:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23028:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23036:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23047:4:17",
														"type": ""
													}
												],
												"src": "22926:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23370:119:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23392:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23400:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23388:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23388:14:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23404:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23381:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23381:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23381:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23460:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23468:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23456:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23456:15:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23473:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23449:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23449:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23449:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23362:6:17",
														"type": ""
													}
												],
												"src": "23264:225:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23641:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23651:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23717:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23722:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23658:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23658:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23651:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23823:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "23734:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23734:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23734:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23836:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23847:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23852:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23843:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23843:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23836:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23629:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23637:3:17",
														"type": ""
													}
												],
												"src": "23495:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24038:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24048:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24060:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24071:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24056:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24056:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24048:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24095:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24106:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24091:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24114:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24120:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24110:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24110:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24084:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24084:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24084:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24140:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24274:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24148:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24148:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24140:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24018:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24033:4:17",
														"type": ""
													}
												],
												"src": "23867:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24398:126:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24420:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24428:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24416:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24416:14:17"
																	},
																	{
																		"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e2075",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24432:34:17",
																		"type": "",
																		"value": "value must be greater than min u"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24409:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24409:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24409:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24488:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24496:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24484:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24484:15:17"
																	},
																	{
																		"hexValue": "6e7374616b6520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24501:15:17",
																		"type": "",
																		"value": "nstake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24477:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24477:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24477:40:17"
														}
													]
												},
												"name": "store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24390:6:17",
														"type": ""
													}
												],
												"src": "24292:232:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24676:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24686:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24752:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24757:2:17",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24693:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24693:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24686:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24858:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																	"nodeType": "YulIdentifier",
																	"src": "24769:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24769:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24769:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24871:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24882:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24887:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24878:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24878:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24871:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24664:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24672:3:17",
														"type": ""
													}
												],
												"src": "24530:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25073:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25083:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25095:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25106:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25091:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25091:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25083:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25130:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25141:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25126:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25126:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25149:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25155:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25145:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25145:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25119:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25119:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25119:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25175:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25309:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25183:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25183:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25175:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25053:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25068:4:17",
														"type": ""
													}
												],
												"src": "24902:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25433:124:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25455:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25463:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25451:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25451:14:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25467:34:17",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25444:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25444:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25444:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25523:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25531:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25519:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25519:15:17"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25536:13:17",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25512:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25512:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25512:38:17"
														}
													]
												},
												"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25425:6:17",
														"type": ""
													}
												],
												"src": "25327:230:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25709:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25719:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25785:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25790:2:17",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25726:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25726:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25719:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25891:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																	"nodeType": "YulIdentifier",
																	"src": "25802:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25802:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25802:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25904:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25915:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25920:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25911:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25911:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25904:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25697:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25705:3:17",
														"type": ""
													}
												],
												"src": "25563:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26106:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26116:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26128:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26139:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26124:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26124:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26116:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26163:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26174:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26159:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26159:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26182:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26188:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26178:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26178:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26152:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26152:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26152:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26208:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26342:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26216:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26216:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26208:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26086:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26101:4:17",
														"type": ""
													}
												],
												"src": "25935:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26466:135:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26488:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26496:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26484:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26484:14:17"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26500:34:17",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26477:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26477:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26477:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26556:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26564:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26552:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26552:15:17"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26569:24:17",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26545:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26545:49:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26545:49:17"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26458:6:17",
														"type": ""
													}
												],
												"src": "26360:241:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26753:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26763:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26829:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26834:2:17",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26770:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26770:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26763:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26935:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "26846:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26846:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26846:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26948:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26959:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26964:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26955:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26955:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26948:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26741:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26749:3:17",
														"type": ""
													}
												],
												"src": "26607:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27150:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27160:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27172:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27183:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27168:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27168:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27160:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27207:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27218:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27203:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27203:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27226:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27232:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27222:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27222:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27196:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27196:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27196:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27252:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27386:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27260:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27260:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27252:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27130:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27145:4:17",
														"type": ""
													}
												],
												"src": "26979:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27510:76:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27532:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27540:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27528:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27528:14:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27544:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27521:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27521:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27521:58:17"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27502:6:17",
														"type": ""
													}
												],
												"src": "27404:182:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27738:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27748:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27814:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27819:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27755:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27755:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27748:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27920:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "27831:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27831:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27831:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27933:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27944:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27949:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27940:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27940:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27933:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27726:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27734:3:17",
														"type": ""
													}
												],
												"src": "27592:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28135:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28145:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28157:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28168:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28153:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28153:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28145:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28192:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28203:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28188:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28188:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28211:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28217:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28207:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28207:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28181:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28181:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28181:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28237:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28371:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28245:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28245:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28237:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28115:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28130:4:17",
														"type": ""
													}
												],
												"src": "27964:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28429:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28483:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28492:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28495:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28485:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28485:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28485:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28452:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28474:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "28459:14:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28459:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28449:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28449:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28442:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28442:40:17"
															},
															"nodeType": "YulIf",
															"src": "28439:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28422:5:17",
														"type": ""
													}
												],
												"src": "28389:116:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28571:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28581:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28596:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28590:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28590:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28581:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28636:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "28612:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28612:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28612:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28549:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28557:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28565:5:17",
														"type": ""
													}
												],
												"src": "28511:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28728:271:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28774:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28776:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28776:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28776:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28749:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28758:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28745:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28745:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28770:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28741:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28741:32:17"
															},
															"nodeType": "YulIf",
															"src": "28738:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "28867:125:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28882:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28896:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28886:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28911:71:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28954:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28965:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28950:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28950:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28974:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28921:28:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28921:61:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28911:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28698:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28709:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28721:6:17",
														"type": ""
													}
												],
												"src": "28654:345:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29111:123:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29133:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29141:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29129:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29129:14:17"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29145:34:17",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29122:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29122:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29122:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29201:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29209:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29197:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29197:15:17"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29214:12:17",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29190:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29190:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29190:37:17"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29103:6:17",
														"type": ""
													}
												],
												"src": "29005:229:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29386:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29396:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29462:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29467:2:17",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29403:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29403:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29396:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29568:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "29479:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29479:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29479:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29581:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29592:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29597:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29588:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29588:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29581:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29374:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29382:3:17",
														"type": ""
													}
												],
												"src": "29240:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29783:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29793:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29805:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29816:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29801:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29801:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29793:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29840:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29851:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29836:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29836:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29859:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29865:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29855:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29855:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29829:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29829:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29829:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29885:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30019:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29893:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29893:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29885:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29763:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29778:4:17",
														"type": ""
													}
												],
												"src": "29612:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30143:119:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30165:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30173:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30161:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30161:14:17"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30177:34:17",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30154:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30154:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30154:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30233:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30241:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30229:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30229:15:17"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30246:8:17",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30222:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30222:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30222:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30135:6:17",
														"type": ""
													}
												],
												"src": "30037:225:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30414:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30424:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30490:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30495:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30431:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30431:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30424:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30596:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "30507:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30507:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30507:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30609:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30620:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30625:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30616:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30616:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30609:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30402:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30410:3:17",
														"type": ""
													}
												],
												"src": "30268:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30811:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30821:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30833:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30844:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30829:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30829:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30821:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30868:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30879:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30864:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30864:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30887:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30893:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30883:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30883:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30857:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30857:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30857:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30913:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31047:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30921:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "30921:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30913:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30791:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30806:4:17",
														"type": ""
													}
												],
												"src": "30640:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31123:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31134:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31150:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31144:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31144:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "31134:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31106:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31116:6:17",
														"type": ""
													}
												],
												"src": "31065:98:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31282:34:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31292:18:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31307:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "31292:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31254:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31259:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "31270:11:17",
														"type": ""
													}
												],
												"src": "31169:147:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31371:258:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31381:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "31390:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "31385:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31450:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "31475:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "31480:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "31471:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31471:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "31494:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "31499:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "31490:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "31490:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "31484:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31484:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "31464:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31464:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31464:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "31411:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31414:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "31408:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31408:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "31422:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "31424:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "31433:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31436:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "31429:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31429:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "31424:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "31404:3:17",
																"statements": []
															},
															"src": "31400:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31547:76:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "31597:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "31602:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "31593:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31593:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31611:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "31586:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31586:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31586:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "31528:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31531:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31525:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31525:13:17"
															},
															"nodeType": "YulIf",
															"src": "31522:101:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "31353:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "31358:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31363:6:17",
														"type": ""
													}
												],
												"src": "31322:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31743:265:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31753:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31799:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "31767:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31767:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31757:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31814:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31897:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31902:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31821:75:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31821:88:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31814:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31944:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31951:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31940:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31940:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31958:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31963:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "31918:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31918:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31918:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31979:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31990:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31995:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31986:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "31986:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31979:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31724:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31731:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31739:3:17",
														"type": ""
													}
												],
												"src": "31635:373:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32148:137:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32159:100:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32246:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32255:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32166:79:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "32166:93:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32159:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32269:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "32276:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32269:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32127:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32133:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32144:3:17",
														"type": ""
													}
												],
												"src": "32014:271:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32397:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32419:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32427:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32415:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32415:14:17"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32431:31:17",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32408:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "32408:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32408:55:17"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32389:6:17",
														"type": ""
													}
												],
												"src": "32291:179:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32622:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32632:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32698:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32703:2:17",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32639:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "32639:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32632:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32804:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "32715:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "32715:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32715:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32817:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32828:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32833:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32824:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "32824:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32817:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32610:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32618:3:17",
														"type": ""
													}
												],
												"src": "32476:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33019:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33029:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33041:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33052:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33037:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33037:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33029:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33076:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33087:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33072:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33072:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33095:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33101:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33091:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33065:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33065:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33065:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33121:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33255:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33129:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33129:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33121:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32999:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33014:4:17",
														"type": ""
													}
												],
												"src": "32848:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33332:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33343:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33359:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "33353:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33353:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "33343:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33315:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "33325:6:17",
														"type": ""
													}
												],
												"src": "33273:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33470:272:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33480:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33527:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33494:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33494:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "33484:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33542:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "33608:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33613:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33549:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33549:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "33542:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33655:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33662:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33651:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33651:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "33669:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "33674:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "33629:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33629:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33629:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33690:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "33701:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "33728:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "33706:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33706:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33697:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33697:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "33690:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33451:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "33458:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "33466:3:17",
														"type": ""
													}
												],
												"src": "33378:364:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33866:195:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33876:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33888:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33899:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33884:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33884:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33876:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33923:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33934:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33919:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33919:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33942:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33948:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33938:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33938:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33912:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33912:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33912:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33968:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "34040:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "34049:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33976:63:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "33976:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33968:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33838:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33850:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33861:4:17",
														"type": ""
													}
												],
												"src": "33748:313:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448(memPtr) {\n\n        mstore(add(memPtr, 0), \"CeRouter/Disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provider: not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"has not got a profit\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"DEX DISABLED\")\n\n    }\n\n    function abi_encode_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient amount of CerosRout\")\n\n        mstore(add(memPtr, 32), \"er in cert token\")\n\n    }\n\n    function abi_encode_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397(memPtr) {\n\n        mstore(add(memPtr, 0), \"value must be greater than min u\")\n\n        mstore(add(memPtr, 32), \"nstake amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cd5760003560e01c8063796f69aa116100f7578063ac78467c11610095578063db518db211610064578063db518db214610691578063f2fde38b146106ce578063f3fef3a3146106f7578063f586c6d914610734576101cd565b8063ac78467c146105d0578063bcdef0a41461060d578063c0ab44f61461064a578063d0e30db014610673576101cd565b80638da5cb5b116100d15780638da5cb5b1461050057806397fd9be71461052b578063ab43c3df14610556578063ab89b6af14610593576101cd565b8063796f69aa1461046f5780637c0a75e514610498578063854cf3cf146104d5576101cd565b8063483d45bd1161016f578063665a21db1161013e578063665a21db146103d957806369d2da9c146104045780636eecfdaa1461042d578063715018a614610458576101cd565b8063483d45bd1461032f5780635c975abb1461035a57806360e232a91461038557806365cacaa4146103ae576101cd565b8063223888c1116101ab578063223888c11461027757806335876476146102b45780633af82c59146102dd5780634339bc3014610306576101cd565b806303550d56146101d25780630c632bbe1461020f5780631e83409a1461023a575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190613a11565b61075f565b6040516102069190613a60565b60405180910390f35b34801561021b57600080fd5b506102246108ff565b6040516102319190613a8a565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c9190613aa5565b610929565b60405161026e9190613a60565b60405180910390f35b34801561028357600080fd5b5061029e60048036038101906102999190613aa5565b610aaf565b6040516102ab9190613a60565b60405180910390f35b3480156102c057600080fd5b506102db60048036038101906102d69190613ad2565b610b54565b005b3480156102e957600080fd5b5061030460048036038101906102ff9190613aa5565b610fa6565b005b34801561031257600080fd5b5061032d60048036038101906103289190613aa5565b61117f565b005b34801561033b57600080fd5b50610344611301565b6040516103519190613a8a565b60405180910390f35b34801561036657600080fd5b5061036f61132b565b60405161037c9190613b8f565b60405180910390f35b34801561039157600080fd5b506103ac60048036038101906103a79190613aa5565b611342565b005b3480156103ba57600080fd5b506103c36114c4565b6040516103d09190613a8a565b60405180910390f35b3480156103e557600080fd5b506103ee6114ee565b6040516103fb9190613a8a565b60405180910390f35b34801561041057600080fd5b5061042b60048036038101906104269190613aa5565b611518565b005b34801561043957600080fd5b50610442611799565b60405161044f9190613a8a565b60405180910390f35b34801561046457600080fd5b5061046d6117c3565b005b34801561047b57600080fd5b5061049660048036038101906104919190613aa5565b6117d7565b005b3480156104a457600080fd5b506104bf60048036038101906104ba9190613baa565b61185a565b6040516104cc9190613a60565b60405180910390f35b3480156104e157600080fd5b506104ea6118e5565b6040516104f79190613a8a565b60405180910390f35b34801561050c57600080fd5b5061051561190f565b6040516105229190613a8a565b60405180910390f35b34801561053757600080fd5b50610540611939565b60405161054d9190613a8a565b60405180910390f35b34801561056257600080fd5b5061057d60048036038101906105789190613bd7565b611963565b60405161058a9190613a60565b60405180910390f35b34801561059f57600080fd5b506105ba60048036038101906105b59190613aa5565b611d2b565b6040516105c79190613a60565b60405180910390f35b3480156105dc57600080fd5b506105f760048036038101906105f29190613aa5565b611dd0565b6040516106049190613a60565b60405180910390f35b34801561061957600080fd5b50610634600480360381019061062f9190613a11565b611e19565b6040516106419190613a60565b60405180910390f35b34801561065657600080fd5b50610671600480360381019061066c9190613aa5565b6120bf565b005b61067b6123a8565b6040516106889190613a60565b60405180910390f35b34801561069d57600080fd5b506106b860048036038101906106b39190613a11565b61295d565b6040516106c59190613a60565b60405180910390f35b3480156106da57600080fd5b506106f560048036038101906106f09190613aa5565b612c59565b005b34801561070357600080fd5b5061071e60048036038101906107199190613a11565b612cdd565b60405161072b9190613a60565b60405180910390f35b34801561074057600080fd5b506107496130ac565b6040516107569190613a8a565b60405180910390f35b6000600260975414156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90613c87565b60405180910390fd5b600260978190555060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f1d92673385856040518463ffffffff1660e01b815260040161080e93929190613ca7565b6020604051808303816000875af115801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190613cf3565b905060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e846040516108e99190613a60565b60405180910390a4600160978190555092915050565b600060ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060026097541415610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890613c87565b60405180910390fd5b600260978190555060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631101596c33846040518363ffffffff1660e01b81526004016109d6929190613d20565b6020604051808303816000875af11580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a199190613cf3565b905060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd98706883604051610a9a9190613a60565b60405180910390a36001609781905550919050565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663223888c1836040518263ffffffff1660e01b8152600401610b0c9190613a8a565b602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190613cf3565b9050919050565b60008060019054906101000a900460ff16159050808015610b855750600160008054906101000a900460ff1660ff16105b80610bb25750610b94306130d6565b158015610bb15750600160008054906101000a900460ff1660ff16145b5b610bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be890613dbb565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610c2e576001600060016101000a81548160ff0219169083151502179055505b610c366130f9565b610c3e613152565b610c466131ab565b8760cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e17837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8973ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b610e62837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a73ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b610ead857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a73ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b610ef8827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a73ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b610f43847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a73ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b8015610f9c5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f939190613e2d565b60405180910390a15b5050505050505050565b610fae613353565b600073ffffffffffffffffffffffffffffffffffffffff1660d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110755761107460d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b5b8060d160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061114560d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b7fc7c1b39b4c8950340ee2ddc449a99e16d5e090b420db2e99160d82a9ff5580d9816040516111749190613a8a565b60405180910390a150565b611187613353565b6111f760cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112c760cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b7f79025dab199855650264c602de305dcf5c292b8e5b4470ef271724a79d0343f4816040516112f69190613a8a565b60405180910390a150565b600060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606560009054906101000a900460ff16905090565b61134a613353565b6113ba60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b8060c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061148a60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b7f646d70535c6b451b92021874a72abd441f122ba1c0b8f24d074352bd169fad3f816040516114b99190613a8a565b60405180910390a150565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611520613353565b61159060ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b61160060ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b8060ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116d060ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b61175f60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132049092919063ffffffff16565b7f90252124b346c6d6c466196d470d708d0c0c7026fe5ba62a2e01b5adbf39e2798160405161178e9190613a8a565b60405180910390a150565b600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6117cb613353565b6117d560006133d1565b565b6117df613353565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9a33114b94f1c4c094352deff0082e220c977361e70d556dfb5565ad4678ce4d8160405161184f9190613a8a565b60405180910390a150565b6000600260975414156118a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189990613c87565b60405180910390fd5b60026097819055506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118dc90613e94565b60405180910390fd5b600060ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260975414156119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a290613c87565b60405180910390fd5b600260978190555060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f1d92673330866040518463ffffffff1660e01b8152600401611a1293929190613ca7565b6020604051808303816000875af1158015611a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a559190613cf3565b90506000600267ffffffffffffffff811115611a7457611a73613eb4565b5b604051908082528060200260200182016040528015611aa25781602001602082028036833780820191505090505b50905060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600081518110611adc57611adb613ee3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110611b4d57611b4c613ee3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600060ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318cbafe58486858a61012c42611bd99190613f41565b6040518663ffffffff1660e01b8152600401611bf9959493929190614055565b6000604051808303816000875af1158015611c18573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c4191906141d9565b905060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e84600181518110611cdf57611cde613ee3565b5b6020026020010151604051611cf49190613a60565b60405180910390a480600181518110611d1057611d0f613ee3565b5b60200260200101519250505060016097819055509392505050565b600060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346faa33c836040518263ffffffff1660e01b8152600401611d889190613a8a565b602060405180830381865afa158015611da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc99190613cf3565b9050919050565b600060cf60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000611e2361190f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ea9575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edf9061426e565b60405180910390fd5b60026097541415611f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2590613c87565b60405180910390fd5b6002609781905550611f8583308460cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613497909392919063ffffffff16565b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f4f21e233846040518363ffffffff1660e01b8152600401611fe292919061428e565b6020604051808303816000875af1158015612001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120259190613cf3565b905060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78460006040516120a99291906142f2565b60405180910390a3600160978190555092915050565b60026097541415612105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fc90613c87565b60405180910390fd5b6002609781905550600060cf60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111612194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218b90614367565b60405180910390fd5b8060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016121f09190613a8a565b602060405180830381865afa15801561220d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122319190613cf3565b1015612272576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612269906143d3565b60405180910390fd5b6122bf828260cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166135209092919063ffffffff16565b8060cf60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461230e91906143f3565b9250508190555060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068836040516123949190613a60565b60405180910390a350600160978190555050565b60006123b261190f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612438575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b612477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246e9061426e565b60405180910390fd5b600260975414156124bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b490613c87565b60405180910390fd5b60026097819055506000349050600060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356a3b5fa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255d9190613cf3565b905060008183106126075760cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353616373846040518263ffffffff1660e01b81526004016125c39190613a60565b602060405180830381865afa1580156125e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126049190613cf3565b90505b6000806000831061269d5782915060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac76d450866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561267f57600080fd5b505af1158015612693573d6000803e3d6000fd5b50505050506126d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126cf90614473565b60405180910390fd5b8160cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016127349190613a8a565b602060405180830381865afa158015612751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127759190613cf3565b10156127b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ad90614505565b60405180910390fd5b8060cf60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546128059190613f41565b9250508190555060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f4f21e233838561285791906143f3565b6040518363ffffffff1660e01b815260040161287492919061428e565b6020604051808303816000875af1158015612893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b79190613cf3565b955060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7838561293691906143f3565b84604051612945929190614525565b60405180910390a35050505050600160978190555090565b6000600260975414156129a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299c90613c87565b60405180910390fd5b60026097819055506129b561190f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612a3b575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b612a7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a719061426e565b60405180910390fd5b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f1d92673330856040518463ffffffff1660e01b8152600401612ad993929190613ca7565b6020604051808303816000875af1158015612af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1c9190613cf3565b905060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381782dff84836040518363ffffffff1660e01b8152600401612b7b92919061428e565b600060405180830381600087803b158015612b9557600080fd5b505af1158015612ba9573d6000803e3d6000fd5b5050505060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e85604051612c439190613a60565b60405180910390a4600160978190555092915050565b612c61613353565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc8906145c0565b60405180910390fd5b612cda816133d1565b50565b6000612ce761190f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612d6d575060d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b612dac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612da39061426e565b60405180910390fd5b60026097541415612df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612de990613c87565b60405180910390fd5b600260978190555060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663034c44546040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8b9190613cf3565b821015612ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec490614652565b60405180910390fd5b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f1d92673330856040518463ffffffff1660e01b8152600401612f2c93929190613ca7565b6020604051808303816000875af1158015612f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f6f9190613cf3565b905060d160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381782dff84836040518363ffffffff1660e01b8152600401612fce92919061428e565b600060405180830381600087803b158015612fe857600080fd5b505af1158015612ffc573d6000803e3d6000fd5b5050505060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e856040516130969190613a60565b60405180910390a4600160978190555092915050565b600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16613148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161313f906146e4565b60405180910390fd5b6131506135a6565b565b600060019054906101000a900460ff166131a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613198906146e4565b60405180910390fd5b6131a9613607565b565b600060019054906101000a900460ff166131fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131f1906146e4565b60405180910390fd5b613202613673565b565b600081148061328e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b815260040161324b929190613d20565b602060405180830381865afa158015613268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328c9190613cf3565b145b6132cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132c490614776565b60405180910390fd5b61334e8363095ea7b360e01b84846040516024016132ec92919061428e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506136cc565b505050565b61335b613793565b73ffffffffffffffffffffffffffffffffffffffff1661337961190f565b73ffffffffffffffffffffffffffffffffffffffff16146133cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133c6906147e2565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61351a846323b872dd60e01b8585856040516024016134b893929190613ca7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506136cc565b50505050565b6135a18363a9059cbb60e01b848460405160240161353f92919061428e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506136cc565b505050565b600060019054906101000a900460ff166135f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135ec906146e4565b60405180910390fd5b613605613600613793565b6133d1565b565b600060019054906101000a900460ff16613656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161364d906146e4565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff166136c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136b9906146e4565b60405180910390fd5b6001609781905550565b600061372e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661379b9092919063ffffffff16565b905060008151111561378e578080602001905181019061374e919061482e565b61378d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613784906148cd565b60405180910390fd5b5b505050565b600033905090565b60606137aa84846000856137b3565b90509392505050565b6060824710156137f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137ef9061495f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161382191906149f9565b60006040518083038185875af1925050503d806000811461385e576040519150601f19603f3d011682016040523d82523d6000602084013e613863565b606091505b509150915061387487838387613880565b92505050949350505050565b606083156138e3576000835114156138db5761389b856138f6565b6138da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138d190614a5c565b60405180910390fd5b5b8290506138ee565b6138ed8383613919565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561392c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139609190614ac0565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006139a88261397d565b9050919050565b6139b88161399d565b81146139c357600080fd5b50565b6000813590506139d5816139af565b92915050565b6000819050919050565b6139ee816139db565b81146139f957600080fd5b50565b600081359050613a0b816139e5565b92915050565b60008060408385031215613a2857613a27613973565b5b6000613a36858286016139c6565b9250506020613a47858286016139fc565b9150509250929050565b613a5a816139db565b82525050565b6000602082019050613a756000830184613a51565b92915050565b613a848161399d565b82525050565b6000602082019050613a9f6000830184613a7b565b92915050565b600060208284031215613abb57613aba613973565b5b6000613ac9848285016139c6565b91505092915050565b600080600080600080600060e0888a031215613af157613af0613973565b5b6000613aff8a828b016139c6565b9750506020613b108a828b016139c6565b9650506040613b218a828b016139c6565b9550506060613b328a828b016139c6565b9450506080613b438a828b016139c6565b93505060a0613b548a828b016139c6565b92505060c0613b658a828b016139c6565b91505092959891949750929550565b60008115159050919050565b613b8981613b74565b82525050565b6000602082019050613ba46000830184613b80565b92915050565b600060208284031215613bc057613bbf613973565b5b6000613bce848285016139fc565b91505092915050565b600080600060608486031215613bf057613bef613973565b5b6000613bfe868287016139c6565b9350506020613c0f868287016139fc565b9250506040613c20868287016139fc565b9150509250925092565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613c71601f83613c2a565b9150613c7c82613c3b565b602082019050919050565b60006020820190508181036000830152613ca081613c64565b9050919050565b6000606082019050613cbc6000830186613a7b565b613cc96020830185613a7b565b613cd66040830184613a51565b949350505050565b600081519050613ced816139e5565b92915050565b600060208284031215613d0957613d08613973565b5b6000613d1784828501613cde565b91505092915050565b6000604082019050613d356000830185613a7b565b613d426020830184613a7b565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613da5602e83613c2a565b9150613db082613d49565b604082019050919050565b60006020820190508181036000830152613dd481613d98565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000613e17613e12613e0d84613ddb565b613df2565b613de5565b9050919050565b613e2781613dfc565b82525050565b6000602082019050613e426000830184613e1e565b92915050565b7f4365526f757465722f44697361626c6564000000000000000000000000000000600082015250565b6000613e7e601183613c2a565b9150613e8982613e48565b602082019050919050565b60006020820190508181036000830152613ead81613e71565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f4c826139db565b9150613f57836139db565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f8c57613f8b613f12565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613fcc8161399d565b82525050565b6000613fde8383613fc3565b60208301905092915050565b6000602082019050919050565b600061400282613f97565b61400c8185613fa2565b935061401783613fb3565b8060005b8381101561404857815161402f8882613fd2565b975061403a83613fea565b92505060018101905061401b565b5085935050505092915050565b600060a08201905061406a6000830188613a51565b6140776020830187613a51565b81810360408301526140898186613ff7565b90506140986060830185613a7b565b6140a56080830184613a51565b9695505050505050565b600080fd5b6000601f19601f8301169050919050565b6140ce826140b4565b810181811067ffffffffffffffff821117156140ed576140ec613eb4565b5b80604052505050565b6000614100613969565b905061410c82826140c5565b919050565b600067ffffffffffffffff82111561412c5761412b613eb4565b5b602082029050602081019050919050565b600080fd5b600061415561415084614111565b6140f6565b905080838252602082019050602084028301858111156141785761417761413d565b5b835b818110156141a1578061418d8882613cde565b84526020840193505060208101905061417a565b5050509392505050565b600082601f8301126141c0576141bf6140af565b5b81516141d0848260208601614142565b91505092915050565b6000602082840312156141ef576141ee613973565b5b600082015167ffffffffffffffff81111561420d5761420c613978565b5b614219848285016141ab565b91505092915050565b7f50726f76696465723a206e6f7420616c6c6f7765640000000000000000000000600082015250565b6000614258601583613c2a565b915061426382614222565b602082019050919050565b600060208201905081810360008301526142878161424b565b9050919050565b60006040820190506142a36000830185613a7b565b6142b06020830184613a51565b9392505050565b6000819050919050565b60006142dc6142d76142d2846142b7565b613df2565b6139db565b9050919050565b6142ec816142c1565b82525050565b60006040820190506143076000830185613a51565b61431460208301846142e3565b9392505050565b7f686173206e6f7420676f7420612070726f666974000000000000000000000000600082015250565b6000614351601483613c2a565b915061435c8261431b565b602082019050919050565b6000602082019050818103600083015261438081614344565b9050919050565b7f696e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b60006143bd601383613c2a565b91506143c882614387565b602082019050919050565b600060208201905081810360008301526143ec816143b0565b9050919050565b60006143fe826139db565b9150614409836139db565b92508282101561441c5761441b613f12565b5b828203905092915050565b7f4445582044495341424c45440000000000000000000000000000000000000000600082015250565b600061445d600c83613c2a565b915061446882614427565b602082019050919050565b6000602082019050818103600083015261448c81614450565b9050919050565b7f696e73756666696369656e7420616d6f756e74206f66204365726f73526f757460008201527f657220696e206365727420746f6b656e00000000000000000000000000000000602082015250565b60006144ef603083613c2a565b91506144fa82614493565b604082019050919050565b6000602082019050818103600083015261451e816144e2565b9050919050565b600060408201905061453a6000830185613a51565b6145476020830184613a51565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006145aa602683613c2a565b91506145b58261454e565b604082019050919050565b600060208201905081810360008301526145d98161459d565b9050919050565b7f76616c7565206d7573742062652067726561746572207468616e206d696e207560008201527f6e7374616b6520616d6f756e7400000000000000000000000000000000000000602082015250565b600061463c602d83613c2a565b9150614647826145e0565b604082019050919050565b6000602082019050818103600083015261466b8161462f565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006146ce602b83613c2a565b91506146d982614672565b604082019050919050565b600060208201905081810360008301526146fd816146c1565b9050919050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000614760603683613c2a565b915061476b82614704565b604082019050919050565b6000602082019050818103600083015261478f81614753565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006147cc602083613c2a565b91506147d782614796565b602082019050919050565b600060208201905081810360008301526147fb816147bf565b9050919050565b61480b81613b74565b811461481657600080fd5b50565b60008151905061482881614802565b92915050565b60006020828403121561484457614843613973565b5b600061485284828501614819565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006148b7602a83613c2a565b91506148c28261485b565b604082019050919050565b600060208201905081810360008301526148e6816148aa565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000614949602683613c2a565b9150614954826148ed565b604082019050919050565b600060208201905081810360008301526149788161493c565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156149b3578082015181840152602081019050614998565b838111156149c2576000848401525b50505050565b60006149d38261497f565b6149dd818561498a565b93506149ed818560208601614995565b80840191505092915050565b6000614a0582846149c8565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000614a46601d83613c2a565b9150614a5182614a10565b602082019050919050565b60006020820190508181036000830152614a7581614a39565b9050919050565b600081519050919050565b6000614a9282614a7c565b614a9c8185613c2a565b9350614aac818560208601614995565b614ab5816140b4565b840191505092915050565b60006020820190508181036000830152614ada8184614a87565b90509291505056fea2646970667358221220a1a91f20f08d6bef89e170b12bd14697175cbbb6a5816417893a5e16df04d56564736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796F69AA GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xAC78467C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDB518DB2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB518DB2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xF586C6D9 EQ PUSH2 0x734 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xAC78467C EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xBCDEF0A4 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xC0AB44F6 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x673 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x97FD9BE7 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xAB43C3DF EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xAB89B6AF EQ PUSH2 0x593 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x796F69AA EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x7C0A75E5 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x854CF3CF EQ PUSH2 0x4D5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x483D45BD GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x665A21DB GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x665A21DB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x69D2DA9C EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x6EECFDAA EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x458 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x483D45BD EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x60E232A9 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x65CACAA4 EQ PUSH2 0x3AE JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x223888C1 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x223888C1 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x3AF82C59 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x4339BC30 EQ PUSH2 0x306 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3550D56 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xC632BBE EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x23A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x3AD2 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x17C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x3BAA JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x3BD7 JUMP JUMPDEST PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x20BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67B PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x3AA5 JUMP JUMPDEST PUSH2 0x2C59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x3A11 JUMP JUMPDEST PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x749 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1101596C CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP3 SWAP2 SWAP1 PUSH2 0x3D20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA9A SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x223888C1 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xB85 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xBB2 JUMPI POP PUSH2 0xB94 ADDRESS PUSH2 0x30D6 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE8 SWAP1 PUSH2 0x3DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC36 PUSH2 0x30F9 JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x3152 JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x31AB JUMP JUMPDEST DUP8 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xCE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE17 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE62 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAD DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEF8 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF43 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFAE PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1075 JUMPI PUSH2 0x1074 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1145 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1187 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x11F7 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C7 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x79025DAB199855650264C602DE305DCF5C292B8E5B4470EF271724A79D0343F4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x134A PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x13BA PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x148A PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x646D70535C6B451B92021874A72ABD441F122BA1C0B8F24D074352BD169FAD3F DUP2 PUSH1 0x40 MLOAD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1520 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1590 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1600 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16D0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x175F PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3204 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x90252124B346C6D6C466196D470D708D0C0C7026FE5BA62A2E01B5ADBF39E279 DUP2 PUSH1 0x40 MLOAD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17CB PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x17D5 PUSH1 0x0 PUSH2 0x33D1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x17DF PUSH2 0x3353 JUMP JUMPDEST DUP1 PUSH1 0xD0 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x9A33114B94F1C4C094352DEFF0082E220C977361E70D556DFB5565AD4678CE4D DUP2 PUSH1 0x40 MLOAD PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1899 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DC SWAP1 PUSH2 0x3E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AA2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1ADC JUMPI PUSH2 0x1ADB PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B4D JUMPI PUSH2 0x1B4C PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP5 DUP7 DUP6 DUP11 PUSH2 0x12C TIMESTAMP PUSH2 0x1BD9 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x41D9 JUMP JUMPDEST SWAP1 POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1CDF JUMPI PUSH2 0x1CDE PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1CF4 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x3EE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46FAA33C DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E23 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EA9 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1EE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDF SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1F2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F25 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1F85 DUP4 ADDRESS DUP5 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3497 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F4F21E2 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE2 SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2001 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2025 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x20A9 SWAP3 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x2105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FC SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218B SWAP1 PUSH2 0x4367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F0 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2231 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST LT ISZERO PUSH2 0x2272 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2269 SWAP1 PUSH2 0x43D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22BF DUP3 DUP3 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3520 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x230E SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2394 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B2 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2438 JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246E SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x24BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B4 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56A3B5FA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255D SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2607 JUMPI PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53616373 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C3 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2604 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 LT PUSH2 0x269D JUMPI DUP3 SWAP2 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAC76D450 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x267F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26CF SWAP1 PUSH2 0x4473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2734 SWAP2 SWAP1 PUSH2 0x3A8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2775 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST LT ISZERO PUSH2 0x27B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27AD SWAP1 PUSH2 0x4505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xCF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2805 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F4F21E2 CALLER DUP4 DUP6 PUSH2 0x2857 SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2874 SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B7 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP6 POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP6 PUSH2 0x2936 SWAP2 SWAP1 PUSH2 0x43F3 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH2 0x2945 SWAP3 SWAP2 SWAP1 PUSH2 0x4525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299C SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x29B5 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2A3B JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A71 SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B1C SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81782DFF DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7B SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C43 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C61 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC8 SWAP1 PUSH2 0x45C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CDA DUP2 PUSH2 0x33D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE7 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D6D JUMPI POP PUSH1 0xD0 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2DAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA3 SWAP1 PUSH2 0x426E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DE9 SWAP1 PUSH2 0x3C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x34C4454 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E8B SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2ECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC4 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9F1D9267 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6F SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST SWAP1 POP PUSH1 0xD1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81782DFF DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FCE SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0x3096 SWAP2 SWAP1 PUSH2 0x3A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313F SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3150 PUSH2 0x35A6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3198 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A9 PUSH2 0x3607 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x31FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F1 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3202 PUSH2 0x3673 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x328E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324B SWAP3 SWAP2 SWAP1 PUSH2 0x3D20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3268 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x328C SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x32CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C4 SWAP1 PUSH2 0x4776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334E DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x32EC SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x335B PUSH2 0x3793 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3379 PUSH2 0x190F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C6 SWAP1 PUSH2 0x47E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x351A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x34B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x35A1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x353F SWAP3 SWAP2 SWAP1 PUSH2 0x428E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x36CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x35F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35EC SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3605 PUSH2 0x3600 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x33D1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364D SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B9 SWAP1 PUSH2 0x46E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x97 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x378E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x374E SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST PUSH2 0x378D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3784 SWAP1 PUSH2 0x48CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x37AA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x37B3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x37F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37EF SWAP1 PUSH2 0x495F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3821 SWAP2 SWAP1 PUSH2 0x49F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x385E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3863 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3874 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3880 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x38E3 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x38DB JUMPI PUSH2 0x389B DUP6 PUSH2 0x38F6 JUMP JUMPDEST PUSH2 0x38DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D1 SWAP1 PUSH2 0x4A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x38EE JUMP JUMPDEST PUSH2 0x38ED DUP4 DUP4 PUSH2 0x3919 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x392C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3960 SWAP2 SWAP1 PUSH2 0x4AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A8 DUP3 PUSH2 0x397D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39B8 DUP2 PUSH2 0x399D JUMP JUMPDEST DUP2 EQ PUSH2 0x39C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39D5 DUP2 PUSH2 0x39AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39EE DUP2 PUSH2 0x39DB JUMP JUMPDEST DUP2 EQ PUSH2 0x39F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0B DUP2 PUSH2 0x39E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A28 JUMPI PUSH2 0x3A27 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A36 DUP6 DUP3 DUP7 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A47 DUP6 DUP3 DUP7 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5A DUP2 PUSH2 0x39DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A84 DUP2 PUSH2 0x399D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3ABB JUMPI PUSH2 0x3ABA PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AC9 DUP5 DUP3 DUP6 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3AF1 JUMPI PUSH2 0x3AF0 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AFF DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3B10 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3B21 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3B32 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B43 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3B54 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3B65 DUP11 DUP3 DUP12 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B89 DUP2 PUSH2 0x3B74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC0 JUMPI PUSH2 0x3BBF PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BCE DUP5 DUP3 DUP6 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BF0 JUMPI PUSH2 0x3BEF PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BFE DUP7 DUP3 DUP8 ADD PUSH2 0x39C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C0F DUP7 DUP3 DUP8 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C20 DUP7 DUP3 DUP8 ADD PUSH2 0x39FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C71 PUSH1 0x1F DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7C DUP3 PUSH2 0x3C3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA0 DUP2 PUSH2 0x3C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3CBC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3CC9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3CD6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CED DUP2 PUSH2 0x39E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D09 JUMPI PUSH2 0x3D08 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D17 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D35 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x3D42 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA5 PUSH1 0x2E DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3DB0 DUP3 PUSH2 0x3D49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD4 DUP2 PUSH2 0x3D98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E17 PUSH2 0x3E12 PUSH2 0x3E0D DUP5 PUSH2 0x3DDB JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH2 0x3DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E27 DUP2 PUSH2 0x3DFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4365526F757465722F44697361626C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7E PUSH1 0x11 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E89 DUP3 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EAD DUP2 PUSH2 0x3E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F4C DUP3 PUSH2 0x39DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F57 DUP4 PUSH2 0x39DB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3F8C JUMPI PUSH2 0x3F8B PUSH2 0x3F12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FCC DUP2 PUSH2 0x399D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FDE DUP4 DUP4 PUSH2 0x3FC3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4002 DUP3 PUSH2 0x3F97 JUMP JUMPDEST PUSH2 0x400C DUP2 DUP6 PUSH2 0x3FA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4017 DUP4 PUSH2 0x3FB3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4048 JUMPI DUP2 MLOAD PUSH2 0x402F DUP9 DUP3 PUSH2 0x3FD2 JUMP JUMPDEST SWAP8 POP PUSH2 0x403A DUP4 PUSH2 0x3FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x401B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x406A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4077 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3A51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4089 DUP2 DUP7 PUSH2 0x3FF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4098 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x40A5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40CE DUP3 PUSH2 0x40B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x40ED JUMPI PUSH2 0x40EC PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4100 PUSH2 0x3969 JUMP JUMPDEST SWAP1 POP PUSH2 0x410C DUP3 DUP3 PUSH2 0x40C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x412C JUMPI PUSH2 0x412B PUSH2 0x3EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4155 PUSH2 0x4150 DUP5 PUSH2 0x4111 JUMP JUMPDEST PUSH2 0x40F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4178 JUMPI PUSH2 0x4177 PUSH2 0x413D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41A1 JUMPI DUP1 PUSH2 0x418D DUP9 DUP3 PUSH2 0x3CDE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x417A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x41C0 JUMPI PUSH2 0x41BF PUSH2 0x40AF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x41D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41EF JUMPI PUSH2 0x41EE PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x420D JUMPI PUSH2 0x420C PUSH2 0x3978 JUMP JUMPDEST JUMPDEST PUSH2 0x4219 DUP5 DUP3 DUP6 ADD PUSH2 0x41AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F76696465723A206E6F7420616C6C6F7765640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4258 PUSH1 0x15 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4263 DUP3 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4287 DUP2 PUSH2 0x424B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x42B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DC PUSH2 0x42D7 PUSH2 0x42D2 DUP5 PUSH2 0x42B7 JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH2 0x39DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42EC DUP2 PUSH2 0x42C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4307 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4314 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x686173206E6F7420676F7420612070726F666974000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4351 PUSH1 0x14 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x435C DUP3 PUSH2 0x431B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4380 DUP2 PUSH2 0x4344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43BD PUSH1 0x13 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x43C8 DUP3 PUSH2 0x4387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43EC DUP2 PUSH2 0x43B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FE DUP3 PUSH2 0x39DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4409 DUP4 PUSH2 0x39DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x441C JUMPI PUSH2 0x441B PUSH2 0x3F12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4445582044495341424C45440000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x445D PUSH1 0xC DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4468 DUP3 PUSH2 0x4427 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x448C DUP2 PUSH2 0x4450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616D6F756E74206F66204365726F73526F7574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657220696E206365727420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44EF PUSH1 0x30 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x44FA DUP3 PUSH2 0x4493 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x451E DUP2 PUSH2 0x44E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x453A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3A51 JUMP JUMPDEST PUSH2 0x4547 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AA PUSH1 0x26 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x45B5 DUP3 PUSH2 0x454E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45D9 DUP2 PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E7374616B6520616D6F756E7400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463C PUSH1 0x2D DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4647 DUP3 PUSH2 0x45E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x462F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46CE PUSH1 0x2B DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x46D9 DUP3 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46FD DUP2 PUSH2 0x46C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4760 PUSH1 0x36 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x476B DUP3 PUSH2 0x4704 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x478F DUP2 PUSH2 0x4753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CC PUSH1 0x20 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x47D7 DUP3 PUSH2 0x4796 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47FB DUP2 PUSH2 0x47BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x480B DUP2 PUSH2 0x3B74 JUMP JUMPDEST DUP2 EQ PUSH2 0x4816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4828 DUP2 PUSH2 0x4802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4844 JUMPI PUSH2 0x4843 PUSH2 0x3973 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4852 DUP5 DUP3 DUP6 ADD PUSH2 0x4819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B7 PUSH1 0x2A DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x48C2 DUP3 PUSH2 0x485B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48E6 DUP2 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4949 PUSH1 0x26 DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4954 DUP3 PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4978 DUP2 PUSH2 0x493C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x49B3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4998 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x49C2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D3 DUP3 PUSH2 0x497F JUMP JUMPDEST PUSH2 0x49DD DUP2 DUP6 PUSH2 0x498A JUMP JUMPDEST SWAP4 POP PUSH2 0x49ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4995 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A05 DUP3 DUP5 PUSH2 0x49C8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A46 PUSH1 0x1D DUP4 PUSH2 0x3C2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4A51 DUP3 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A75 DUP2 PUSH2 0x4A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A92 DUP3 PUSH2 0x4A7C JUMP JUMPDEST PUSH2 0x4A9C DUP2 DUP6 PUSH2 0x3C2A JUMP JUMPDEST SWAP4 POP PUSH2 0x4AAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4995 JUMP JUMPDEST PUSH2 0x4AB5 DUP2 PUSH2 0x40B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ADA DUP2 DUP5 PUSH2 0x4A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xA9 0x1F KECCAK256 CREATE DUP14 PUSH12 0xEF89E170B12BD14697175CBB 0xB6 0xA5 DUP2 PUSH5 0x17893A5E16 0xDF DIV 0xD5 PUSH6 0x64736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "657:10418:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:325;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10358:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5215:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8445:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1432:871;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9890:371;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9453:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10266:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1858:84:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8741:292:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10976:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10457:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9038:410;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10555:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:101:0;;;;;;;;;;;;;:::i;:::-;;9748:137:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4772:380;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10878:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10758:115:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7648:675;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8570:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8328:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4393:374;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5512:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2339:2049;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7192:418;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6206:537:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10658:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6862:325;6976:18;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;7023:6:10::1;;;;;;;;;;;:18;;;7042:10;7054:9;7065:6;7023:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7010:62;;7129:10;;;;;;;;;;;7087:66;;7110:9;7087:66;;7098:10;7087:66;;;7142:10;7087:66;;;;;;:::i;:::-;;;;;;;;1772:1:3::0;2872:7;:22;;;;6862:325:10;;;;:::o;10358:94::-;10402:7;10436:8;;;;;;;;;;;10421:24;;10358:94;:::o;5215:263::-;5305:14;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;5344:6:10::1;;;;;;;;;;;:21;;;5366:10;5378:9;5344:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5335:53;;5428:10;;;;;;;;;;;5403:45;;5409:9;5403:45;;;5441:6;5403:45;;;;;;:::i;:::-;;;;;;;;1772:1:3::0;2872:7;:22;;;;5215:263:10;;;:::o;8445:120::-;8505:7;8531:6;;;;;;;;;;;:18;;;8550:7;8531:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8524:34;;8445:120;;;:::o;1432:871::-;3111:19:1;3134:13;;;;;;;;;;;3133:14;3111:36;;3179:14;:34;;;;;3212:1;3197:12;;;;;;;;;;:16;;;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;;3284:1;3268:12;;;;;;;;;;:17;;;3219:66;3178:108;3157:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3383:1;3368:12;;:16;;;;;;;;;;;;;;;;;;3398:14;3394:65;;;3444:4;3428:13;;:20;;;;;;;;;;;;;;;;;;3394:65;1666:16:10::1;:14;:16::i;:::-;1692:17;:15;:17::i;:::-;1719:24;:22;:24::i;:::-;1777:9;1753:10;;:34;;;;;;;;;;;;;;;;;;1812:9;1797:12;;:24;;;;;;;;;;;;;;;;;;1849:7;1831:8;;:26;;;;;;;;;;;;;;;;;;1883:5;1867:6;;:22;;;;;;;;;;;;;;;;;;1911:10;1899:4;;:23;;;;;;;;;;;;;;;;;;1953:4;1932:5;;:26;;;;;;;;;;;;;;;;;;1968:60;1998:10;2010:17;1975:9;1968:29;;;;:60;;;;;:::i;:::-;2038;2068:10;2080:17;2045:9;2038:29;;;;:60;;;;;:::i;:::-;2108:59;2138:9;2149:17;2115:9;2108:29;;;;:59;;;;;:::i;:::-;2177:54;2207:4;2213:17;2184:9;2177:29;;;;:54;;;;;:::i;:::-;2241:55;2271:5;2278:17;2248:9;2241:29;;;;:55;;;;;:::i;:::-;3483:14:1::0;3479:99;;;3529:5;3513:13;;:21;;;;;;;;;;;;;;;;;;3553:14;3565:1;3553:14;;;;;;:::i;:::-;;;;;;;;3479:99;3101:483;1432:871:10;;;;;;;:::o;9890:371::-;1334:13:0;:11;:13::i;:::-;10003:1:10::1;9967:38;;9975:15;;;;;;;;;;;9967:38;;;9963:115;;10019:59;10058:15;;;;;;;;;;;10076:1;10026:10;;;;;;;;;;;10019:30;;;;:59;;;;;:::i;:::-;9963:115;10123:4;10089:15;;:39;;;;;;;;;;;;;;;;;;10138:75;10177:15;;;;;;;;;;;10195:17;10145:10;;;;;;;;;;;10138:30;;;;:75;;;;;:::i;:::-;10228:26;10249:4;10228:26;;;;;;:::i;:::-;;;;;;;;9890:371:::0;:::o;9453:290::-;1334:13:0;:11;:13::i;:::-;9545:49:10::1;9584:5;;;;;;;;;;;9592:1;9552:10;;;;;;;;;;;9545:30;;;;:49;;;;;:::i;:::-;9625:4;9604:5;;:26;;;;;;;;;;;;;;;;;;9640:65;9679:5;;;;;;;;;;;9687:17;9647:10;;;;;;;;;;;9640:30;;;;:65;;;;;:::i;:::-;9720:16;9731:4;9720:16;;;;;;:::i;:::-;;;;;;;;9453:290:::0;:::o;10266:87::-;10311:7;10337:9;;;;;;;;;;;10330:16;;10266:87;:::o;1858:84:2:-;1905:4;1928:7;;;;;;;;;;;1921:14;;1858:84;:::o;8741:292:10:-;1334:13:0;:11;:13::i;:::-;8835:50:10::1;8874:6;;;;;;;;;;;8883:1;8842:10;;;;;;;;;;;8835:30;;;;:50;;;;;:::i;:::-;8911:5;8895:6;;:22;;;;;;;;;;;;;;;;;;8927:66;8966:6;;;;;;;;;;;8975:17;8934:10;;;;;;;;;;;8927:30;;;;:66;;;;;:::i;:::-;9008:18;9020:5;9008:18;;;;;;:::i;:::-;;;;;;;;8741:292:::0;:::o;10976:97::-;11025:7;11059:6;;;;;;;;;;;11044:22;;10976:97;:::o;10457:93::-;10505:7;10531:12;;;;;;;;;;;10524:19;;10457:93;:::o;9038:410::-;1334:13:0;:11;:13::i;:::-;9099:50:10::1;9140:4;;;;;;;;;;;9147:1;9106:12;;;;;;;;;;;9099:32;;;;:50;;;;;:::i;:::-;9159:48;9198:4;;;;;;;;;;;9205:1;9166:10;;;;;;;;;;;9159:30;;;;:48;;;;;:::i;:::-;9229:3;9217:4;;:16;;;;;;;;;;;;;;;;;;9272:66;9313:4;;;;;;;;;;;9320:17;9279:12;;;;;;;;;;;9272:32;;;;:66;;;;;:::i;:::-;9348:64;9387:4;;;;;;;;;;;9394:17;9355:10;;;;;;;;;;;9348:30;;;;:64;;;;;:::i;:::-;9427:14;9437:3;9427:14;;;;;;:::i;:::-;;;;;;;;9038:410:::0;:::o;10555:98::-;10601:7;10635:10;;;;;;;;;;;10620:26;;10555:98;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;9748:137:10:-;1334:13:0;:11;:13::i;:::-;9831:8:10::1;9819:9;;:20;;;;;;;;;;;;;;;;;;9854:24;9869:8;9854:24;;;;;;:::i;:::-;;;;;;;;9748:137:::0;:::o;4772:380::-;4866:13;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;4895:27:10::1;;;;;;;;;;:::i;:::-;;;;;;;;10878:93:::0;10925:7;10959:4;;;;;;;;;;;10944:20;;10878:93;:::o;1441:85:0:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;10758:115:10:-;10816:7;10850:15;;;;;;;;;;;10835:31;;10758:115;:::o;7648:675::-;7802:18;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;7845:6:10::1;;;;;;;;;;;:18;;;7864:10;7884:4;7891:6;7845:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7832:66;;7908:21;7946:1;7932:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7908:40;;7976:10;;;;;;;;;;;7958:4;7963:1;7958:7;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;::::0;::::1;8007:12;;;;;;;;;;;7997:4;8002:1;7997:7;;;;;;;;:::i;:::-;;;;;;;:22;;;;;;;;;::::0;::::1;8029:24;8056:4;;;;;;;;;;;:26;;;8096:10;8120:9;8143:4;8161:9;8202:3;8184:15;:21;;;;:::i;:::-;8056:159;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8029:186;;8264:12;;;;;;;;;;;8230:59;;8253:9;8230:59;;8241:10;8230:59;;;8278:7;8286:1;8278:10;;;;;;;;:::i;:::-;;;;;;;;8230:59;;;;;;:::i;:::-;;;;;;;;8306:7;8314:1;8306:10;;;;;;;;:::i;:::-;;;;;;;;8299:17;;;;1772:1:3::0;2872:7;:22;;;;7648:675:10;;;;;:::o;8570:166::-;8654:7;8684:15;;;;;;;;;;;:36;;;8721:7;8684:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8677:52;;8570:166;;;:::o;8328:112::-;8390:7;8416:8;:17;8425:7;8416:17;;;;;;;;;;;;;;;;8409:24;;8328:112;;;:::o;4393:374::-;4523:13;1328:7;:5;:7::i;:::-;1314:21;;:10;:21;;;:48;;;;1353:9;;;;;;;;;;;1339:23;;:10;:23;;;1314:48;1293:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;4552:65:10::2;4588:5;4603:4;4610:6;4559:10;;;;;;;;;;;4552:35;;;;:65;;;;;;:::i;:::-;4635:6;;;;;;;;;;;:17;;;4653:10;4665:6;4635:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4627:45;;4715:10;;;;;;;;;;;4687:51;;4695:10;4687:51;;;4728:6;4736:1;4687:51;;;;;;;:::i;:::-;;;;;;;;1772:1:3::1;2872:7;:22;;;;4393:374:10::0;;;;:::o;5512:502::-;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;5584:14:10::1;5601:8;:20;5610:10;5601:20;;;;;;;;;;;;;;;;5584:37;;5648:1;5639:6;:10;5631:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5796:6;5757:10;;;;;;;;;;;:20;;;5786:4;5757:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;5736:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5857:50;5889:9;5900:6;5864:10;;;;;;;;;;;5857:31;;;;:50;;;;;:::i;:::-;5941:6;5917:8;:20;5926:10;5917:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;5987:10;;;;;;;;;;;5962:45;;5968:9;5962:45;;;6000:6;5962:45;;;;;;:::i;:::-;;;;;;;;5574:440;1772:1:3::0;2872:7;:22;;;;5512:502:10;:::o;2339:2049::-;2443:13;1328:7;:5;:7::i;:::-;1314:21;;:10;:21;;;:48;;;;1353:9;;;;;;;;;;;1339:23;;:10;:23;;;1314:48;1293:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2472:14:10::2;2489:9;2472:26;;2968:20;2991:15;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2968:52;;3030:14;3068:12;3058:6;:22;3054:94;;3105:10;;;;;;;;;;;:24;;;3130:6;3105:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3096:41;;3054:94;3325:18;3353:14:::0;3391:1:::2;3381:6;:11;3377:542;;3421:6;3408:19;;3441:15;;;;;;;;;;;:26;;;3475:6;3441:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;3377:542;;;3515:22;;;;;;;;;;:::i;:::-;;;;;;;;3377:542;4040:10;4001;;;;;;;;;;;:20;;;4030:4;4001:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;3980:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;4208:6;4184:8;:20;4193:10;4184:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;4232:6;;;;;;;;;;;:17;;;4250:10;4275:6;4262:10;:19;;;;:::i;:::-;4232:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4224:58;;4317:12;;;;;;;;;;;4297:62;;4305:10;4297:62;;;4344:6;4331:10;:19;;;;:::i;:::-;4352:6;4297:62;;;;;;;:::i;:::-;;;;;;;;4369:12;;;;;1772:1:3::1;2872:7;:22;;;;2339:2049:10::0;:::o;7192:418::-;7321:18;1815:1:3;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;1328:7:10::1;:5;:7::i;:::-;1314:21;;:10;:21;;;:48;;;;1353:9;;;;;;;;;;;1339:23;;:10;:23;;;1314:48;1293:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;7368:6:::2;;;;;;;;;;;:18;;;7387:10;7407:4;7414:6;7368:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7355:66;;7431:15;;;;;;;;;;;:31;;;7463:9;7474:10;7431:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7555:12;;;;;;;;;;;7521:55;;7544:9;7521:55;;7532:10;7521:55;;;7569:6;7521:55;;;;;;:::i;:::-;;;;;;;;1772:1:3::0;2872:7;:22;;;;7192:418:10;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;2429:1:::1;2409:22;;:8;:22;;;;2401:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;6206:537:10:-;6332:18;1328:7;:5;:7::i;:::-;1314:21;;:10;:21;;;:48;;;;1353:9;;;;;;;;;;;1339:23;;:10;:23;;;1314:48;1293:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1:3::1;2569:7;;:19;;2561:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;6397:15:10::2;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6387:6;:41;;6366:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;6522:6;;;;;;;;;;;:18;;;6541:10;6561:4;6568:6;6522:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6509:66;;6585:15;;;;;;;;;;;:31;;;6617:9;6628:10;6585:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6688:12;;;;;;;;;;;6654:55;;6677:9;6654:55;;6665:10;6654:55;;;6702:6;6654:55;;;;;;:::i;:::-;;;;;;;;1772:1:3::1;2872:7;:22;;;;6206:537:10::0;;;;:::o;10658:95::-;10706:7;10740:5;;;;;;;;;;;10725:21;;10658:95;:::o;1186:320:4:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;1003:95:0:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;1063:97:2:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1126:27:2::1;:25;:27::i;:::-;1063:97::o:0;1853:111:3:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1923:34:3::1;:32;:34::i;:::-;1853:111::o:0;1475:603:8:-;1839:1;1830:5;:10;1829:62;;;;1889:1;1846:5;:15;;;1870:4;1877:7;1846:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;1981:90;2001:5;2031:22;;;2055:7;2064:5;2008:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:19;:90::i;:::-;1475:603;;;:::o;1599:130:0:-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2673:187::-;2746:16;2765:6;;;;;;;;;;;2746:25;;2790:8;2781:6;;:17;;;;;;;;;;;;;;;;;;2844:8;2813:40;;2834:8;2813:40;;;;;;;;;;;;2736:124;2673:187;:::o;974:241:8:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;763:205::-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;1104:111:0:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;1166:95:2:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1249:5:2::1;1239:7;;:15;;;;;;;;;;;;;;;;;;1166:95::o:0;1970:109:3:-;4910:13:1;;;;;;;;;;;4902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1772:1:3::1;2050:7;:22;;;;1970:109::o:0;3747:706:8:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;850:96:5:-;903:7;929:10;922:17;;850:96;:::o;3873:223:9:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:118::-;2116:24;2134:5;2116:24;:::i;:::-;2111:3;2104:37;2029:118;;:::o;2153:222::-;2246:4;2284:2;2273:9;2269:18;2261:26;;2297:71;2365:1;2354:9;2350:17;2341:6;2297:71;:::i;:::-;2153:222;;;;:::o;2381:329::-;2440:6;2489:2;2477:9;2468:7;2464:23;2460:32;2457:119;;;2495:79;;:::i;:::-;2457:119;2615:1;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2586:117;2381:329;;;;:::o;2716:1203::-;2829:6;2837;2845;2853;2861;2869;2877;2926:3;2914:9;2905:7;2901:23;2897:33;2894:120;;;2933:79;;:::i;:::-;2894:120;3053:1;3078:53;3123:7;3114:6;3103:9;3099:22;3078:53;:::i;:::-;3068:63;;3024:117;3180:2;3206:53;3251:7;3242:6;3231:9;3227:22;3206:53;:::i;:::-;3196:63;;3151:118;3308:2;3334:53;3379:7;3370:6;3359:9;3355:22;3334:53;:::i;:::-;3324:63;;3279:118;3436:2;3462:53;3507:7;3498:6;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3407:118;3564:3;3591:53;3636:7;3627:6;3616:9;3612:22;3591:53;:::i;:::-;3581:63;;3535:119;3693:3;3720:53;3765:7;3756:6;3745:9;3741:22;3720:53;:::i;:::-;3710:63;;3664:119;3822:3;3849:53;3894:7;3885:6;3874:9;3870:22;3849:53;:::i;:::-;3839:63;;3793:119;2716:1203;;;;;;;;;;:::o;3925:90::-;3959:7;4002:5;3995:13;3988:21;3977:32;;3925:90;;;:::o;4021:109::-;4102:21;4117:5;4102:21;:::i;:::-;4097:3;4090:34;4021:109;;:::o;4136:210::-;4223:4;4261:2;4250:9;4246:18;4238:26;;4274:65;4336:1;4325:9;4321:17;4312:6;4274:65;:::i;:::-;4136:210;;;;:::o;4352:329::-;4411:6;4460:2;4448:9;4439:7;4435:23;4431:32;4428:119;;;4466:79;;:::i;:::-;4428:119;4586:1;4611:53;4656:7;4647:6;4636:9;4632:22;4611:53;:::i;:::-;4601:63;;4557:117;4352:329;;;;:::o;4687:619::-;4764:6;4772;4780;4829:2;4817:9;4808:7;4804:23;4800:32;4797:119;;;4835:79;;:::i;:::-;4797:119;4955:1;4980:53;5025:7;5016:6;5005:9;5001:22;4980:53;:::i;:::-;4970:63;;4926:117;5082:2;5108:53;5153:7;5144:6;5133:9;5129:22;5108:53;:::i;:::-;5098:63;;5053:118;5210:2;5236:53;5281:7;5272:6;5261:9;5257:22;5236:53;:::i;:::-;5226:63;;5181:118;4687:619;;;;;:::o;5312:169::-;5396:11;5430:6;5425:3;5418:19;5470:4;5465:3;5461:14;5446:29;;5312:169;;;;:::o;5487:181::-;5627:33;5623:1;5615:6;5611:14;5604:57;5487:181;:::o;5674:366::-;5816:3;5837:67;5901:2;5896:3;5837:67;:::i;:::-;5830:74;;5913:93;6002:3;5913:93;:::i;:::-;6031:2;6026:3;6022:12;6015:19;;5674:366;;;:::o;6046:419::-;6212:4;6250:2;6239:9;6235:18;6227:26;;6299:9;6293:4;6289:20;6285:1;6274:9;6270:17;6263:47;6327:131;6453:4;6327:131;:::i;:::-;6319:139;;6046:419;;;:::o;6471:442::-;6620:4;6658:2;6647:9;6643:18;6635:26;;6671:71;6739:1;6728:9;6724:17;6715:6;6671:71;:::i;:::-;6752:72;6820:2;6809:9;6805:18;6796:6;6752:72;:::i;:::-;6834;6902:2;6891:9;6887:18;6878:6;6834:72;:::i;:::-;6471:442;;;;;;:::o;6919:143::-;6976:5;7007:6;7001:13;6992:22;;7023:33;7050:5;7023:33;:::i;:::-;6919:143;;;;:::o;7068:351::-;7138:6;7187:2;7175:9;7166:7;7162:23;7158:32;7155:119;;;7193:79;;:::i;:::-;7155:119;7313:1;7338:64;7394:7;7385:6;7374:9;7370:22;7338:64;:::i;:::-;7328:74;;7284:128;7068:351;;;;:::o;7425:332::-;7546:4;7584:2;7573:9;7569:18;7561:26;;7597:71;7665:1;7654:9;7650:17;7641:6;7597:71;:::i;:::-;7678:72;7746:2;7735:9;7731:18;7722:6;7678:72;:::i;:::-;7425:332;;;;;:::o;7763:233::-;7903:34;7899:1;7891:6;7887:14;7880:58;7972:16;7967:2;7959:6;7955:15;7948:41;7763:233;:::o;8002:366::-;8144:3;8165:67;8229:2;8224:3;8165:67;:::i;:::-;8158:74;;8241:93;8330:3;8241:93;:::i;:::-;8359:2;8354:3;8350:12;8343:19;;8002:366;;;:::o;8374:419::-;8540:4;8578:2;8567:9;8563:18;8555:26;;8627:9;8621:4;8617:20;8613:1;8602:9;8598:17;8591:47;8655:131;8781:4;8655:131;:::i;:::-;8647:139;;8374:419;;;:::o;8799:85::-;8844:7;8873:5;8862:16;;8799:85;;;:::o;8890:86::-;8925:7;8965:4;8958:5;8954:16;8943:27;;8890:86;;;:::o;8982:60::-;9010:3;9031:5;9024:12;;8982:60;;;:::o;9048:154::-;9104:9;9137:59;9153:42;9162:32;9188:5;9162:32;:::i;:::-;9153:42;:::i;:::-;9137:59;:::i;:::-;9124:72;;9048:154;;;:::o;9208:143::-;9301:43;9338:5;9301:43;:::i;:::-;9296:3;9289:56;9208:143;;:::o;9357:234::-;9456:4;9494:2;9483:9;9479:18;9471:26;;9507:77;9581:1;9570:9;9566:17;9557:6;9507:77;:::i;:::-;9357:234;;;;:::o;9597:167::-;9737:19;9733:1;9725:6;9721:14;9714:43;9597:167;:::o;9770:366::-;9912:3;9933:67;9997:2;9992:3;9933:67;:::i;:::-;9926:74;;10009:93;10098:3;10009:93;:::i;:::-;10127:2;10122:3;10118:12;10111:19;;9770:366;;;:::o;10142:419::-;10308:4;10346:2;10335:9;10331:18;10323:26;;10395:9;10389:4;10385:20;10381:1;10370:9;10366:17;10359:47;10423:131;10549:4;10423:131;:::i;:::-;10415:139;;10142:419;;;:::o;10567:180::-;10615:77;10612:1;10605:88;10712:4;10709:1;10702:15;10736:4;10733:1;10726:15;10753:180;10801:77;10798:1;10791:88;10898:4;10895:1;10888:15;10922:4;10919:1;10912:15;10939:180;10987:77;10984:1;10977:88;11084:4;11081:1;11074:15;11108:4;11105:1;11098:15;11125:305;11165:3;11184:20;11202:1;11184:20;:::i;:::-;11179:25;;11218:20;11236:1;11218:20;:::i;:::-;11213:25;;11372:1;11304:66;11300:74;11297:1;11294:81;11291:107;;;11378:18;;:::i;:::-;11291:107;11422:1;11419;11415:9;11408:16;;11125:305;;;;:::o;11436:114::-;11503:6;11537:5;11531:12;11521:22;;11436:114;;;:::o;11556:184::-;11655:11;11689:6;11684:3;11677:19;11729:4;11724:3;11720:14;11705:29;;11556:184;;;;:::o;11746:132::-;11813:4;11836:3;11828:11;;11866:4;11861:3;11857:14;11849:22;;11746:132;;;:::o;11884:108::-;11961:24;11979:5;11961:24;:::i;:::-;11956:3;11949:37;11884:108;;:::o;11998:179::-;12067:10;12088:46;12130:3;12122:6;12088:46;:::i;:::-;12166:4;12161:3;12157:14;12143:28;;11998:179;;;;:::o;12183:113::-;12253:4;12285;12280:3;12276:14;12268:22;;12183:113;;;:::o;12332:732::-;12451:3;12480:54;12528:5;12480:54;:::i;:::-;12550:86;12629:6;12624:3;12550:86;:::i;:::-;12543:93;;12660:56;12710:5;12660:56;:::i;:::-;12739:7;12770:1;12755:284;12780:6;12777:1;12774:13;12755:284;;;12856:6;12850:13;12883:63;12942:3;12927:13;12883:63;:::i;:::-;12876:70;;12969:60;13022:6;12969:60;:::i;:::-;12959:70;;12815:224;12802:1;12799;12795:9;12790:14;;12755:284;;;12759:14;13055:3;13048:10;;12456:608;;;12332:732;;;;:::o;13070:815::-;13325:4;13363:3;13352:9;13348:19;13340:27;;13377:71;13445:1;13434:9;13430:17;13421:6;13377:71;:::i;:::-;13458:72;13526:2;13515:9;13511:18;13502:6;13458:72;:::i;:::-;13577:9;13571:4;13567:20;13562:2;13551:9;13547:18;13540:48;13605:108;13708:4;13699:6;13605:108;:::i;:::-;13597:116;;13723:72;13791:2;13780:9;13776:18;13767:6;13723:72;:::i;:::-;13805:73;13873:3;13862:9;13858:19;13849:6;13805:73;:::i;:::-;13070:815;;;;;;;;:::o;13891:117::-;14000:1;13997;13990:12;14014:102;14055:6;14106:2;14102:7;14097:2;14090:5;14086:14;14082:28;14072:38;;14014:102;;;:::o;14122:281::-;14205:27;14227:4;14205:27;:::i;:::-;14197:6;14193:40;14335:6;14323:10;14320:22;14299:18;14287:10;14284:34;14281:62;14278:88;;;14346:18;;:::i;:::-;14278:88;14386:10;14382:2;14375:22;14165:238;14122:281;;:::o;14409:129::-;14443:6;14470:20;;:::i;:::-;14460:30;;14499:33;14527:4;14519:6;14499:33;:::i;:::-;14409:129;;;:::o;14544:311::-;14621:4;14711:18;14703:6;14700:30;14697:56;;;14733:18;;:::i;:::-;14697:56;14783:4;14775:6;14771:17;14763:25;;14843:4;14837;14833:15;14825:23;;14544:311;;;:::o;14861:117::-;14970:1;14967;14960:12;15001:732;15108:5;15133:81;15149:64;15206:6;15149:64;:::i;:::-;15133:81;:::i;:::-;15124:90;;15234:5;15263:6;15256:5;15249:21;15297:4;15290:5;15286:16;15279:23;;15350:4;15342:6;15338:17;15330:6;15326:30;15379:3;15371:6;15368:15;15365:122;;;15398:79;;:::i;:::-;15365:122;15513:6;15496:231;15530:6;15525:3;15522:15;15496:231;;;15605:3;15634:48;15678:3;15666:10;15634:48;:::i;:::-;15629:3;15622:61;15712:4;15707:3;15703:14;15696:21;;15572:155;15556:4;15551:3;15547:14;15540:21;;15496:231;;;15500:21;15114:619;;15001:732;;;;;:::o;15756:385::-;15838:5;15887:3;15880:4;15872:6;15868:17;15864:27;15854:122;;15895:79;;:::i;:::-;15854:122;16005:6;15999:13;16030:105;16131:3;16123:6;16116:4;16108:6;16104:17;16030:105;:::i;:::-;16021:114;;15844:297;15756:385;;;;:::o;16147:554::-;16242:6;16291:2;16279:9;16270:7;16266:23;16262:32;16259:119;;;16297:79;;:::i;:::-;16259:119;16438:1;16427:9;16423:17;16417:24;16468:18;16460:6;16457:30;16454:117;;;16490:79;;:::i;:::-;16454:117;16595:89;16676:7;16667:6;16656:9;16652:22;16595:89;:::i;:::-;16585:99;;16388:306;16147:554;;;;:::o;16707:171::-;16847:23;16843:1;16835:6;16831:14;16824:47;16707:171;:::o;16884:366::-;17026:3;17047:67;17111:2;17106:3;17047:67;:::i;:::-;17040:74;;17123:93;17212:3;17123:93;:::i;:::-;17241:2;17236:3;17232:12;17225:19;;16884:366;;;:::o;17256:419::-;17422:4;17460:2;17449:9;17445:18;17437:26;;17509:9;17503:4;17499:20;17495:1;17484:9;17480:17;17473:47;17537:131;17663:4;17537:131;:::i;:::-;17529:139;;17256:419;;;:::o;17681:332::-;17802:4;17840:2;17829:9;17825:18;17817:26;;17853:71;17921:1;17910:9;17906:17;17897:6;17853:71;:::i;:::-;17934:72;18002:2;17991:9;17987:18;17978:6;17934:72;:::i;:::-;17681:332;;;;;:::o;18019:85::-;18064:7;18093:5;18082:16;;18019:85;;;:::o;18110:158::-;18168:9;18201:61;18219:42;18228:32;18254:5;18228:32;:::i;:::-;18219:42;:::i;:::-;18201:61;:::i;:::-;18188:74;;18110:158;;;:::o;18274:147::-;18369:45;18408:5;18369:45;:::i;:::-;18364:3;18357:58;18274:147;;:::o;18427:348::-;18556:4;18594:2;18583:9;18579:18;18571:26;;18607:71;18675:1;18664:9;18660:17;18651:6;18607:71;:::i;:::-;18688:80;18764:2;18753:9;18749:18;18740:6;18688:80;:::i;:::-;18427:348;;;;;:::o;18781:170::-;18921:22;18917:1;18909:6;18905:14;18898:46;18781:170;:::o;18957:366::-;19099:3;19120:67;19184:2;19179:3;19120:67;:::i;:::-;19113:74;;19196:93;19285:3;19196:93;:::i;:::-;19314:2;19309:3;19305:12;19298:19;;18957:366;;;:::o;19329:419::-;19495:4;19533:2;19522:9;19518:18;19510:26;;19582:9;19576:4;19572:20;19568:1;19557:9;19553:17;19546:47;19610:131;19736:4;19610:131;:::i;:::-;19602:139;;19329:419;;;:::o;19754:169::-;19894:21;19890:1;19882:6;19878:14;19871:45;19754:169;:::o;19929:366::-;20071:3;20092:67;20156:2;20151:3;20092:67;:::i;:::-;20085:74;;20168:93;20257:3;20168:93;:::i;:::-;20286:2;20281:3;20277:12;20270:19;;19929:366;;;:::o;20301:419::-;20467:4;20505:2;20494:9;20490:18;20482:26;;20554:9;20548:4;20544:20;20540:1;20529:9;20525:17;20518:47;20582:131;20708:4;20582:131;:::i;:::-;20574:139;;20301:419;;;:::o;20726:191::-;20766:4;20786:20;20804:1;20786:20;:::i;:::-;20781:25;;20820:20;20838:1;20820:20;:::i;:::-;20815:25;;20859:1;20856;20853:8;20850:34;;;20864:18;;:::i;:::-;20850:34;20909:1;20906;20902:9;20894:17;;20726:191;;;;:::o;20923:162::-;21063:14;21059:1;21051:6;21047:14;21040:38;20923:162;:::o;21091:366::-;21233:3;21254:67;21318:2;21313:3;21254:67;:::i;:::-;21247:74;;21330:93;21419:3;21330:93;:::i;:::-;21448:2;21443:3;21439:12;21432:19;;21091:366;;;:::o;21463:419::-;21629:4;21667:2;21656:9;21652:18;21644:26;;21716:9;21710:4;21706:20;21702:1;21691:9;21687:17;21680:47;21744:131;21870:4;21744:131;:::i;:::-;21736:139;;21463:419;;;:::o;21888:235::-;22028:34;22024:1;22016:6;22012:14;22005:58;22097:18;22092:2;22084:6;22080:15;22073:43;21888:235;:::o;22129:366::-;22271:3;22292:67;22356:2;22351:3;22292:67;:::i;:::-;22285:74;;22368:93;22457:3;22368:93;:::i;:::-;22486:2;22481:3;22477:12;22470:19;;22129:366;;;:::o;22501:419::-;22667:4;22705:2;22694:9;22690:18;22682:26;;22754:9;22748:4;22744:20;22740:1;22729:9;22725:17;22718:47;22782:131;22908:4;22782:131;:::i;:::-;22774:139;;22501:419;;;:::o;22926:332::-;23047:4;23085:2;23074:9;23070:18;23062:26;;23098:71;23166:1;23155:9;23151:17;23142:6;23098:71;:::i;:::-;23179:72;23247:2;23236:9;23232:18;23223:6;23179:72;:::i;:::-;22926:332;;;;;:::o;23264:225::-;23404:34;23400:1;23392:6;23388:14;23381:58;23473:8;23468:2;23460:6;23456:15;23449:33;23264:225;:::o;23495:366::-;23637:3;23658:67;23722:2;23717:3;23658:67;:::i;:::-;23651:74;;23734:93;23823:3;23734:93;:::i;:::-;23852:2;23847:3;23843:12;23836:19;;23495:366;;;:::o;23867:419::-;24033:4;24071:2;24060:9;24056:18;24048:26;;24120:9;24114:4;24110:20;24106:1;24095:9;24091:17;24084:47;24148:131;24274:4;24148:131;:::i;:::-;24140:139;;23867:419;;;:::o;24292:232::-;24432:34;24428:1;24420:6;24416:14;24409:58;24501:15;24496:2;24488:6;24484:15;24477:40;24292:232;:::o;24530:366::-;24672:3;24693:67;24757:2;24752:3;24693:67;:::i;:::-;24686:74;;24769:93;24858:3;24769:93;:::i;:::-;24887:2;24882:3;24878:12;24871:19;;24530:366;;;:::o;24902:419::-;25068:4;25106:2;25095:9;25091:18;25083:26;;25155:9;25149:4;25145:20;25141:1;25130:9;25126:17;25119:47;25183:131;25309:4;25183:131;:::i;:::-;25175:139;;24902:419;;;:::o;25327:230::-;25467:34;25463:1;25455:6;25451:14;25444:58;25536:13;25531:2;25523:6;25519:15;25512:38;25327:230;:::o;25563:366::-;25705:3;25726:67;25790:2;25785:3;25726:67;:::i;:::-;25719:74;;25802:93;25891:3;25802:93;:::i;:::-;25920:2;25915:3;25911:12;25904:19;;25563:366;;;:::o;25935:419::-;26101:4;26139:2;26128:9;26124:18;26116:26;;26188:9;26182:4;26178:20;26174:1;26163:9;26159:17;26152:47;26216:131;26342:4;26216:131;:::i;:::-;26208:139;;25935:419;;;:::o;26360:241::-;26500:34;26496:1;26488:6;26484:14;26477:58;26569:24;26564:2;26556:6;26552:15;26545:49;26360:241;:::o;26607:366::-;26749:3;26770:67;26834:2;26829:3;26770:67;:::i;:::-;26763:74;;26846:93;26935:3;26846:93;:::i;:::-;26964:2;26959:3;26955:12;26948:19;;26607:366;;;:::o;26979:419::-;27145:4;27183:2;27172:9;27168:18;27160:26;;27232:9;27226:4;27222:20;27218:1;27207:9;27203:17;27196:47;27260:131;27386:4;27260:131;:::i;:::-;27252:139;;26979:419;;;:::o;27404:182::-;27544:34;27540:1;27532:6;27528:14;27521:58;27404:182;:::o;27592:366::-;27734:3;27755:67;27819:2;27814:3;27755:67;:::i;:::-;27748:74;;27831:93;27920:3;27831:93;:::i;:::-;27949:2;27944:3;27940:12;27933:19;;27592:366;;;:::o;27964:419::-;28130:4;28168:2;28157:9;28153:18;28145:26;;28217:9;28211:4;28207:20;28203:1;28192:9;28188:17;28181:47;28245:131;28371:4;28245:131;:::i;:::-;28237:139;;27964:419;;;:::o;28389:116::-;28459:21;28474:5;28459:21;:::i;:::-;28452:5;28449:32;28439:60;;28495:1;28492;28485:12;28439:60;28389:116;:::o;28511:137::-;28565:5;28596:6;28590:13;28581:22;;28612:30;28636:5;28612:30;:::i;:::-;28511:137;;;;:::o;28654:345::-;28721:6;28770:2;28758:9;28749:7;28745:23;28741:32;28738:119;;;28776:79;;:::i;:::-;28738:119;28896:1;28921:61;28974:7;28965:6;28954:9;28950:22;28921:61;:::i;:::-;28911:71;;28867:125;28654:345;;;;:::o;29005:229::-;29145:34;29141:1;29133:6;29129:14;29122:58;29214:12;29209:2;29201:6;29197:15;29190:37;29005:229;:::o;29240:366::-;29382:3;29403:67;29467:2;29462:3;29403:67;:::i;:::-;29396:74;;29479:93;29568:3;29479:93;:::i;:::-;29597:2;29592:3;29588:12;29581:19;;29240:366;;;:::o;29612:419::-;29778:4;29816:2;29805:9;29801:18;29793:26;;29865:9;29859:4;29855:20;29851:1;29840:9;29836:17;29829:47;29893:131;30019:4;29893:131;:::i;:::-;29885:139;;29612:419;;;:::o;30037:225::-;30177:34;30173:1;30165:6;30161:14;30154:58;30246:8;30241:2;30233:6;30229:15;30222:33;30037:225;:::o;30268:366::-;30410:3;30431:67;30495:2;30490:3;30431:67;:::i;:::-;30424:74;;30507:93;30596:3;30507:93;:::i;:::-;30625:2;30620:3;30616:12;30609:19;;30268:366;;;:::o;30640:419::-;30806:4;30844:2;30833:9;30829:18;30821:26;;30893:9;30887:4;30883:20;30879:1;30868:9;30864:17;30857:47;30921:131;31047:4;30921:131;:::i;:::-;30913:139;;30640:419;;;:::o;31065:98::-;31116:6;31150:5;31144:12;31134:22;;31065:98;;;:::o;31169:147::-;31270:11;31307:3;31292:18;;31169:147;;;;:::o;31322:307::-;31390:1;31400:113;31414:6;31411:1;31408:13;31400:113;;;31499:1;31494:3;31490:11;31484:18;31480:1;31475:3;31471:11;31464:39;31436:2;31433:1;31429:10;31424:15;;31400:113;;;31531:6;31528:1;31525:13;31522:101;;;31611:1;31602:6;31597:3;31593:16;31586:27;31522:101;31371:258;31322:307;;;:::o;31635:373::-;31739:3;31767:38;31799:5;31767:38;:::i;:::-;31821:88;31902:6;31897:3;31821:88;:::i;:::-;31814:95;;31918:52;31963:6;31958:3;31951:4;31944:5;31940:16;31918:52;:::i;:::-;31995:6;31990:3;31986:16;31979:23;;31743:265;31635:373;;;;:::o;32014:271::-;32144:3;32166:93;32255:3;32246:6;32166:93;:::i;:::-;32159:100;;32276:3;32269:10;;32014:271;;;;:::o;32291:179::-;32431:31;32427:1;32419:6;32415:14;32408:55;32291:179;:::o;32476:366::-;32618:3;32639:67;32703:2;32698:3;32639:67;:::i;:::-;32632:74;;32715:93;32804:3;32715:93;:::i;:::-;32833:2;32828:3;32824:12;32817:19;;32476:366;;;:::o;32848:419::-;33014:4;33052:2;33041:9;33037:18;33029:26;;33101:9;33095:4;33091:20;33087:1;33076:9;33072:17;33065:47;33129:131;33255:4;33129:131;:::i;:::-;33121:139;;32848:419;;;:::o;33273:99::-;33325:6;33359:5;33353:12;33343:22;;33273:99;;;:::o;33378:364::-;33466:3;33494:39;33527:5;33494:39;:::i;:::-;33549:71;33613:6;33608:3;33549:71;:::i;:::-;33542:78;;33629:52;33674:6;33669:3;33662:4;33655:5;33651:16;33629:52;:::i;:::-;33706:29;33728:6;33706:29;:::i;:::-;33701:3;33697:39;33690:46;;33470:272;33378:364;;;;:::o;33748:313::-;33861:4;33899:2;33888:9;33884:18;33876:26;;33948:9;33942:4;33938:20;33934:1;33923:9;33919:17;33912:47;33976:78;34049:4;34040:6;33976:78;:::i;:::-;33968:86;;33748:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3844800",
								"executionCost": "4362",
								"totalCost": "3849162"
							},
							"external": {
								"changeBNBStakingPool(address)": "infinite",
								"changeDex(address)": "infinite",
								"changePool(address)": "infinite",
								"changeProvider(address)": "infinite",
								"changeVault(address)": "infinite",
								"claim(address)": "infinite",
								"claimProfit(address)": "infinite",
								"deposit()": "infinite",
								"depositABNBc(uint256)": "25005",
								"depositABNBcFrom(address,uint256)": "infinite",
								"getBNBStakingPoolAddress()": "2589",
								"getCeToken()": "2591",
								"getCertToken()": "2611",
								"getDexAddress()": "2612",
								"getPendingWithdrawalOf(address)": "infinite",
								"getPoolAddress()": "2632",
								"getProfitFor(address)": "2886",
								"getProvider()": "2568",
								"getVaultAddress()": "2634",
								"getWbnbAddress()": "2567",
								"getYieldFor(address)": "infinite",
								"initialize(address,address,address,address,address,address,address)": "infinite",
								"owner()": "2567",
								"paused()": "2547",
								"renounceOwnership()": "30509",
								"transferOwnership(address)": "30813",
								"withdraw(address,uint256)": "infinite",
								"withdrawABNBc(address,uint256)": "infinite",
								"withdrawFor(address,uint256)": "infinite",
								"withdrawWithSlippage(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 11075,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1a91f20f08d6bef89e170b12bd14697175cbbb6a5816417893a5e16df04d56564736f6c634300080a0033",
									".code": [
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "796F69AA"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "AC78467C"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "DB518DB2"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "DB518DB2"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "F3FEF3A3"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "F586C6D9"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "AC78467C"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "BCDEF0A4"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "C0AB44F6"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "D0E30DB0"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "97FD9BE7"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "AB43C3DF"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "AB89B6AF"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "796F69AA"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "7C0A75E5"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "854CF3CF"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "483D45BD"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "665A21DB"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "665A21DB"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "69D2DA9C"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "6EECFDAA"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "483D45BD"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "60E232A9"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "65CACAA4"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "223888C1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "223888C1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "35876476"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "3AF82C59"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "4339BC30"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "3550D56"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "C632BBE"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "1E83409A"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 657,
											"end": 11075,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "PUSH",
											"source": 10,
											"value": "9F1D9267"
										},
										{
											"begin": 7042,
											"end": 7052,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7063,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 7023,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7108,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E"
										},
										{
											"begin": 7142,
											"end": 7152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7153,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 7187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10444,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10452,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5365,
											"name": "PUSH",
											"source": 10,
											"value": "1101596C"
										},
										{
											"begin": 5366,
											"end": 5376,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5344,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5428,
											"end": 5438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068"
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5448,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5478,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8505,
											"end": 8512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "PUSH",
											"source": 10,
											"value": "223888C1"
										},
										{
											"begin": 8550,
											"end": 8557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8531,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8565,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1666,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1692,
											"end": 1709,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1709,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1692,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1719,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1719,
											"end": 1743,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1719,
											"end": 1743,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1719,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 1753,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "CE"
										},
										{
											"begin": 1831,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1968,
											"end": 1997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1968,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2068,
											"end": 2078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2149,
											"end": 2166,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2137,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2137,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2108,
											"end": 2137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2108,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2207,
											"end": 2211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2230,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2295,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2241,
											"end": 2270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2241,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 2303,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9967,
											"end": 10005,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9967,
											"end": 10005,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9967,
											"end": 10005,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9967,
											"end": 10005,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9967,
											"end": 10005,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9963,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 9963,
											"end": 10078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10058,
											"end": 10073,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10049,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10019,
											"end": 10049,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 10019,
											"end": 10049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 10019,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9963,
											"end": 10078,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 9963,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10127,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10104,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 10089,
											"end": 10104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10195,
											"end": 10212,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10168,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10138,
											"end": 10168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 10138,
											"end": 10168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 10138,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "PUSH",
											"source": 10,
											"value": "C7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9"
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10254,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10261,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9552,
											"end": 9562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9545,
											"end": 9575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9545,
											"end": 9575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9545,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9687,
											"end": 9704,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9647,
											"end": 9657,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9670,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9640,
											"end": 9670,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9640,
											"end": 9670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9640,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "PUSH",
											"source": 10,
											"value": "79025DAB199855650264C602DE305DCF5C292B8E5B4470EF271724A79D0343F4"
										},
										{
											"begin": 9731,
											"end": 9735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9736,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9743,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10353,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8842,
											"end": 8852,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8865,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8835,
											"end": 8865,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 8835,
											"end": 8865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8835,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8916,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8944,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8957,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8927,
											"end": 8957,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 8927,
											"end": 8957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8927,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH",
											"source": 10,
											"value": "646D70535C6B451B92021874A72ABD441F122BA1C0B8F24D074352BD169FAD3F"
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 9033,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11073,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10505,
											"end": 10512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10524,
											"end": 10543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10524,
											"end": 10543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10550,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9131,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9099,
											"end": 9131,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9099,
											"end": 9131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9099,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9189,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9159,
											"end": 9189,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9159,
											"end": 9189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 9159,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9232,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9337,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9291,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9304,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9304,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9272,
											"end": 9304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9272,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9348,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "90252124B346C6D6C466196D470D708D0C0C7026FE5BA62A2E01B5ADBF39E279"
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9441,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9448,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10601,
											"end": 10608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10653,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9831,
											"end": 9839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "PUSH",
											"source": 10,
											"value": "9A33114B94F1C4C094352DEFF0082E220C977361E70D556DFB5565AD4678CE4D"
										},
										{
											"begin": 9869,
											"end": 9877,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9878,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9885,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 4772,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4922,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10925,
											"end": 10932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10944,
											"end": 10964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10944,
											"end": 10964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10971,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 10865,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10758,
											"end": 10873,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 10,
											"value": "9F1D9267"
										},
										{
											"begin": 7864,
											"end": 7874,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7888,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7897,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7845,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7832,
											"end": 7898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7832,
											"end": 7898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7947,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8007,
											"end": 8019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8082,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8082,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8082,
											"name": "PUSH",
											"source": 10,
											"value": "18CBAFE5"
										},
										{
											"begin": 8096,
											"end": 8106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8147,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8205,
											"name": "PUSH",
											"source": 10,
											"value": "12C"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8184,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8056,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8262,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8251,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E"
										},
										{
											"begin": 8278,
											"end": 8285,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8286,
											"end": 8287,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8289,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8313,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8315,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 8323,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8654,
											"end": 8661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8684,
											"end": 8720,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "46FAA33C"
										},
										{
											"begin": 8721,
											"end": 8728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8684,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8677,
											"end": 8729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8677,
											"end": 8729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8424,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8440,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1349,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4607,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4587,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4587,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4552,
											"end": 4587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4552,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "PUSH",
											"source": 10,
											"value": "2F4F21E2"
										},
										{
											"begin": 4653,
											"end": 4663,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4635,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4725,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4705,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH",
											"source": 10,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4738,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4767,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5609,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5639,
											"end": 5649,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5757,
											"end": 5767,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5777,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5757,
											"end": 5777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5777,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 5786,
											"end": 5790,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5757,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5802,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5802,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5736,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5888,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5857,
											"end": 5888,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5857,
											"end": 5888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5857,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5925,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 5936,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068"
										},
										{
											"begin": 6000,
											"end": 6006,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6007,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 6014,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1349,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2991,
											"end": 3018,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "56A3B5FA"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3080,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3054,
											"end": 3148,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "53616373"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3148,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3054,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3392,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3456,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3467,
											"name": "PUSH",
											"source": 10,
											"value": "AC76D450"
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3537,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3377,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4040,
											"end": 4050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4011,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4021,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4021,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4021,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4001,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4050,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3980,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4214,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4192,
											"name": "PUSH",
											"source": 10,
											"value": "CF"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "2F4F21E2"
										},
										{
											"begin": 4250,
											"end": 4260,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 4232,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4282,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4341,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4331,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4359,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 4388,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1349,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH",
											"source": 10,
											"value": "9F1D9267"
										},
										{
											"begin": 7387,
											"end": 7397,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7411,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7368,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7431,
											"end": 7462,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "81782DFF"
										},
										{
											"begin": 7463,
											"end": 7472,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7567,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7532,
											"end": 7542,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7576,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7610,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "D0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1349,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1314,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6426,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6426,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6426,
											"name": "PUSH",
											"source": 10,
											"value": "34C4454"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 6397,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6428,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6387,
											"end": 6428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 6366,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH",
											"source": 10,
											"value": "9F1D9267"
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 6568,
											"end": 6574,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 6522,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6509,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6509,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "D1"
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "81782DFF"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6675,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6709,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6743,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10658,
											"end": 10753,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 1126,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1890,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 1195,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "636"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 17,
											"value": "636"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2104,
											"end": 2141,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "tag",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2486,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2492,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "tag",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 2495,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 2457,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2381,
											"end": 2710,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2905,
											"end": 2912,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2901,
											"end": 2924,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3014,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 2894,
											"end": 3014,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2894,
											"end": 3014,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 2894,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 3123,
											"end": 3130,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3114,
											"end": 3120,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3078,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3078,
											"end": 3131,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3131,
											"name": "tag",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 3078,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3068,
											"end": 3131,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 3068,
											"end": 3131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3024,
											"end": 3141,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 3251,
											"end": 3258,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3231,
											"end": 3240,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3227,
											"end": 3249,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3259,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3151,
											"end": 3269,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 3379,
											"end": 3386,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3355,
											"end": 3377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3324,
											"end": 3387,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3279,
											"end": 3397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3504,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 3462,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3515,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3452,
											"end": 3515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3407,
											"end": 3525,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3612,
											"end": 3634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "tag",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3581,
											"end": 3644,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3581,
											"end": 3644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3535,
											"end": 3654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3696,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3745,
											"end": 3754,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3741,
											"end": 3763,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3664,
											"end": 3783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 3849,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3849,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3849,
											"end": 3902,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3902,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 3849,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3839,
											"end": 3902,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3839,
											"end": 3902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3793,
											"end": 3912,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3919,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4007,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3995,
											"end": 4008,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3988,
											"end": 4009,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3977,
											"end": 4009,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3977,
											"end": 4009,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 4015,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4021,
											"end": 4130,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 4021,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 4117,
											"end": 4122,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4090,
											"end": 4124,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4130,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4274,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4318,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4274,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 4274,
											"end": 4339,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4274,
											"end": 4339,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 4274,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4346,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4439,
											"end": 4446,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4435,
											"end": 4458,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4431,
											"end": 4463,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4428,
											"end": 4547,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4428,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 4428,
											"end": 4547,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4466,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 4466,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4466,
											"end": 4545,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4545,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 4466,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4428,
											"end": 4547,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 4428,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4647,
											"end": 4653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4636,
											"end": 4645,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4632,
											"end": 4654,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 4611,
											"end": 4664,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4611,
											"end": 4664,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 4611,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4601,
											"end": 4664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4557,
											"end": 4674,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4681,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4778,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 4815,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4827,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4800,
											"end": 4832,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4797,
											"end": 4916,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4797,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 4797,
											"end": 4916,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4835,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 4835,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4835,
											"end": 4914,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4835,
											"end": 4914,
											"name": "tag",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 4835,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4797,
											"end": 4916,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 4797,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4955,
											"end": 4956,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 5025,
											"end": 5032,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5022,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5005,
											"end": 5014,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5001,
											"end": 5023,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4980,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 4980,
											"end": 5033,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5033,
											"name": "tag",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 4980,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5033,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5033,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4926,
											"end": 5043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 5153,
											"end": 5160,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5144,
											"end": 5150,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5129,
											"end": 5151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5108,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 5108,
											"end": 5161,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5108,
											"end": 5161,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 5108,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5161,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5053,
											"end": 5171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5210,
											"end": 5212,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5236,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 5281,
											"end": 5288,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5257,
											"end": 5279,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5236,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 5236,
											"end": 5289,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5289,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 5236,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5226,
											"end": 5289,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5226,
											"end": 5289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5181,
											"end": 5299,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4687,
											"end": 5306,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5436,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5425,
											"end": 5428,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5418,
											"end": 5437,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5461,
											"end": 5475,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5446,
											"end": 5475,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5446,
											"end": 5475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5481,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5487,
											"end": 5668,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 5487,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5627,
											"end": 5660,
											"name": "PUSH",
											"source": 17,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5611,
											"end": 5625,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5604,
											"end": 5661,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5487,
											"end": 5668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5487,
											"end": 5668,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5816,
											"end": 5819,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5896,
											"end": 5899,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5837,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 5837,
											"end": 5904,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5837,
											"end": 5904,
											"name": "tag",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 5837,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5830,
											"end": 5904,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5830,
											"end": 5904,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5913,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5913,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 5913,
											"end": 6006,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5913,
											"end": 6006,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 5913,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6029,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6015,
											"end": 6034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6015,
											"end": 6034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5674,
											"end": 6040,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6212,
											"end": 6216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6227,
											"end": 6253,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6227,
											"end": 6253,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6309,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6283,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6270,
											"end": 6287,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6263,
											"end": 6310,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 6327,
											"end": 6458,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6327,
											"end": 6458,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 6327,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6319,
											"end": 6458,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6319,
											"end": 6458,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6465,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6635,
											"end": 6661,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6635,
											"end": 6661,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6671,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6737,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6724,
											"end": 6741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6671,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 6671,
											"end": 6742,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6742,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 6671,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6752,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6796,
											"end": 6802,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6752,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 6752,
											"end": 6824,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6752,
											"end": 6824,
											"name": "tag",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 6752,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6834,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 6902,
											"end": 6904,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6891,
											"end": 6900,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6878,
											"end": 6884,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6834,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 6834,
											"end": 6906,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6834,
											"end": 6906,
											"name": "tag",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 6834,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6913,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6976,
											"end": 6981,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7001,
											"end": 7014,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6992,
											"end": 7014,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6992,
											"end": 7014,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7023,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 7050,
											"end": 7055,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7023,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 7023,
											"end": 7056,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 7056,
											"name": "tag",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 7023,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7062,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7138,
											"end": 7144,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7189,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7175,
											"end": 7184,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7162,
											"end": 7185,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7158,
											"end": 7190,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7155,
											"end": 7274,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7155,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 7155,
											"end": 7274,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7193,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 7193,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 7193,
											"end": 7272,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7272,
											"name": "tag",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 7193,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7155,
											"end": 7274,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 7155,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7313,
											"end": 7314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7374,
											"end": 7383,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7338,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 7338,
											"end": 7402,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7338,
											"end": 7402,
											"name": "tag",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 7338,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7328,
											"end": 7402,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7328,
											"end": 7402,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7284,
											"end": 7412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7068,
											"end": 7419,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7546,
											"end": 7550,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7586,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7561,
											"end": 7587,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7561,
											"end": 7587,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7597,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7663,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7597,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 7597,
											"end": 7668,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7597,
											"end": 7668,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 7597,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7678,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7722,
											"end": 7728,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7678,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 7678,
											"end": 7750,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7678,
											"end": 7750,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 7678,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7757,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7763,
											"end": 7996,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 7763,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7903,
											"end": 7937,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7897,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7887,
											"end": 7901,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7880,
											"end": 7938,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 17,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7967,
											"end": 7969,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7955,
											"end": 7970,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7948,
											"end": 7989,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7763,
											"end": 7996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7763,
											"end": 7996,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8144,
											"end": 8147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "tag",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8158,
											"end": 8232,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8158,
											"end": 8232,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 8330,
											"end": 8333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "tag",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8361,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8354,
											"end": 8357,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8350,
											"end": 8362,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8343,
											"end": 8362,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8343,
											"end": 8362,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8555,
											"end": 8581,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8555,
											"end": 8581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8621,
											"end": 8625,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8598,
											"end": 8615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8591,
											"end": 8638,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 8781,
											"end": 8785,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8647,
											"end": 8786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8647,
											"end": 8786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8862,
											"end": 8878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8862,
											"end": 8878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8884,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8925,
											"end": 8932,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 8958,
											"end": 8963,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 8976,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9010,
											"end": 9013,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8982,
											"end": 9042,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9104,
											"end": 9113,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 9188,
											"end": 9193,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "tag",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 9162,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 9153,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9137,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 9137,
											"end": 9196,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9137,
											"end": 9196,
											"name": "tag",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 9137,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9196,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9202,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9208,
											"end": 9351,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 9208,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 9338,
											"end": 9343,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "tag",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9289,
											"end": 9345,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9208,
											"end": 9351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9208,
											"end": 9351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9208,
											"end": 9351,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9456,
											"end": 9460,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9479,
											"end": 9497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9471,
											"end": 9497,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9471,
											"end": 9497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9566,
											"end": 9583,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9557,
											"end": 9563,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 9507,
											"end": 9584,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9584,
											"name": "tag",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 9507,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9357,
											"end": 9591,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9597,
											"end": 9764,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 9597,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9737,
											"end": 9756,
											"name": "PUSH",
											"source": 17,
											"value": "4365526F757465722F44697361626C6564000000000000000000000000000000"
										},
										{
											"begin": 9733,
											"end": 9734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9725,
											"end": 9731,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9721,
											"end": 9735,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9714,
											"end": 9757,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9597,
											"end": 9764,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9597,
											"end": 9764,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 9992,
											"end": 9995,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9933,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 9933,
											"end": 10000,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9933,
											"end": 10000,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 9933,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9926,
											"end": 10000,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9926,
											"end": 10000,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10009,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 10098,
											"end": 10101,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10009,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 10009,
											"end": 10102,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10009,
											"end": 10102,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 10009,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 10136,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10308,
											"end": 10312,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10331,
											"end": 10349,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10395,
											"end": 10404,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10389,
											"end": 10393,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10385,
											"end": 10405,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10366,
											"end": 10383,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10423,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10423,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 10423,
											"end": 10554,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10423,
											"end": 10554,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 10423,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10415,
											"end": 10554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10415,
											"end": 10554,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10142,
											"end": 10561,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10567,
											"end": 10747,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 10567,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10615,
											"end": 10692,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10612,
											"end": 10613,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10693,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10712,
											"end": 10716,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10702,
											"end": 10717,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10733,
											"end": 10734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10741,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10753,
											"end": 10933,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 10753,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10801,
											"end": 10878,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10798,
											"end": 10799,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10879,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10898,
											"end": 10902,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10888,
											"end": 10903,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10922,
											"end": 10926,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10919,
											"end": 10920,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10927,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10939,
											"end": 11119,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 10939,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10987,
											"end": 11064,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10984,
											"end": 10985,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 11065,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11084,
											"end": 11088,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 11081,
											"end": 11082,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11074,
											"end": 11089,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11108,
											"end": 11112,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11105,
											"end": 11106,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11113,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 11184,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11204,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11204,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11372,
											"end": 11373,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11304,
											"end": 11370,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11300,
											"end": 11374,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11294,
											"end": 11375,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11291,
											"end": 11398,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11291,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 11291,
											"end": 11398,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11291,
											"end": 11398,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 11291,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11419,
											"end": 11420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11415,
											"end": 11424,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11408,
											"end": 11424,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11408,
											"end": 11424,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11430,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11503,
											"end": 11509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11542,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11531,
											"end": 11543,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11436,
											"end": 11550,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11655,
											"end": 11666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11695,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11684,
											"end": 11687,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11729,
											"end": 11733,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11720,
											"end": 11734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11705,
											"end": 11734,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11705,
											"end": 11734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11556,
											"end": 11740,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11839,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11866,
											"end": 11870,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11857,
											"end": 11871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11746,
											"end": 11878,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11884,
											"end": 11992,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 11884,
											"end": 11992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 11979,
											"end": 11984,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11956,
											"end": 11959,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11949,
											"end": 11986,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11884,
											"end": 11992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11884,
											"end": 11992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11884,
											"end": 11992,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12067,
											"end": 12077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12088,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 12130,
											"end": 12133,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12122,
											"end": 12128,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12088,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 12088,
											"end": 12134,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12088,
											"end": 12134,
											"name": "tag",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 12088,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12166,
											"end": 12170,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12161,
											"end": 12164,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12157,
											"end": 12171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12171,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12177,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12253,
											"end": 12257,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12289,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12280,
											"end": 12283,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12268,
											"end": 12290,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12268,
											"end": 12290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12296,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12480,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 12528,
											"end": 12533,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12480,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 12480,
											"end": 12534,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12480,
											"end": 12534,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 12480,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12550,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 12629,
											"end": 12635,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12624,
											"end": 12627,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12550,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 12550,
											"end": 12636,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12550,
											"end": 12636,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 12550,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12660,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 12710,
											"end": 12715,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12660,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 12660,
											"end": 12716,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12660,
											"end": 12716,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 12660,
											"end": 12716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12739,
											"end": 12746,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "tag",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12780,
											"end": 12786,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12787,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12850,
											"end": 12863,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12883,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 12942,
											"end": 12945,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12927,
											"end": 12940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12883,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 12883,
											"end": 12946,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12883,
											"end": 12946,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 12883,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12969,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 13022,
											"end": 13028,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12969,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 12969,
											"end": 13029,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12969,
											"end": 13029,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 12969,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12959,
											"end": 13029,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12959,
											"end": 13029,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12815,
											"end": 13039,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12799,
											"end": 12800,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12795,
											"end": 12804,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12790,
											"end": 12804,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12790,
											"end": 12804,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 12755,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12759,
											"end": 12773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13055,
											"end": 13058,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13048,
											"end": 13058,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13048,
											"end": 13058,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12456,
											"end": 13064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12456,
											"end": 13064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12456,
											"end": 13064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12332,
											"end": 13064,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13325,
											"end": 13329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13363,
											"end": 13366,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13348,
											"end": 13367,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13340,
											"end": 13367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13340,
											"end": 13367,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13377,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13434,
											"end": 13443,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13430,
											"end": 13447,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13421,
											"end": 13427,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 13377,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 13377,
											"end": 13448,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13377,
											"end": 13448,
											"name": "tag",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 13377,
											"end": 13448,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13458,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13515,
											"end": 13524,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13511,
											"end": 13529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13502,
											"end": 13508,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 13458,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 13458,
											"end": 13530,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13458,
											"end": 13530,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 13458,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13577,
											"end": 13586,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13571,
											"end": 13575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13562,
											"end": 13564,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13540,
											"end": 13588,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13605,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13699,
											"end": 13705,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13605,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 13605,
											"end": 13713,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13605,
											"end": 13713,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 13605,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13597,
											"end": 13713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13723,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 13791,
											"end": 13793,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13780,
											"end": 13789,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13776,
											"end": 13794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13767,
											"end": 13773,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13723,
											"end": 13795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 13723,
											"end": 13795,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13723,
											"end": 13795,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 13723,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13805,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 13873,
											"end": 13876,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 13862,
											"end": 13871,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13858,
											"end": 13877,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13849,
											"end": 13855,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13805,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 13805,
											"end": 13878,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13805,
											"end": 13878,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 13805,
											"end": 13878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13070,
											"end": 13885,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13891,
											"end": 14008,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 13891,
											"end": 14008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14000,
											"end": 14001,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 13998,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13990,
											"end": 14002,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14055,
											"end": 14061,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14106,
											"end": 14108,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 14102,
											"end": 14109,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 14097,
											"end": 14099,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 14090,
											"end": 14095,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14086,
											"end": 14100,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14082,
											"end": 14110,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14072,
											"end": 14110,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14072,
											"end": 14110,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14014,
											"end": 14116,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14122,
											"end": 14403,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 14122,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14205,
											"end": 14232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 14227,
											"end": 14231,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14205,
											"end": 14232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 14205,
											"end": 14232,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14205,
											"end": 14232,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 14205,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14193,
											"end": 14233,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14335,
											"end": 14341,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14323,
											"end": 14333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14320,
											"end": 14342,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14284,
											"end": 14318,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14281,
											"end": 14343,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 14278,
											"end": 14366,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14278,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 14278,
											"end": 14366,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "tag",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 14346,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14278,
											"end": 14366,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 14278,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14386,
											"end": 14396,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14382,
											"end": 14384,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14397,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14165,
											"end": 14403,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14122,
											"end": 14403,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14122,
											"end": 14403,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14122,
											"end": 14403,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14443,
											"end": 14449,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14470,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 14470,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 14470,
											"end": 14490,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14470,
											"end": 14490,
											"name": "tag",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 14470,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14460,
											"end": 14490,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14460,
											"end": 14490,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 14527,
											"end": 14531,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14519,
											"end": 14525,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 14499,
											"end": 14532,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14499,
											"end": 14532,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 14499,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14409,
											"end": 14538,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14703,
											"end": 14709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14700,
											"end": 14730,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14697,
											"end": 14753,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14697,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 14697,
											"end": 14753,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14697,
											"end": 14753,
											"name": "tag",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 14697,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14783,
											"end": 14787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14771,
											"end": 14788,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 14763,
											"end": 14788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14763,
											"end": 14788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14843,
											"end": 14847,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14848,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14825,
											"end": 14848,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14825,
											"end": 14848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14544,
											"end": 14855,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14861,
											"end": 14978,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 14861,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14970,
											"end": 14971,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 14972,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15108,
											"end": 15113,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15133,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 15206,
											"end": 15212,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "tag",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15133,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 15133,
											"end": 15214,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15133,
											"end": 15214,
											"name": "tag",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 15133,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15124,
											"end": 15214,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15124,
											"end": 15214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15234,
											"end": 15239,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15263,
											"end": 15269,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15256,
											"end": 15261,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15297,
											"end": 15301,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15290,
											"end": 15295,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15286,
											"end": 15302,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15279,
											"end": 15302,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15279,
											"end": 15302,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15350,
											"end": 15354,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15342,
											"end": 15348,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15338,
											"end": 15355,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 15330,
											"end": 15336,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15326,
											"end": 15356,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15379,
											"end": 15382,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15371,
											"end": 15377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15368,
											"end": 15383,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15365,
											"end": 15487,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15365,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 15365,
											"end": 15487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15398,
											"end": 15477,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 15398,
											"end": 15477,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 15398,
											"end": 15477,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15398,
											"end": 15477,
											"name": "tag",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 15398,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15365,
											"end": 15487,
											"name": "tag",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 15365,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15513,
											"end": 15519,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "tag",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15530,
											"end": 15536,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15522,
											"end": 15537,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15605,
											"end": 15608,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15634,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 15678,
											"end": 15681,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 15666,
											"end": 15676,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15634,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 15634,
											"end": 15682,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15634,
											"end": 15682,
											"name": "tag",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 15634,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15629,
											"end": 15632,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15622,
											"end": 15683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15712,
											"end": 15716,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15707,
											"end": 15710,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15703,
											"end": 15717,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15572,
											"end": 15727,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15556,
											"end": 15560,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15551,
											"end": 15554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15547,
											"end": 15561,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15540,
											"end": 15561,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15540,
											"end": 15561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "tag",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 15496,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15500,
											"end": 15521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15733,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15838,
											"end": 15843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15890,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15880,
											"end": 15884,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 15872,
											"end": 15878,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15868,
											"end": 15885,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15864,
											"end": 15891,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15854,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 15854,
											"end": 15976,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15895,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 15895,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 15895,
											"end": 15974,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15895,
											"end": 15974,
											"name": "tag",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 15895,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15854,
											"end": 15976,
											"name": "tag",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 15854,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16005,
											"end": 16011,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15999,
											"end": 16012,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16030,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "784"
										},
										{
											"begin": 16131,
											"end": 16134,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16123,
											"end": 16129,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16116,
											"end": 16120,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16108,
											"end": 16114,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16104,
											"end": 16121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16030,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 16030,
											"end": 16135,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16030,
											"end": 16135,
											"name": "tag",
											"source": 17,
											"value": "784"
										},
										{
											"begin": 16030,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16021,
											"end": 16135,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16021,
											"end": 16135,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15844,
											"end": 16141,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15756,
											"end": 16141,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16242,
											"end": 16248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16291,
											"end": 16293,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16279,
											"end": 16288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16270,
											"end": 16277,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16266,
											"end": 16289,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16262,
											"end": 16294,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 16259,
											"end": 16378,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16259,
											"end": 16378,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 16259,
											"end": 16378,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16297,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 16297,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 16297,
											"end": 16376,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16297,
											"end": 16376,
											"name": "tag",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 16297,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16259,
											"end": 16378,
											"name": "tag",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 16259,
											"end": 16378,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16438,
											"end": 16439,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16436,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16423,
											"end": 16440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16417,
											"end": 16441,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16457,
											"end": 16487,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 16454,
											"end": 16571,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16454,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 16454,
											"end": 16571,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16490,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "789"
										},
										{
											"begin": 16490,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 16490,
											"end": 16569,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16490,
											"end": 16569,
											"name": "tag",
											"source": 17,
											"value": "789"
										},
										{
											"begin": 16490,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16454,
											"end": 16571,
											"name": "tag",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 16454,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16595,
											"end": 16684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 16676,
											"end": 16683,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 16665,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16652,
											"end": 16674,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16595,
											"end": 16684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 16595,
											"end": 16684,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16684,
											"name": "tag",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 16595,
											"end": 16684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16585,
											"end": 16684,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16585,
											"end": 16684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16388,
											"end": 16694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16147,
											"end": 16701,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16707,
											"end": 16878,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 16707,
											"end": 16878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16847,
											"end": 16870,
											"name": "PUSH",
											"source": 17,
											"value": "50726F76696465723A206E6F7420616C6C6F7765640000000000000000000000"
										},
										{
											"begin": 16843,
											"end": 16844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16835,
											"end": 16841,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16831,
											"end": 16845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16824,
											"end": 16871,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16707,
											"end": 16878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16707,
											"end": 16878,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17026,
											"end": 17029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17047,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "793"
										},
										{
											"begin": 17111,
											"end": 17113,
											"name": "PUSH",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 17106,
											"end": 17109,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17047,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 17047,
											"end": 17114,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17047,
											"end": 17114,
											"name": "tag",
											"source": 17,
											"value": "793"
										},
										{
											"begin": 17047,
											"end": 17114,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17040,
											"end": 17114,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17040,
											"end": 17114,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17123,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 17212,
											"end": 17215,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17123,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 17123,
											"end": 17216,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17123,
											"end": 17216,
											"name": "tag",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 17123,
											"end": 17216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17241,
											"end": 17243,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17236,
											"end": 17239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17232,
											"end": 17244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17225,
											"end": 17244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17225,
											"end": 17244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16884,
											"end": 17250,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17422,
											"end": 17426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17460,
											"end": 17462,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17449,
											"end": 17458,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17445,
											"end": 17463,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17437,
											"end": 17463,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17437,
											"end": 17463,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17509,
											"end": 17518,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17503,
											"end": 17507,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17495,
											"end": 17496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17493,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17480,
											"end": 17497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17473,
											"end": 17520,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17537,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 17663,
											"end": 17667,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17537,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 17537,
											"end": 17668,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17537,
											"end": 17668,
											"name": "tag",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 17537,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17529,
											"end": 17668,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17529,
											"end": 17668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17256,
											"end": 17675,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17802,
											"end": 17806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17842,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17829,
											"end": 17838,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17825,
											"end": 17843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17817,
											"end": 17843,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17817,
											"end": 17843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17853,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 17921,
											"end": 17922,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17910,
											"end": 17919,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17906,
											"end": 17923,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17897,
											"end": 17903,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17853,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 17853,
											"end": 17924,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17853,
											"end": 17924,
											"name": "tag",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 17853,
											"end": 17924,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17934,
											"end": 18006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "799"
										},
										{
											"begin": 18002,
											"end": 18004,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17991,
											"end": 18000,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17987,
											"end": 18005,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17978,
											"end": 17984,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17934,
											"end": 18006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 17934,
											"end": 18006,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17934,
											"end": 18006,
											"name": "tag",
											"source": 17,
											"value": "799"
										},
										{
											"begin": 17934,
											"end": 18006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17681,
											"end": 18013,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18064,
											"end": 18071,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18093,
											"end": 18098,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18082,
											"end": 18098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18082,
											"end": 18098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18019,
											"end": 18104,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18168,
											"end": 18177,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18201,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "802"
										},
										{
											"begin": 18219,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 18228,
											"end": 18260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 18254,
											"end": 18259,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18228,
											"end": 18260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 18228,
											"end": 18260,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18228,
											"end": 18260,
											"name": "tag",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 18228,
											"end": 18260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18219,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 18219,
											"end": 18261,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18219,
											"end": 18261,
											"name": "tag",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 18219,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18201,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 18201,
											"end": 18262,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18201,
											"end": 18262,
											"name": "tag",
											"source": 17,
											"value": "802"
										},
										{
											"begin": 18201,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18188,
											"end": 18262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18188,
											"end": 18262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18110,
											"end": 18268,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18274,
											"end": 18421,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 18274,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 18408,
											"end": 18413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "tag",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18364,
											"end": 18367,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18357,
											"end": 18415,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18274,
											"end": 18421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18274,
											"end": 18421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18274,
											"end": 18421,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18556,
											"end": 18560,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18594,
											"end": 18596,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 18583,
											"end": 18592,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18579,
											"end": 18597,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18571,
											"end": 18597,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18571,
											"end": 18597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18607,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 18675,
											"end": 18676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18664,
											"end": 18673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18660,
											"end": 18677,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18651,
											"end": 18657,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18607,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 18607,
											"end": 18678,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18607,
											"end": 18678,
											"name": "tag",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 18607,
											"end": 18678,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18688,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 18764,
											"end": 18766,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18753,
											"end": 18762,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18749,
											"end": 18767,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18740,
											"end": 18746,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18688,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 18688,
											"end": 18768,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18688,
											"end": 18768,
											"name": "tag",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 18688,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18427,
											"end": 18775,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18781,
											"end": 18951,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 18781,
											"end": 18951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18921,
											"end": 18943,
											"name": "PUSH",
											"source": 17,
											"value": "686173206E6F7420676F7420612070726F666974000000000000000000000000"
										},
										{
											"begin": 18917,
											"end": 18918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18909,
											"end": 18915,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18905,
											"end": 18919,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18898,
											"end": 18944,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 18951,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 18951,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19099,
											"end": 19102,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "812"
										},
										{
											"begin": 19184,
											"end": 19186,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 19179,
											"end": 19182,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19120,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 19120,
											"end": 19187,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19120,
											"end": 19187,
											"name": "tag",
											"source": 17,
											"value": "812"
										},
										{
											"begin": 19120,
											"end": 19187,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19113,
											"end": 19187,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19113,
											"end": 19187,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19196,
											"end": 19289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 19285,
											"end": 19288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19196,
											"end": 19289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 19196,
											"end": 19289,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19196,
											"end": 19289,
											"name": "tag",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 19196,
											"end": 19289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19314,
											"end": 19316,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19309,
											"end": 19312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19305,
											"end": 19317,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19298,
											"end": 19317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19298,
											"end": 19317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18957,
											"end": 19323,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19495,
											"end": 19499,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19533,
											"end": 19535,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19522,
											"end": 19531,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19518,
											"end": 19536,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19510,
											"end": 19536,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19510,
											"end": 19536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19582,
											"end": 19591,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19576,
											"end": 19580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19572,
											"end": 19592,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 19568,
											"end": 19569,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19557,
											"end": 19566,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19553,
											"end": 19570,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19546,
											"end": 19593,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19610,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "815"
										},
										{
											"begin": 19736,
											"end": 19740,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19610,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 19610,
											"end": 19741,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19610,
											"end": 19741,
											"name": "tag",
											"source": 17,
											"value": "815"
										},
										{
											"begin": 19610,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19602,
											"end": 19741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19602,
											"end": 19741,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19329,
											"end": 19748,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19754,
											"end": 19923,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 19754,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19894,
											"end": 19915,
											"name": "PUSH",
											"source": 17,
											"value": "696E73756666696369656E7420616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 19890,
											"end": 19891,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19882,
											"end": 19888,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19878,
											"end": 19892,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19871,
											"end": 19916,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19754,
											"end": 19923,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19754,
											"end": 19923,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20071,
											"end": 20074,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20092,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 20156,
											"end": 20158,
											"name": "PUSH",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 20151,
											"end": 20154,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20092,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 20092,
											"end": 20159,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20092,
											"end": 20159,
											"name": "tag",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 20092,
											"end": 20159,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20085,
											"end": 20159,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20085,
											"end": 20159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20168,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "819"
										},
										{
											"begin": 20257,
											"end": 20260,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20168,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 20168,
											"end": 20261,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20168,
											"end": 20261,
											"name": "tag",
											"source": 17,
											"value": "819"
										},
										{
											"begin": 20168,
											"end": 20261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20286,
											"end": 20288,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20281,
											"end": 20284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20277,
											"end": 20289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20270,
											"end": 20289,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20270,
											"end": 20289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19929,
											"end": 20295,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20467,
											"end": 20471,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20505,
											"end": 20507,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20494,
											"end": 20503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20482,
											"end": 20508,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20482,
											"end": 20508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20554,
											"end": 20563,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20548,
											"end": 20552,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20544,
											"end": 20564,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20540,
											"end": 20541,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20529,
											"end": 20538,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20525,
											"end": 20542,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20518,
											"end": 20565,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20582,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "821"
										},
										{
											"begin": 20708,
											"end": 20712,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20582,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 20582,
											"end": 20713,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20582,
											"end": 20713,
											"name": "tag",
											"source": 17,
											"value": "821"
										},
										{
											"begin": 20582,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20574,
											"end": 20713,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20574,
											"end": 20713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20301,
											"end": 20720,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20766,
											"end": 20770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "823"
										},
										{
											"begin": 20804,
											"end": 20805,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "tag",
											"source": 17,
											"value": "823"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "824"
										},
										{
											"begin": 20838,
											"end": 20839,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "tag",
											"source": 17,
											"value": "824"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20859,
											"end": 20860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20856,
											"end": 20857,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20853,
											"end": 20861,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "826"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "tag",
											"source": 17,
											"value": "826"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "tag",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20909,
											"end": 20910,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20906,
											"end": 20907,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20902,
											"end": 20911,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20894,
											"end": 20911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20894,
											"end": 20911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20923,
											"end": 21085,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 20923,
											"end": 21085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21063,
											"end": 21077,
											"name": "PUSH",
											"source": 17,
											"value": "4445582044495341424C45440000000000000000000000000000000000000000"
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21051,
											"end": 21057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21047,
											"end": 21061,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21040,
											"end": 21078,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20923,
											"end": 21085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20923,
											"end": 21085,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21233,
											"end": 21236,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21254,
											"end": 21321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "829"
										},
										{
											"begin": 21318,
											"end": 21320,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 21313,
											"end": 21316,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21254,
											"end": 21321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 21254,
											"end": 21321,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21254,
											"end": 21321,
											"name": "tag",
											"source": 17,
											"value": "829"
										},
										{
											"begin": 21254,
											"end": 21321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21247,
											"end": 21321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21247,
											"end": 21321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21330,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "830"
										},
										{
											"begin": 21419,
											"end": 21422,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21330,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 21330,
											"end": 21423,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21330,
											"end": 21423,
											"name": "tag",
											"source": 17,
											"value": "830"
										},
										{
											"begin": 21330,
											"end": 21423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21448,
											"end": 21450,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21443,
											"end": 21446,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21439,
											"end": 21451,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21432,
											"end": 21451,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21432,
											"end": 21451,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21091,
											"end": 21457,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21629,
											"end": 21633,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21667,
											"end": 21669,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21656,
											"end": 21665,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21652,
											"end": 21670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21644,
											"end": 21670,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21644,
											"end": 21670,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21716,
											"end": 21725,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21710,
											"end": 21714,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21706,
											"end": 21726,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21702,
											"end": 21703,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21691,
											"end": 21700,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21687,
											"end": 21704,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21680,
											"end": 21727,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21744,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "832"
										},
										{
											"begin": 21870,
											"end": 21874,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21744,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 21744,
											"end": 21875,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21744,
											"end": 21875,
											"name": "tag",
											"source": 17,
											"value": "832"
										},
										{
											"begin": 21744,
											"end": 21875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21736,
											"end": 21875,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21736,
											"end": 21875,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21882,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21888,
											"end": 22123,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 21888,
											"end": 22123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22028,
											"end": 22062,
											"name": "PUSH",
											"source": 17,
											"value": "696E73756666696369656E7420616D6F756E74206F66204365726F73526F7574"
										},
										{
											"begin": 22024,
											"end": 22025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22016,
											"end": 22022,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22012,
											"end": 22026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22005,
											"end": 22063,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22097,
											"end": 22115,
											"name": "PUSH",
											"source": 17,
											"value": "657220696E206365727420746F6B656E00000000000000000000000000000000"
										},
										{
											"begin": 22092,
											"end": 22094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22084,
											"end": 22090,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22080,
											"end": 22095,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22073,
											"end": 22116,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21888,
											"end": 22123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21888,
											"end": 22123,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22271,
											"end": 22274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "835"
										},
										{
											"begin": 22356,
											"end": 22358,
											"name": "PUSH",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 22351,
											"end": 22354,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "tag",
											"source": 17,
											"value": "835"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22285,
											"end": 22359,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22285,
											"end": 22359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "836"
										},
										{
											"begin": 22457,
											"end": 22460,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "tag",
											"source": 17,
											"value": "836"
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22486,
											"end": 22488,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 22481,
											"end": 22484,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22477,
											"end": 22489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22667,
											"end": 22671,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22705,
											"end": 22707,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22694,
											"end": 22703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22690,
											"end": 22708,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22682,
											"end": 22708,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22682,
											"end": 22708,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22754,
											"end": 22763,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22748,
											"end": 22752,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22744,
											"end": 22764,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22740,
											"end": 22741,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22729,
											"end": 22738,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22725,
											"end": 22742,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22718,
											"end": 22765,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "838"
										},
										{
											"begin": 22908,
											"end": 22912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "tag",
											"source": 17,
											"value": "838"
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22774,
											"end": 22913,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22774,
											"end": 22913,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23047,
											"end": 23051,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23085,
											"end": 23087,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 23074,
											"end": 23083,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23070,
											"end": 23088,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23098,
											"end": 23169,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 23166,
											"end": 23167,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23155,
											"end": 23164,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23151,
											"end": 23168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23142,
											"end": 23148,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23098,
											"end": 23169,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 23098,
											"end": 23169,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23098,
											"end": 23169,
											"name": "tag",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 23098,
											"end": 23169,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23179,
											"end": 23251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "841"
										},
										{
											"begin": 23247,
											"end": 23249,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23236,
											"end": 23245,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23232,
											"end": 23250,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23223,
											"end": 23229,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23179,
											"end": 23251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 23179,
											"end": 23251,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23179,
											"end": 23251,
											"name": "tag",
											"source": 17,
											"value": "841"
										},
										{
											"begin": 23179,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22926,
											"end": 23258,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23264,
											"end": 23489,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 23264,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23404,
											"end": 23438,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23400,
											"end": 23401,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23392,
											"end": 23398,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23388,
											"end": 23402,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23381,
											"end": 23439,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23473,
											"end": 23481,
											"name": "PUSH",
											"source": 17,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23468,
											"end": 23470,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23460,
											"end": 23466,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23456,
											"end": 23471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23449,
											"end": 23482,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23264,
											"end": 23489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23264,
											"end": 23489,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23637,
											"end": 23640,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23658,
											"end": 23725,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 23722,
											"end": 23724,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 23717,
											"end": 23720,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23658,
											"end": 23725,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 23658,
											"end": 23725,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23658,
											"end": 23725,
											"name": "tag",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 23658,
											"end": 23725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23651,
											"end": 23725,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23651,
											"end": 23725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23734,
											"end": 23827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "845"
										},
										{
											"begin": 23823,
											"end": 23826,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23734,
											"end": 23827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 23734,
											"end": 23827,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23734,
											"end": 23827,
											"name": "tag",
											"source": 17,
											"value": "845"
										},
										{
											"begin": 23734,
											"end": 23827,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23852,
											"end": 23854,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 23847,
											"end": 23850,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23843,
											"end": 23855,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23836,
											"end": 23855,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23836,
											"end": 23855,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23495,
											"end": 23861,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24033,
											"end": 24037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24071,
											"end": 24073,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24060,
											"end": 24069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24056,
											"end": 24074,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24120,
											"end": 24129,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24114,
											"end": 24118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24110,
											"end": 24130,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24106,
											"end": 24107,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24095,
											"end": 24104,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24091,
											"end": 24108,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24084,
											"end": 24131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24148,
											"end": 24279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "847"
										},
										{
											"begin": 24274,
											"end": 24278,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24148,
											"end": 24279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 24148,
											"end": 24279,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24148,
											"end": 24279,
											"name": "tag",
											"source": 17,
											"value": "847"
										},
										{
											"begin": 24148,
											"end": 24279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24140,
											"end": 24279,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24140,
											"end": 24279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23867,
											"end": 24286,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24292,
											"end": 24524,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 24292,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24432,
											"end": 24466,
											"name": "PUSH",
											"source": 17,
											"value": "76616C7565206D7573742062652067726561746572207468616E206D696E2075"
										},
										{
											"begin": 24428,
											"end": 24429,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24420,
											"end": 24426,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24416,
											"end": 24430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24409,
											"end": 24467,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24501,
											"end": 24516,
											"name": "PUSH",
											"source": 17,
											"value": "6E7374616B6520616D6F756E7400000000000000000000000000000000000000"
										},
										{
											"begin": 24496,
											"end": 24498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24488,
											"end": 24494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24484,
											"end": 24499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24477,
											"end": 24517,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24292,
											"end": 24524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24292,
											"end": 24524,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24672,
											"end": 24675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24693,
											"end": 24760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 24757,
											"end": 24759,
											"name": "PUSH",
											"source": 17,
											"value": "2D"
										},
										{
											"begin": 24752,
											"end": 24755,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24693,
											"end": 24760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 24693,
											"end": 24760,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24693,
											"end": 24760,
											"name": "tag",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 24693,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24686,
											"end": 24760,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24686,
											"end": 24760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24769,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "851"
										},
										{
											"begin": 24858,
											"end": 24861,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24769,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 24769,
											"end": 24862,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24769,
											"end": 24862,
											"name": "tag",
											"source": 17,
											"value": "851"
										},
										{
											"begin": 24769,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24887,
											"end": 24889,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 24882,
											"end": 24885,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24878,
											"end": 24890,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24871,
											"end": 24890,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24871,
											"end": 24890,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24530,
											"end": 24896,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25068,
											"end": 25072,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25106,
											"end": 25108,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25095,
											"end": 25104,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25091,
											"end": 25109,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25083,
											"end": 25109,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25083,
											"end": 25109,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25155,
											"end": 25164,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25149,
											"end": 25153,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25145,
											"end": 25165,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 25141,
											"end": 25142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25130,
											"end": 25139,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25126,
											"end": 25143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25119,
											"end": 25166,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25183,
											"end": 25314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "853"
										},
										{
											"begin": 25309,
											"end": 25313,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25183,
											"end": 25314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 25183,
											"end": 25314,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25183,
											"end": 25314,
											"name": "tag",
											"source": 17,
											"value": "853"
										},
										{
											"begin": 25183,
											"end": 25314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25175,
											"end": 25314,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25175,
											"end": 25314,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24902,
											"end": 25321,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25327,
											"end": 25557,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 25327,
											"end": 25557,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25467,
											"end": 25501,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 25463,
											"end": 25464,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25455,
											"end": 25461,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25451,
											"end": 25465,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25444,
											"end": 25502,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25536,
											"end": 25549,
											"name": "PUSH",
											"source": 17,
											"value": "6E697469616C697A696E67000000000000000000000000000000000000000000"
										},
										{
											"begin": 25531,
											"end": 25533,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25523,
											"end": 25529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25519,
											"end": 25534,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25512,
											"end": 25550,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25327,
											"end": 25557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25327,
											"end": 25557,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25705,
											"end": 25708,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25726,
											"end": 25793,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "856"
										},
										{
											"begin": 25790,
											"end": 25792,
											"name": "PUSH",
											"source": 17,
											"value": "2B"
										},
										{
											"begin": 25785,
											"end": 25788,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25726,
											"end": 25793,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 25726,
											"end": 25793,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25726,
											"end": 25793,
											"name": "tag",
											"source": 17,
											"value": "856"
										},
										{
											"begin": 25726,
											"end": 25793,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25719,
											"end": 25793,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25719,
											"end": 25793,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25802,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 25891,
											"end": 25894,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25802,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 25802,
											"end": 25895,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25802,
											"end": 25895,
											"name": "tag",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 25802,
											"end": 25895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25920,
											"end": 25922,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 25915,
											"end": 25918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25911,
											"end": 25923,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25904,
											"end": 25923,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25904,
											"end": 25923,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25929,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26101,
											"end": 26105,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26139,
											"end": 26141,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26128,
											"end": 26137,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26124,
											"end": 26142,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26116,
											"end": 26142,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26116,
											"end": 26142,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26188,
											"end": 26197,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26182,
											"end": 26186,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26178,
											"end": 26198,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 26174,
											"end": 26175,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26163,
											"end": 26172,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26159,
											"end": 26176,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26152,
											"end": 26199,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "859"
										},
										{
											"begin": 26342,
											"end": 26346,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 26216,
											"end": 26347,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26216,
											"end": 26347,
											"name": "tag",
											"source": 17,
											"value": "859"
										},
										{
											"begin": 26216,
											"end": 26347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26208,
											"end": 26347,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26208,
											"end": 26347,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25935,
											"end": 26354,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26360,
											"end": 26601,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 26360,
											"end": 26601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26500,
											"end": 26534,
											"name": "PUSH",
											"source": 17,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 26496,
											"end": 26497,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26488,
											"end": 26494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26484,
											"end": 26498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26477,
											"end": 26535,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26569,
											"end": 26593,
											"name": "PUSH",
											"source": 17,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 26564,
											"end": 26566,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26556,
											"end": 26562,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26552,
											"end": 26567,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26545,
											"end": 26594,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26601,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26360,
											"end": 26601,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26749,
											"end": 26752,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26770,
											"end": 26837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "862"
										},
										{
											"begin": 26834,
											"end": 26836,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 26829,
											"end": 26832,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26770,
											"end": 26837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 26770,
											"end": 26837,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26770,
											"end": 26837,
											"name": "tag",
											"source": 17,
											"value": "862"
										},
										{
											"begin": 26770,
											"end": 26837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26763,
											"end": 26837,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26763,
											"end": 26837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26846,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "863"
										},
										{
											"begin": 26935,
											"end": 26938,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26846,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 26846,
											"end": 26939,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26846,
											"end": 26939,
											"name": "tag",
											"source": 17,
											"value": "863"
										},
										{
											"begin": 26846,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26964,
											"end": 26966,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 26959,
											"end": 26962,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26955,
											"end": 26967,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26948,
											"end": 26967,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26948,
											"end": 26967,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26607,
											"end": 26973,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27145,
											"end": 27149,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27183,
											"end": 27185,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27181,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27168,
											"end": 27186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27160,
											"end": 27186,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27160,
											"end": 27186,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27232,
											"end": 27241,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27226,
											"end": 27230,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27222,
											"end": 27242,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 27218,
											"end": 27219,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27207,
											"end": 27216,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27203,
											"end": 27220,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27196,
											"end": 27243,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27260,
											"end": 27391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 27386,
											"end": 27390,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27260,
											"end": 27391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 27260,
											"end": 27391,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27260,
											"end": 27391,
											"name": "tag",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 27260,
											"end": 27391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27252,
											"end": 27391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27252,
											"end": 27391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26979,
											"end": 27398,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 27404,
											"end": 27586,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 27404,
											"end": 27586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27544,
											"end": 27578,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27540,
											"end": 27541,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27532,
											"end": 27538,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27528,
											"end": 27542,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27521,
											"end": 27579,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27404,
											"end": 27586,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27404,
											"end": 27586,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27734,
											"end": 27737,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27755,
											"end": 27822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "868"
										},
										{
											"begin": 27819,
											"end": 27821,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27814,
											"end": 27817,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27755,
											"end": 27822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 27755,
											"end": 27822,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27755,
											"end": 27822,
											"name": "tag",
											"source": 17,
											"value": "868"
										},
										{
											"begin": 27755,
											"end": 27822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27748,
											"end": 27822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27748,
											"end": 27822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27831,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 27920,
											"end": 27923,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27831,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 27831,
											"end": 27924,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27831,
											"end": 27924,
											"name": "tag",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 27831,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27949,
											"end": 27951,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27944,
											"end": 27947,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27940,
											"end": 27952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27933,
											"end": 27952,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27933,
											"end": 27952,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27592,
											"end": 27958,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28130,
											"end": 28134,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28168,
											"end": 28170,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28157,
											"end": 28166,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28153,
											"end": 28171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28145,
											"end": 28171,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28145,
											"end": 28171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28217,
											"end": 28226,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28211,
											"end": 28215,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28207,
											"end": 28227,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 28203,
											"end": 28204,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28192,
											"end": 28201,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28188,
											"end": 28205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28181,
											"end": 28228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 28245,
											"end": 28376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "871"
										},
										{
											"begin": 28371,
											"end": 28375,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28245,
											"end": 28376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 28245,
											"end": 28376,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28376,
											"name": "tag",
											"source": 17,
											"value": "871"
										},
										{
											"begin": 28245,
											"end": 28376,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28237,
											"end": 28376,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28237,
											"end": 28376,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27964,
											"end": 28383,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 28389,
											"end": 28505,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 28389,
											"end": 28505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28459,
											"end": 28480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 28474,
											"end": 28479,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28459,
											"end": 28480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 28459,
											"end": 28480,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 28459,
											"end": 28480,
											"name": "tag",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 28459,
											"end": 28480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28452,
											"end": 28457,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28449,
											"end": 28481,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 28439,
											"end": 28499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 28439,
											"end": 28499,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 28495,
											"end": 28496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28492,
											"end": 28493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 28485,
											"end": 28497,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 28439,
											"end": 28499,
											"name": "tag",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 28439,
											"end": 28499,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28389,
											"end": 28505,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28389,
											"end": 28505,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28565,
											"end": 28570,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28596,
											"end": 28602,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28590,
											"end": 28603,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 28581,
											"end": 28603,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28581,
											"end": 28603,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28612,
											"end": 28642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "876"
										},
										{
											"begin": 28636,
											"end": 28641,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28612,
											"end": 28642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 28612,
											"end": 28642,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 28612,
											"end": 28642,
											"name": "tag",
											"source": 17,
											"value": "876"
										},
										{
											"begin": 28612,
											"end": 28642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28511,
											"end": 28648,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28721,
											"end": 28727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28770,
											"end": 28772,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28758,
											"end": 28767,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28749,
											"end": 28756,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28745,
											"end": 28768,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 28741,
											"end": 28773,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 28738,
											"end": 28857,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 28738,
											"end": 28857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 28738,
											"end": 28857,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 28776,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 28776,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 28776,
											"end": 28855,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 28776,
											"end": 28855,
											"name": "tag",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 28776,
											"end": 28855,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28738,
											"end": 28857,
											"name": "tag",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 28738,
											"end": 28857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28896,
											"end": 28897,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28921,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "880"
										},
										{
											"begin": 28974,
											"end": 28981,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28965,
											"end": 28971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28954,
											"end": 28963,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 28950,
											"end": 28972,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28921,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 28921,
											"end": 28982,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 28921,
											"end": 28982,
											"name": "tag",
											"source": 17,
											"value": "880"
										},
										{
											"begin": 28921,
											"end": 28982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28911,
											"end": 28982,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28911,
											"end": 28982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28867,
											"end": 28992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28654,
											"end": 28999,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 29005,
											"end": 29234,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 29005,
											"end": 29234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29145,
											"end": 29179,
											"name": "PUSH",
											"source": 17,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 29141,
											"end": 29142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29133,
											"end": 29139,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29129,
											"end": 29143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29122,
											"end": 29180,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29214,
											"end": 29226,
											"name": "PUSH",
											"source": 17,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 29209,
											"end": 29211,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 29201,
											"end": 29207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29197,
											"end": 29212,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29190,
											"end": 29227,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29005,
											"end": 29234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29005,
											"end": 29234,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29382,
											"end": 29385,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29403,
											"end": 29470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "883"
										},
										{
											"begin": 29467,
											"end": 29469,
											"name": "PUSH",
											"source": 17,
											"value": "2A"
										},
										{
											"begin": 29462,
											"end": 29465,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 29403,
											"end": 29470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 29403,
											"end": 29470,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 29403,
											"end": 29470,
											"name": "tag",
											"source": 17,
											"value": "883"
										},
										{
											"begin": 29403,
											"end": 29470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29396,
											"end": 29470,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29396,
											"end": 29470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29479,
											"end": 29572,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "884"
										},
										{
											"begin": 29568,
											"end": 29571,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29479,
											"end": 29572,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 29479,
											"end": 29572,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 29479,
											"end": 29572,
											"name": "tag",
											"source": 17,
											"value": "884"
										},
										{
											"begin": 29479,
											"end": 29572,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29597,
											"end": 29599,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 29592,
											"end": 29595,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29588,
											"end": 29600,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29581,
											"end": 29600,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29581,
											"end": 29600,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29240,
											"end": 29606,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29816,
											"end": 29818,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 29805,
											"end": 29814,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29801,
											"end": 29819,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29793,
											"end": 29819,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29793,
											"end": 29819,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29865,
											"end": 29874,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29859,
											"end": 29863,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29855,
											"end": 29875,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 29851,
											"end": 29852,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 29840,
											"end": 29849,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 29836,
											"end": 29853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29829,
											"end": 29876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29893,
											"end": 30024,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "886"
										},
										{
											"begin": 30019,
											"end": 30023,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 29893,
											"end": 30024,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 29893,
											"end": 30024,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 29893,
											"end": 30024,
											"name": "tag",
											"source": 17,
											"value": "886"
										},
										{
											"begin": 29893,
											"end": 30024,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 29885,
											"end": 30024,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29885,
											"end": 30024,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 29612,
											"end": 30031,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 30037,
											"end": 30262,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 30037,
											"end": 30262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30177,
											"end": 30211,
											"name": "PUSH",
											"source": 17,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30173,
											"end": 30174,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30165,
											"end": 30171,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30161,
											"end": 30175,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30154,
											"end": 30212,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 30246,
											"end": 30254,
											"name": "PUSH",
											"source": 17,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30241,
											"end": 30243,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 30233,
											"end": 30239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30229,
											"end": 30244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30222,
											"end": 30255,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 30037,
											"end": 30262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30037,
											"end": 30262,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30410,
											"end": 30413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30431,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 30495,
											"end": 30497,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 30490,
											"end": 30493,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 30431,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 30431,
											"end": 30498,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 30431,
											"end": 30498,
											"name": "tag",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 30431,
											"end": 30498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30424,
											"end": 30498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30424,
											"end": 30498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30507,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "890"
										},
										{
											"begin": 30596,
											"end": 30599,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30507,
											"end": 30600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 30507,
											"end": 30600,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 30507,
											"end": 30600,
											"name": "tag",
											"source": 17,
											"value": "890"
										},
										{
											"begin": 30507,
											"end": 30600,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30625,
											"end": 30627,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 30620,
											"end": 30623,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30616,
											"end": 30628,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30609,
											"end": 30628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30609,
											"end": 30628,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30268,
											"end": 30634,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30806,
											"end": 30810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30844,
											"end": 30846,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 30833,
											"end": 30842,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 30829,
											"end": 30847,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30821,
											"end": 30847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30821,
											"end": 30847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30893,
											"end": 30902,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30887,
											"end": 30891,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30883,
											"end": 30903,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 30879,
											"end": 30880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 30868,
											"end": 30877,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 30864,
											"end": 30881,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 30857,
											"end": 30904,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 30921,
											"end": 31052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "892"
										},
										{
											"begin": 31047,
											"end": 31051,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 30921,
											"end": 31052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 30921,
											"end": 31052,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 30921,
											"end": 31052,
											"name": "tag",
											"source": 17,
											"value": "892"
										},
										{
											"begin": 30921,
											"end": 31052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 30913,
											"end": 31052,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30913,
											"end": 31052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 30640,
											"end": 31059,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31116,
											"end": 31122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 31150,
											"end": 31155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31144,
											"end": 31156,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 31134,
											"end": 31156,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31065,
											"end": 31163,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31270,
											"end": 31281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 31307,
											"end": 31310,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31292,
											"end": 31310,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 31292,
											"end": 31310,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31169,
											"end": 31316,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31390,
											"end": 31391,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "tag",
											"source": 17,
											"value": "896"
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31414,
											"end": 31420,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 31411,
											"end": 31412,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31408,
											"end": 31421,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "898"
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 31499,
											"end": 31500,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 31494,
											"end": 31497,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 31490,
											"end": 31501,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31484,
											"end": 31502,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 31480,
											"end": 31481,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31475,
											"end": 31478,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 31471,
											"end": 31482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31464,
											"end": 31503,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 31436,
											"end": 31438,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 31433,
											"end": 31434,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31429,
											"end": 31439,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31424,
											"end": 31439,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 31424,
											"end": 31439,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "896"
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "tag",
											"source": 17,
											"value": "898"
										},
										{
											"begin": 31400,
											"end": 31513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31531,
											"end": 31537,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 31528,
											"end": 31529,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31525,
											"end": 31538,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 31522,
											"end": 31623,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 31522,
											"end": 31623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "899"
										},
										{
											"begin": 31522,
											"end": 31623,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 31611,
											"end": 31612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 31602,
											"end": 31608,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 31597,
											"end": 31600,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 31593,
											"end": 31609,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31586,
											"end": 31613,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 31522,
											"end": 31623,
											"name": "tag",
											"source": 17,
											"value": "899"
										},
										{
											"begin": 31522,
											"end": 31623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31371,
											"end": 31629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31322,
											"end": 31629,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31739,
											"end": 31742,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 31767,
											"end": 31805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "901"
										},
										{
											"begin": 31799,
											"end": 31804,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 31767,
											"end": 31805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 31767,
											"end": 31805,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 31767,
											"end": 31805,
											"name": "tag",
											"source": 17,
											"value": "901"
										},
										{
											"begin": 31767,
											"end": 31805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31821,
											"end": 31909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "902"
										},
										{
											"begin": 31902,
											"end": 31908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31897,
											"end": 31900,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 31821,
											"end": 31909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 31821,
											"end": 31909,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 31821,
											"end": 31909,
											"name": "tag",
											"source": 17,
											"value": "902"
										},
										{
											"begin": 31821,
											"end": 31909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31814,
											"end": 31909,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 31814,
											"end": 31909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31918,
											"end": 31970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "903"
										},
										{
											"begin": 31963,
											"end": 31969,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 31958,
											"end": 31961,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 31951,
											"end": 31955,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 31944,
											"end": 31949,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 31940,
											"end": 31956,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31918,
											"end": 31970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 31918,
											"end": 31970,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 31918,
											"end": 31970,
											"name": "tag",
											"source": 17,
											"value": "903"
										},
										{
											"begin": 31918,
											"end": 31970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 31995,
											"end": 32001,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 31990,
											"end": 31993,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 31986,
											"end": 32002,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 31979,
											"end": 32002,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31743,
											"end": 32008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 31635,
											"end": 32008,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32144,
											"end": 32147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 32166,
											"end": 32259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "905"
										},
										{
											"begin": 32255,
											"end": 32258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 32246,
											"end": 32252,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 32166,
											"end": 32259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 32166,
											"end": 32259,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 32166,
											"end": 32259,
											"name": "tag",
											"source": 17,
											"value": "905"
										},
										{
											"begin": 32166,
											"end": 32259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32159,
											"end": 32259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 32159,
											"end": 32259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32276,
											"end": 32279,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 32269,
											"end": 32279,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 32269,
											"end": 32279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32014,
											"end": 32285,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 32291,
											"end": 32470,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 32291,
											"end": 32470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "PUSH",
											"source": 17,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 32427,
											"end": 32428,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 32419,
											"end": 32425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 32415,
											"end": 32429,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 32408,
											"end": 32463,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 32291,
											"end": 32470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32291,
											"end": 32470,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32618,
											"end": 32621,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 32639,
											"end": 32706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "908"
										},
										{
											"begin": 32703,
											"end": 32705,
											"name": "PUSH",
											"source": 17,
											"value": "1D"
										},
										{
											"begin": 32698,
											"end": 32701,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 32639,
											"end": 32706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 32639,
											"end": 32706,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 32639,
											"end": 32706,
											"name": "tag",
											"source": 17,
											"value": "908"
										},
										{
											"begin": 32639,
											"end": 32706,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32632,
											"end": 32706,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 32632,
											"end": 32706,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32715,
											"end": 32808,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "909"
										},
										{
											"begin": 32804,
											"end": 32807,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 32715,
											"end": 32808,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 32715,
											"end": 32808,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 32715,
											"end": 32808,
											"name": "tag",
											"source": 17,
											"value": "909"
										},
										{
											"begin": 32715,
											"end": 32808,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 32833,
											"end": 32835,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 32828,
											"end": 32831,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 32824,
											"end": 32836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 32817,
											"end": 32836,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 32817,
											"end": 32836,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32476,
											"end": 32842,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33014,
											"end": 33018,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33052,
											"end": 33054,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 33041,
											"end": 33050,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 33037,
											"end": 33055,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33029,
											"end": 33055,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33029,
											"end": 33055,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33101,
											"end": 33110,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33095,
											"end": 33099,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33091,
											"end": 33111,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 33087,
											"end": 33088,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33076,
											"end": 33085,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 33072,
											"end": 33089,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33065,
											"end": 33112,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 33129,
											"end": 33260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "911"
										},
										{
											"begin": 33255,
											"end": 33259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33129,
											"end": 33260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 33129,
											"end": 33260,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33129,
											"end": 33260,
											"name": "tag",
											"source": 17,
											"value": "911"
										},
										{
											"begin": 33129,
											"end": 33260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33121,
											"end": 33260,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33121,
											"end": 33260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 32848,
											"end": 33267,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33325,
											"end": 33331,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33359,
											"end": 33364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33353,
											"end": 33365,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 33343,
											"end": 33365,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33343,
											"end": 33365,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33273,
											"end": 33372,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33466,
											"end": 33469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33494,
											"end": 33533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "914"
										},
										{
											"begin": 33527,
											"end": 33532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 33494,
											"end": 33533,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 33494,
											"end": 33533,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33494,
											"end": 33533,
											"name": "tag",
											"source": 17,
											"value": "914"
										},
										{
											"begin": 33494,
											"end": 33533,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33549,
											"end": 33620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "915"
										},
										{
											"begin": 33613,
											"end": 33619,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33608,
											"end": 33611,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 33549,
											"end": 33620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 33549,
											"end": 33620,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33549,
											"end": 33620,
											"name": "tag",
											"source": 17,
											"value": "915"
										},
										{
											"begin": 33549,
											"end": 33620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33542,
											"end": 33620,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 33542,
											"end": 33620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33629,
											"end": 33681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "916"
										},
										{
											"begin": 33674,
											"end": 33680,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33669,
											"end": 33672,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 33662,
											"end": 33666,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 33655,
											"end": 33660,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 33651,
											"end": 33667,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33629,
											"end": 33681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 33629,
											"end": 33681,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33629,
											"end": 33681,
											"name": "tag",
											"source": 17,
											"value": "916"
										},
										{
											"begin": 33629,
											"end": 33681,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33706,
											"end": 33735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "917"
										},
										{
											"begin": 33728,
											"end": 33734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33706,
											"end": 33735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 33706,
											"end": 33735,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33706,
											"end": 33735,
											"name": "tag",
											"source": 17,
											"value": "917"
										},
										{
											"begin": 33706,
											"end": 33735,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33701,
											"end": 33704,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 33697,
											"end": 33736,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33690,
											"end": 33736,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 33690,
											"end": 33736,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33470,
											"end": 33742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33378,
											"end": 33742,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33861,
											"end": 33865,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33899,
											"end": 33901,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 33888,
											"end": 33897,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 33884,
											"end": 33902,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33876,
											"end": 33902,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33876,
											"end": 33902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33948,
											"end": 33957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33942,
											"end": 33946,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 33938,
											"end": 33958,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 33934,
											"end": 33935,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 33932,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 33919,
											"end": 33936,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 33912,
											"end": 33959,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 33976,
											"end": 34054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "919"
										},
										{
											"begin": 34049,
											"end": 34053,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 34040,
											"end": 34046,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 33976,
											"end": 34054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 33976,
											"end": 34054,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 33976,
											"end": 34054,
											"name": "tag",
											"source": 17,
											"value": "919"
										},
										{
											"begin": 33976,
											"end": 34054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 33968,
											"end": 34054,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 33968,
											"end": 34054,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 33748,
											"end": 34061,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeBNBStakingPool(address)": "3af82c59",
							"changeDex(address)": "69d2da9c",
							"changePool(address)": "4339bc30",
							"changeProvider(address)": "796f69aa",
							"changeVault(address)": "60e232a9",
							"claim(address)": "1e83409a",
							"claimProfit(address)": "c0ab44f6",
							"deposit()": "d0e30db0",
							"depositABNBc(uint256)": "7c0a75e5",
							"depositABNBcFrom(address,uint256)": "bcdef0a4",
							"getBNBStakingPoolAddress()": "97fd9be7",
							"getCeToken()": "0c632bbe",
							"getCertToken()": "6eecfdaa",
							"getDexAddress()": "854cf3cf",
							"getPendingWithdrawalOf(address)": "ab89b6af",
							"getPoolAddress()": "f586c6d9",
							"getProfitFor(address)": "ac78467c",
							"getProvider()": "483d45bd",
							"getVaultAddress()": "65cacaa4",
							"getWbnbAddress()": "665a21db",
							"getYieldFor(address)": "223888c1",
							"initialize(address,address,address,address,address,address,address)": "35876476",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawABNBc(address,uint256)": "03550d56",
							"withdrawFor(address,uint256)": "db518db2",
							"withdrawWithSlippage(address,uint256,uint256)": "ab43c3df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceTokenJoin\",\"type\":\"address\"}],\"name\":\"ChangeCeTokenJoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"}],\"name\":\"ChangeCertToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"ChangeDex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ChangeProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"ChangeVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"changeBNBStakingPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"changeDex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"changePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"changeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"changeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yields\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBcFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNBStakingPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDexAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPendingWithdrawalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getProfitFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWbnbAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wBnbToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"in BNB to withdraw from vault\",\"recipient\":\"address to receive withdrawan BNB\"}},\"withdrawABNBc(address,uint256)\":{\"params\":{\"amount\":\"in BNB\",\"recipient\":\"address to receive withdrawan aBNBc\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"CLAIM\"},\"deposit()\":{\"notice\":\"DEPOSIT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/CerosRouter.sol\":\"CerosRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"Heliocontracts/contracts/ceros/CerosRouter.sol\":{\"keccak256\":\"0xaf70ef4f57d4e5baeeac8667d32a74715cd098bc29c601d9a761d6ccb3d2aaec\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b98f883d4cf9d7bffc0332ca09aa24424e12875c553e5eee0131f2276f55c2c4\",\"dweb:/ipfs/QmRyuxytXduBueiARoPGku6XUFZ2ELGcFoZDCmRVHuA41Y\"]},\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":{\"keccak256\":\"0x9b93c443e03ee761723989d1b986a315f916319f3d44d585697020987d07b881\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b1a079633788c2754518560561d438690ba63e28d59a05989e43c56bb60f7e11\",\"dweb:/ipfs/QmaW2dvvM1vTdfPpqib5FecKXuLkHNyLzRpXU2nRz6JCnj\"]},\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]},\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]},\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 303,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_paused",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 423,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_status",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1503,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_vault",
								"offset": 0,
								"slot": "201",
								"type": "t_contract(IVault)3040"
							},
							{
								"astId": 1506,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_dex",
								"offset": 0,
								"slot": "202",
								"type": "t_contract(IDex)2905"
							},
							{
								"astId": 1509,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_pool",
								"offset": 0,
								"slot": "203",
								"type": "t_contract(IBinancePool)2566"
							},
							{
								"astId": 1512,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_certToken",
								"offset": 0,
								"slot": "204",
								"type": "t_contract(ICertToken)2771"
							},
							{
								"astId": 1514,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_wBnbAddress",
								"offset": 0,
								"slot": "205",
								"type": "t_address"
							},
							{
								"astId": 1517,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_ceToken",
								"offset": 0,
								"slot": "206",
								"type": "t_contract(IERC20)831"
							},
							{
								"astId": 1521,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_profits",
								"offset": 0,
								"slot": "207",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1523,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_provider",
								"offset": 0,
								"slot": "208",
								"type": "t_address"
							},
							{
								"astId": 1526,
								"contract": "Heliocontracts/contracts/ceros/CerosRouter.sol:CerosRouter",
								"label": "_bnbStakingPool",
								"offset": 0,
								"slot": "209",
								"type": "t_contract(IBNBStakingPool)2536"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBNBStakingPool)2536": {
								"encoding": "inplace",
								"label": "contract IBNBStakingPool",
								"numberOfBytes": "20"
							},
							"t_contract(IBinancePool)2566": {
								"encoding": "inplace",
								"label": "contract IBinancePool",
								"numberOfBytes": "20"
							},
							"t_contract(ICertToken)2771": {
								"encoding": "inplace",
								"label": "contract ICertToken",
								"numberOfBytes": "20"
							},
							"t_contract(IDex)2905": {
								"encoding": "inplace",
								"label": "contract IDex",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)831": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IVault)3040": {
								"encoding": "inplace",
								"label": "contract IVault",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposit(address,address,uint256,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "CLAIM"
							},
							"deposit()": {
								"notice": "DEPOSIT"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"IBNBStakingPool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinUnstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "getPendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinStake()": "56a3b5fa",
							"getMinUnstake()": "034c4454",
							"getPendingUnstakesOf(address)": "46faa33c",
							"stakeCerts()": "ac76d450",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinUnstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"getPendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":\"IBNBStakingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":{\"keccak256\":\"0x9b93c443e03ee761723989d1b986a315f916319f3d44d585697020987d07b881\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b1a079633788c2754518560561d438690ba63e28d59a05989e43c56bb60f7e11\",\"dweb:/ipfs/QmaW2dvvM1vTdfPpqib5FecKXuLkHNyLzRpXU2nRz6JCnj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"IBinancePool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinimumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRelayerFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "pendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAndClaimCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinimumStake()": "d9bbd278",
							"getRelayerFee()": "c2117d82",
							"pendingUnstakesOf(address)": "3f9dac52",
							"stakeAndClaimCerts()": "ff0a42de",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"pendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAndClaimCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":\"IBinancePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ICerosRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceTokenJoin",
									"type": "address"
								}
							],
							"name": "ChangeCeTokenJoin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								}
							],
							"name": "ChangeCertToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "ChangeDex",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ChangeProvider",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "ChangeVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBcFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getProfitFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								}
							],
							"name": "withdrawWithSlippage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address)": "1e83409a",
							"claimProfit(address)": "c0ab44f6",
							"deposit()": "d0e30db0",
							"depositABNBc(uint256)": "7c0a75e5",
							"depositABNBcFrom(address,uint256)": "bcdef0a4",
							"getProfitFor(address)": "ac78467c",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawABNBc(address,uint256)": "03550d56",
							"withdrawFor(address,uint256)": "db518db2",
							"withdrawWithSlippage(address,uint256,uint256)": "ab43c3df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceTokenJoin\",\"type\":\"address\"}],\"name\":\"ChangeCeTokenJoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"}],\"name\":\"ChangeCertToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"ChangeDex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ChangeProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"ChangeVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBcFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getProfitFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"withdrawWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claim\"},\"deposit()\":{\"notice\":\"Deposit\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":\"ICerosRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposit(address,address,uint256,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claim"
							},
							"deposit()": {
								"notice": "Deposit"
							},
							"withdraw(address,uint256)": {
								"notice": "Withdrawal"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"IDex": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":\"IDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "CeTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentRatio",
									"type": "uint256"
								}
							],
							"name": "RatioUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYieldsFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCeTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimedOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPrincipalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAmountInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimYields(address)": "b36684ac",
							"claimYieldsFor(address,address)": "1101596c",
							"deposit(uint256)": "b6b55f25",
							"depositFor(address,uint256)": "2f4f21e2",
							"getCeTokenBalanceOf(address)": "c96f0e01",
							"getClaimedOf(address)": "4226626a",
							"getDepositOf(address)": "5d602c00",
							"getPrincipalOf(address)": "aba317a9",
							"getTotalAmountInVault()": "fad83484",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawFor(address,address,uint256)": "9f1d9267"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"CeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRatio\",\"type\":\"uint256\"}],\"name\":\"RatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYieldsFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCeTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrincipalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmountInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Events\"},\"RatioUpdated(uint256)\":{\"notice\":\"Methods\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Events"
							},
							"RatioUpdated(uint256)": {
								"notice": "Methods"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n  --> @openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:66:9:\n   |\n66 |         _status = _NOT_ENTERED;\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2894,
					"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"start": 2872
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Heliocontracts/contracts/ceros/CerosRouter.sol:136:27:\n    |\n136 |     function depositABNBc(uint256 amount)\n    |                           ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4808,
					"file": "Heliocontracts/contracts/ceros/CerosRouter.sol",
					"start": 4794
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Heliocontracts/contracts/ceros/CerosRouter.sol:140:14:\n    |\n140 |     returns (uint256 value)\n    |              ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4879,
					"file": "Heliocontracts/contracts/ceros/CerosRouter.sol",
					"start": 4866
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 754,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								753,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 712,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 711,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$711_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 486,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"PausableUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 754,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 283,
							"src": "172:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "697:13:2"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "697:13:2"
								},
								{
									"baseName": {
										"id": 290,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "712:18:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "712:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "216:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409,
								753,
								282
							],
							"name": "PausableUpgradeable",
							"nameLocation": "674:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "737:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 296,
									"name": "Paused",
									"nameLocation": "821:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "828:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:2"
									},
									"src": "815:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "851:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 301,
									"name": "Unpaused",
									"nameLocation": "932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "941:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:2"
									},
									"src": "926:32:2"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "977:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "964:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 302,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "964:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1116:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1126:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1126:27:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "991:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1099:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:2"
									},
									"scope": 409,
									"src": "1063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1229:32:2",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1239:15:2"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1212:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1175:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:2"
									},
									"scope": 409,
									"src": "1166:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1472:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1482:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1482:19:2"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1511:1:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1267:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 331,
									"name": "whenNotPaused",
									"nameLocation": "1456:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:2:2"
									},
									"src": "1447:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1719:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1729:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1729:16:2"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1525:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 339,
									"name": "whenPaused",
									"nameLocation": "1706:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:2"
									},
									"src": "1697:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1911:31:2",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "1928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "1921:14:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1769:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1867:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:6:2"
									},
									"scope": 409,
									"src": "1858:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2061:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2079:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 353,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2071:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2071:38:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1948:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2019:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:2"
									},
									"scope": 409,
									"src": "2010:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2236:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2254:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2122:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2197:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 409,
									"src": "2188:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2478:66:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2498:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2488:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2488:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2517:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2512:25:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2300:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2464:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2464:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2438:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 409,
									"src": "2429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2724:69:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2734:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2734:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2764:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2759:27:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2550:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 390,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 339,
												"src": "2713:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:2"
									},
									"scope": 409,
									"src": "2676:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2799:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 408,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3078:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "3058:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 407,
										"length": {
											"hexValue": "3439",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3058:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 410,
							"src": "656:2430:2",
							"usedErrors": []
						}
					],
					"src": "105:2982:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 283,
							"src": "121:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "964:13:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:3"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								282
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 418,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1732:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 421,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1779:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1823:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1913:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1923:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1896:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:3"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 468,
									"src": "1853:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2040:39:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2060:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 434,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2023:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:3"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 468,
									"src": "1970:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2480:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2569:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 447,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2580:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:3"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:3"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2872:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2882:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 462,
									"name": "nonReentrant",
									"nameLocation": "2465:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:3"
									},
									"src": "2456:445:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3166:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 466,
										"length": {
											"hexValue": "3439",
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "916:2278:3",
							"usedErrors": []
						}
					],
					"src": "97:3098:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1252:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 479,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "1476:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 484,
												"nodeType": "Return",
												"src": "1469:30:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1206:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1246:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:4"
									},
									"scope": 711,
									"src": "1186:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2494:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 497,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 495,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 500,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2537:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:4"
											},
											{
												"assignments": [
													506,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "2589:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 513,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 507,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2607:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 509,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2629:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "2658:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:4"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2442:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2469:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:4"
									},
									"scope": 711,
									"src": "2423:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3566:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3596:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3604:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 530,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															537,
															557
														],
														"referencedDeclaration": 557,
														"src": "3583:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 535,
												"nodeType": "Return",
												"src": "3576:67:4"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:4"
									},
									"scope": 711,
									"src": "3477:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "4019:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4066:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 553,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4075:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 549,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4036:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 548,
												"id": 555,
												"nodeType": "Return",
												"src": "4029:59:4"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3903:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3927:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3954:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4005:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:4"
									},
									"scope": 711,
									"src": "3872:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "4600:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4639:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4647:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 572,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 569,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4617:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 575,
												"nodeType": "Return",
												"src": "4610:94:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4497:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4521:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4548:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4586:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:4"
									},
									"scope": 711,
									"src": "4457:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5138:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 594,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 592,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 597,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5181:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 604,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5258:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5247:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:4"
											},
											{
												"assignments": [
													610,
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5311:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 609,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5325:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 611,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5378:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 613,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5352:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5371:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5417:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5426:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 623,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5438:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 620,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "5400:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 590,
												"id": 625,
												"nodeType": "Return",
												"src": "5393:58:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5023:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5050:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5073:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:4"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5124:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:4"
									},
									"scope": 711,
									"src": "4959:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5735:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5771:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5779:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 637,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															644,
															679
														],
														"referencedDeclaration": 679,
														"src": "5752:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 642,
												"nodeType": "Return",
												"src": "5745:80:4"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5663:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5679:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5721:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:4"
									},
									"scope": 711,
									"src": "5635:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6174:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 658,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6203:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 657,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "6192:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:4"
											},
											{
												"assignments": [
													664,
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6263:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6277:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 665,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6322:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 667,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6304:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "6361:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 674,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6370:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 675,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "6382:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 672,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "6344:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 677,
												"nodeType": "Return",
												"src": "6337:58:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6053:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6077:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6104:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6160:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:4"
									},
									"scope": 711,
									"src": "6016:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "6782:582:4",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "6796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "6853:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 695,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "6937:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 705,
																"nodeType": "Block",
																"src": "7295:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 702,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "7320:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 701,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 704,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:4"
																	}
																]
															},
															"id": 706,
															"nodeType": "IfStatement",
															"src": "6933:415:4",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "6960:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 699,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 708,
												"nodeType": "IfStatement",
												"src": "6792:566:4",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6805:42:4",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "6826:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "6819:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6657:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6679:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6712:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6768:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:4"
									},
									"scope": 711,
									"src": "6622:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "194:7172:4",
							"usedErrors": []
						}
					],
					"src": "101:7266:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 283,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:5"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "763:7:5",
										"statements": []
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 719,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:5"
									},
									"scope": 753,
									"src": "711:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "838:7:5",
										"statements": []
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:5"
									},
									"scope": 753,
									"src": "776:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "912:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 734,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 733,
												"id": 736,
												"nodeType": "Return",
												"src": "922:17:5"
											}
										]
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "903:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:5"
									},
									"scope": 753,
									"src": "850:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1019:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "1029:15:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1003:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:5"
									},
									"scope": 753,
									"src": "952:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 752,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "1316:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 749,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 751,
										"length": {
											"hexValue": "3530",
											"id": 750,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "651:693:5",
							"usedErrors": []
						}
					],
					"src": "86:1259:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC20",
							"nameLocation": "212:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 765,
									"name": "Transfer",
									"nameLocation": "394:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "403:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "425:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "445:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:6"
									},
									"src": "388:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 774,
									"name": "Approval",
									"nameLocation": "625:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "634:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "682:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:6"
									},
									"src": "619:78:6"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 831,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 831,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1211:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1223:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:6"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1257:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:6"
									},
									"scope": 831,
									"src": "1193:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1557:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1572:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1612:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:6"
									},
									"scope": 831,
									"src": "1538:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2291:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2308:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:6"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2342:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:6"
									},
									"scope": 831,
									"src": "2274:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:6",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2699:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2758:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:6"
									},
									"scope": 831,
									"src": "2646:118:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "202:2564:6",
							"usedErrors": []
						}
					],
					"src": "106:2661:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 834,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:7",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1471:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1494:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1519:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1542:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1568:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 844,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1585:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1604:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:7"
									},
									"scope": 867,
									"src": "1446:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1950:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1988:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:7"
									},
									"scope": 867,
									"src": "1934:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:7"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2240:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:7"
									},
									"scope": 867,
									"src": "2189:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "620:1631:7",
							"usedErrors": []
						}
					],
					"src": "114:2138:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1478
						],
						"IERC20": [
							831
						],
						"IERC20Permit": [
							867
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 832,
							"src": "140:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 868,
							"src": "164:46:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 1479,
							"src": "211:36:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 876,
									"libraryName": {
										"id": 874,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "737:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:8",
									"typeName": {
										"id": 875,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "865:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "895:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 890,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 798,
																		"src": "925:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 893,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "950:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 894,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "954:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 888,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 886,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "875:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "875:86:8"
											}
										]
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "794:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "794:6:8"
													},
													"referencedDeclaration": 831,
													"src": "794:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "816:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "836:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:8"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:8"
									},
									"scope": 1148,
									"src": "763:205:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1102:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "1132:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 915,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "1162:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 830,
																		"src": "1162:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 918,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "1191:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 919,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "1197:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1201:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 913,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 911,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1112:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:8"
											}
										]
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1009:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 900,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "1009:6:8"
													},
													"referencedDeclaration": 831,
													"src": "1009:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1031:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1053:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1073:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:8"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:8"
									},
									"scope": 1148,
									"src": "974:241:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1581:497:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "1830:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 945,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1148",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1148",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 944,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 943,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 947,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "1877:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 941,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 929,
																					"src": "1846:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$831",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 808,
																				"src": "1846:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "2001:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 960,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 929,
																			"src": "2031:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 818,
																		"src": "2031:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 963,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "2055:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 964,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "2064:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 958,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 956,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1981:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:8"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1505:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 927,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "1505:6:8"
													},
													"referencedDeclaration": 831,
													"src": "1505:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1527:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1552:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:8"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:8"
									},
									"scope": 1148,
									"src": "1475:603:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2200:194:8",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "2210:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 985,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1148",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1148",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 987,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2264:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 981,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2233:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$831",
																	"typeString": "contract IERC20"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 808,
															"src": "2233:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 989,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2275:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "2310:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 996,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "2340:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$831",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 818,
																		"src": "2340:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 999,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2364:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1000,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "2373:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 994,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 992,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2290:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:8"
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2124:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 970,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "2124:6:8"
													},
													"referencedDeclaration": 831,
													"src": "2124:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2146:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2171:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:8"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:8"
									},
									"scope": 1148,
									"src": "2084:310:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2516:370:8",
										"statements": [
											{
												"id": 1051,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:8",
												"statements": [
													{
														"assignments": [
															1016
														],
														"declarations": [
															{
																"constant": false,
																"id": 1016,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "2550:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1015,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1025,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1021,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1148",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1019,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1023,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2604:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1017,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2573:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 808,
																"src": "2573:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1027,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "2634:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1028,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "2650:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1026,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1032,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:8"
													},
													{
														"assignments": [
															1034
														],
														"declarations": [
															{
																"constant": false,
																"id": 1034,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 1051,
																"src": "2715:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1033,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1038,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2738:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1036,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "2753:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1040,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2792:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1043,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "2822:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$831",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 818,
																				"src": "2822:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1046,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "2846:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1047,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "2855:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1041,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1039,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "2772:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:8"
													}
												]
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2440:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1006,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "2440:6:8"
													},
													"referencedDeclaration": 831,
													"src": "2440:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2462:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2487:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:8"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:8"
									},
									"scope": 1148,
									"src": "2400:486:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "3107:257:8",
										"statements": [
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "3117:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3152:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3139:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "3139:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3181:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "3188:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3197:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "3204:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1087,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3214:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1088,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "3217:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1089,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "3220:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1080,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 852,
														"src": "3168:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:8"
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "3232:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [
														{
															"id": 1096,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3266:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1094,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3253:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$867",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "3253:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "3290:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "3304:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:8"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2921:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$867",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 867,
														"src": "2921:12:8"
													},
													"referencedDeclaration": 867,
													"src": "2921:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$867",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2949:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2972:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2997:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3020:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3046:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1065,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3063:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3082:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:8"
									},
									"scope": 1148,
									"src": "2892:472:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "3817:636:8",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4166:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1118,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "4220:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1122,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4200:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$831",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1238,
														"src": "4192:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1129,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4275:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "4271:176:8",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "4298:149:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1136,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1119,
																				"src": "4370:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1138,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1137,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1139,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1134,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1133,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3776:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$831",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 831,
														"src": "3776:6:8"
													},
													"referencedDeclaration": 831,
													"src": "3776:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3790:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:8"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:8"
									},
									"scope": 1148,
									"src": "3747:706:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "707:3748:8",
							"usedErrors": []
						}
					],
					"src": "115:4341:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1478
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478
							],
							"name": "Address",
							"nameLocation": "202:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "1241:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1159,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "1465:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1164,
												"nodeType": "Return",
												"src": "1458:30:9"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1235:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:9"
									},
									"scope": 1478,
									"src": "1175:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "2483:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1177,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1175,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "2526:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:9"
											},
											{
												"assignments": [
													1186,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "2578:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1185,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1187,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "2596:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "2618:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2647:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:9"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2431:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2458:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:9"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:9"
									},
									"scope": 1478,
									"src": "2412:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "3555:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "3594:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "3602:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1210,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "3572:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1216,
												"nodeType": "Return",
												"src": "3565:79:9"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3504:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:9"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3541:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:9"
									},
									"scope": 1478,
									"src": "3466:185:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "4020:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "4059:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4067:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1234,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4076:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1230,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "4037:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1236,
												"nodeType": "Return",
												"src": "4030:59:9"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3904:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3928:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3955:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:9"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "4006:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:9"
									},
									"scope": 1478,
									"src": "3873:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "4601:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "4640:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "4648:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "4654:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1250,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "4618:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1256,
												"nodeType": "Return",
												"src": "4611:94:9"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4498:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4549:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:9"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4587:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:9"
									},
									"scope": 1478,
									"src": "4458:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "5139:267:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1275,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1478",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1278,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "5182:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:9"
											},
											{
												"assignments": [
													1284,
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "5241:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1283,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "5255:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1285,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"arguments": [
														{
															"id": 1291,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5308:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1287,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5282:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "5301:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5357:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5365:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1297,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "5374:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1298,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5386:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1294,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5330:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1300,
												"nodeType": "Return",
												"src": "5323:76:9"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5024:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5051:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5074:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5125:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:9"
									},
									"scope": 1478,
									"src": "4960:446:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "5683:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1313,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "5719:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5727:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1312,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1319,
															1348
														],
														"referencedDeclaration": 1348,
														"src": "5700:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1317,
												"nodeType": "Return",
												"src": "5693:80:9"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5611:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5627:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:9"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "5669:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:9"
									},
									"scope": 1478,
									"src": "5583:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "6122:168:9",
										"statements": [
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "6133:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "6147:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1339,
												"initialValue": {
													"arguments": [
														{
															"id": 1337,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "6192:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1335,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "6174:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "6241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6249:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1343,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "6258:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1344,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "6270:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1340,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "6214:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1346,
												"nodeType": "Return",
												"src": "6207:76:9"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6001:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6025:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6052:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:9"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "6108:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:9"
									},
									"scope": 1478,
									"src": "5964:326:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "6566:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6604:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "6612:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1358,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1365,
															1394
														],
														"referencedDeclaration": 1394,
														"src": "6583:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1363,
												"nodeType": "Return",
												"src": "6576:84:9"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6499:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6515:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:9"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "6552:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:9"
									},
									"scope": 1478,
									"src": "6469:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "7008:170:9",
										"statements": [
											{
												"assignments": [
													1378,
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "7019:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "7033:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"id": 1383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "7080:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7060:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1387,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "7129:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "7137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "7146:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "7158:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1386,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "7102:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1392,
												"nodeType": "Return",
												"src": "7095:76:9"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6892:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6916:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6943:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:9"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6994:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:9"
									},
									"scope": 1478,
									"src": "6853:325:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "7660:434:9",
										"statements": [
											{
												"condition": {
													"id": 1408,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1399,
													"src": "7674:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "8030:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "8052:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "8064:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1425,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "8044:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:9"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "7670:418:9",
												"trueBody": {
													"id": 1424,
													"nodeType": "Block",
													"src": "7683:341:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1409,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "7701:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1421,
															"nodeType": "IfStatement",
															"src": "7697:286:9",
															"trueBody": {
																"id": 1420,
																"nodeType": "Block",
																"src": "7725:258:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1415,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1397,
																							"src": "7927:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1414,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "7916:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1413,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1419,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1422,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "8003:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1423,
															"nodeType": "Return",
															"src": "7996:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7511:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7535:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7557:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7590:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "7646:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:9"
									},
									"scope": 1478,
									"src": "7466:628:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "8475:135:9",
										"statements": [
											{
												"condition": {
													"id": 1445,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "8489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "8546:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1450,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "8568:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1451,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "8580:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1449,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "8560:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:9"
														}
													]
												},
												"id": 1455,
												"nodeType": "IfStatement",
												"src": "8485:119:9",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "8498:42:9",
													"statements": [
														{
															"expression": {
																"id": 1446,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "8519:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1444,
															"id": 1447,
															"nodeType": "Return",
															"src": "8512:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:9",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8350:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8372:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8405:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "8461:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:9"
									},
									"scope": 1478,
									"src": "8315:295:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "8699:457:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1464,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "8775:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "9105:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1471,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "9126:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1470,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:9"
														}
													]
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "8771:379:9",
												"trueBody": {
													"id": 1469,
													"nodeType": "Block",
													"src": "8798:301:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1459,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1459,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:9",
																	"valueSize": 1
																}
															],
															"id": 1468,
															"nodeType": "InlineAssembly",
															"src": "8947:142:9"
														}
													]
												}
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8633:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8658:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:9"
									},
									"scope": 1478,
									"src": "8616:540:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1479,
							"src": "194:8964:9",
							"usedErrors": []
						}
					],
					"src": "101:9058:9"
				},
				"id": 9
			},
			"Heliocontracts/contracts/ceros/CerosRouter.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/CerosRouter.sol",
					"exportedSymbols": {
						"Address": [
							1478
						],
						"AddressUpgradeable": [
							711
						],
						"CerosRouter": [
							2506
						],
						"ContextUpgradeable": [
							753
						],
						"IBNBStakingPool": [
							2536
						],
						"IBinancePool": [
							2566
						],
						"ICerosRouter": [
							2726
						],
						"ICertToken": [
							2771
						],
						"IDex": [
							2905
						],
						"IERC20": [
							831
						],
						"IERC20Permit": [
							867
						],
						"IVault": [
							3040
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						],
						"PausableUpgradeable": [
							409
						],
						"ReentrancyGuardUpgradeable": [
							468
						],
						"SafeERC20": [
							1148
						]
					},
					"id": 2507,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 132,
							"src": "65:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 469,
							"src": "141:85:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 410,
							"src": "227:78:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 832,
							"src": "306:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1485,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 1149,
							"src": "363:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
							"file": "./interfaces/IVault.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 3041,
							"src": "429:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
							"file": "./interfaces/IDex.sol",
							"id": 1487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2906,
							"src": "463:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
							"file": "./interfaces/ICerosRouter.sol",
							"id": 1488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2727,
							"src": "495:39:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
							"file": "./interfaces/IBinancePool.sol",
							"id": 1489,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2567,
							"src": "535:39:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol",
							"file": "./interfaces/IBNBStakingPool.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2537,
							"src": "575:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "./interfaces/ICertToken.sol",
							"id": 1491,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2772,
							"src": "618:37:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1492,
										"name": "ICerosRouter",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2726,
										"src": "681:12:10"
									},
									"id": 1493,
									"nodeType": "InheritanceSpecifier",
									"src": "681:12:10"
								},
								{
									"baseName": {
										"id": 1494,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "695:18:10"
									},
									"id": 1495,
									"nodeType": "InheritanceSpecifier",
									"src": "695:18:10"
								},
								{
									"baseName": {
										"id": 1496,
										"name": "PausableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "715:19:10"
									},
									"id": 1497,
									"nodeType": "InheritanceSpecifier",
									"src": "715:19:10"
								},
								{
									"baseName": {
										"id": 1498,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "736:26:10"
									},
									"id": 1499,
									"nodeType": "InheritanceSpecifier",
									"src": "736:26:10"
								}
							],
							"canonicalName": "CerosRouter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2506,
							"linearizedBaseContracts": [
								2506,
								468,
								409,
								131,
								753,
								282,
								2726
							],
							"name": "CerosRouter",
							"nameLocation": "666:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "769:28:10",
										"text": " Variables"
									},
									"id": 1503,
									"mutability": "mutable",
									"name": "_vault",
									"nameLocation": "817:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "802:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVault_$3040",
										"typeString": "contract IVault"
									},
									"typeName": {
										"id": 1502,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1501,
											"name": "IVault",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3040,
											"src": "802:6:10"
										},
										"referencedDeclaration": 3040,
										"src": "802:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVault_$3040",
											"typeString": "contract IVault"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1506,
									"mutability": "mutable",
									"name": "_dex",
									"nameLocation": "842:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "829:17:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDex_$2905",
										"typeString": "contract IDex"
									},
									"typeName": {
										"id": 1505,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1504,
											"name": "IDex",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2905,
											"src": "829:4:10"
										},
										"referencedDeclaration": 2905,
										"src": "829:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDex_$2905",
											"typeString": "contract IDex"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1509,
									"mutability": "mutable",
									"name": "_pool",
									"nameLocation": "873:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "852:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBinancePool_$2566",
										"typeString": "contract IBinancePool"
									},
									"typeName": {
										"id": 1508,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1507,
											"name": "IBinancePool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2566,
											"src": "852:12:10"
										},
										"referencedDeclaration": 2566,
										"src": "852:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBinancePool_$2566",
											"typeString": "contract IBinancePool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1512,
									"mutability": "mutable",
									"name": "_certToken",
									"nameLocation": "942:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "923:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$2771",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 1511,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1510,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2771,
											"src": "923:10:10"
										},
										"referencedDeclaration": 2771,
										"src": "923:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$2771",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1514,
									"mutability": "mutable",
									"name": "_wBnbAddress",
									"nameLocation": "993:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "977:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1513,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "977:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1517,
									"mutability": "mutable",
									"name": "_ceToken",
									"nameLocation": "1026:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "1011:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$831",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1516,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1515,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 831,
											"src": "1011:6:10"
										},
										"referencedDeclaration": 831,
										"src": "1011:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$831",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1521,
									"mutability": "mutable",
									"name": "_profits",
									"nameLocation": "1097:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "1061:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1520,
										"keyType": {
											"id": 1518,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1069:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1061:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1519,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1080:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1523,
									"mutability": "mutable",
									"name": "_provider",
									"nameLocation": "1127:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "1111:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1522,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1111:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1526,
									"mutability": "mutable",
									"name": "_bnbStakingPool",
									"nameLocation": "1166:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2506,
									"src": "1142:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
										"typeString": "contract IBNBStakingPool"
									},
									"typeName": {
										"id": 1525,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1524,
											"name": "IBNBStakingPool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2536,
											"src": "1142:15:10"
										},
										"referencedDeclaration": 2536,
										"src": "1142:15:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
											"typeString": "contract IBNBStakingPool"
										}
									},
									"visibility": "private"
								},
								{
									"id": 1530,
									"libraryName": {
										"id": 1527,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "1200:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1194:27:10",
									"typeName": {
										"id": 1529,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1528,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 831,
											"src": "1214:6:10"
										},
										"referencedDeclaration": 831,
										"src": "1214:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$831",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1283:144:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1534,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1314:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1314:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1536,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1328:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1328:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1314:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1539,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1339:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1339:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1541,
																	"name": "_provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1353:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1339:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1314:48:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f76696465723a206e6f7420616c6c6f776564",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
																"typeString": "literal_string \"Provider: not allowed\""
															},
															"value": "Provider: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
																"typeString": "literal_string \"Provider: not allowed\""
															}
														],
														"id": 1533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1293:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:116:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "1293:116:10"
											},
											{
												"id": 1547,
												"nodeType": "PlaceholderStatement",
												"src": "1419:1:10"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "1226:28:10",
										"text": " Modifiers"
									},
									"id": 1549,
									"name": "onlyProvider",
									"nameLocation": "1268:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:2:10"
									},
									"src": "1259:168:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "1656:647:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1568,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1666:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1666:16:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1571,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1692:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1692:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "1692:17:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1574,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1719:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "1719:24:10"
											},
											{
												"expression": {
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1577,
														"name": "_certToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1753:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2771",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1579,
																"name": "certToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "1777:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1578,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "1766:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$2771_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1766:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$2771",
															"typeString": "contract ICertToken"
														}
													},
													"src": "1753:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$2771",
														"typeString": "contract ICertToken"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "1753:34:10"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1583,
														"name": "_wBnbAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "1797:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1584,
														"name": "wBnbToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "1812:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1797:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "1797:24:10"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1587,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "1831:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$831",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1589,
																"name": "ceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "1849:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1588,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "1842:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1842:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$831",
															"typeString": "contract IERC20"
														}
													},
													"src": "1831:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$831",
														"typeString": "contract IERC20"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1831:26:10"
											},
											{
												"expression": {
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1593,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "1867:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$3040",
															"typeString": "contract IVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1595,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "1883:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1594,
															"name": "IVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3040,
															"src": "1876:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVault_$3040_$",
																"typeString": "type(contract IVault)"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$3040",
															"typeString": "contract IVault"
														}
													},
													"src": "1867:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVault_$3040",
														"typeString": "contract IVault"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "1867:22:10"
											},
											{
												"expression": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1599,
														"name": "_dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "1899:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDex_$2905",
															"typeString": "contract IDex"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1601,
																"name": "dexAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "1911:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1600,
															"name": "IDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2905,
															"src": "1906:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDex_$2905_$",
																"typeString": "type(contract IDex)"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1906:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDex_$2905",
															"typeString": "contract IDex"
														}
													},
													"src": "1899:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDex_$2905",
														"typeString": "contract IDex"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "1899:23:10"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1605,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "1932:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2566",
															"typeString": "contract IBinancePool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1607,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "1953:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1606,
															"name": "IBinancePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "1940:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBinancePool_$2566_$",
																"typeString": "type(contract IBinancePool)"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1940:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2566",
															"typeString": "contract IBinancePool"
														}
													},
													"src": "1932:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBinancePool_$2566",
														"typeString": "contract IBinancePool"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "1932:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"name": "dexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1998:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2015:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1617,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2015:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1616,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2010:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2010:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2010:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1612,
																	"name": "wBnbToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "1975:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1611,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1968:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1968:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "1968:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1968:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "1968:60:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1627,
															"name": "dexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2068:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2085:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2085:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1628,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2080:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2080:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1624,
																	"name": "certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "2045:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1623,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "2038:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2038:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "2038:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "2038:60:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "bondToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "2138:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1641,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1640,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2149:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2149:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2149:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1636,
																	"name": "certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "2115:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1635,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "2108:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2108:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "2108:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "2108:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1651,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2207:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2218:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1653,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2218:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1652,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2213:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2213:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2213:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "2184:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1647,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "2177:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2177:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "2177:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "2177:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "2271:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2283:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1665,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2283:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1664,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2278:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2278:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2278:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1660,
																	"name": "certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "2248:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1659,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "2241:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "2241:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "2241:55:10"
											}
										]
									},
									"functionSelector": "35876476",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1644:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1644:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "1441:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "certToken",
												"nameLocation": "1469:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1461:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "wBnbToken",
												"nameLocation": "1496:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1488:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "1523:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1515:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "bondToken",
												"nameLocation": "1548:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1540:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1575:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "dexAddress",
												"nameLocation": "1598:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1590:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1626:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1618:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:185:10"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:0:10"
									},
									"scope": 2506,
									"src": "1432:871:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2643
									],
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "2462:1926:10",
										"statements": [
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2480:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "2472:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2472:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"expression": {
														"id": 1685,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2489:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "2489:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2472:26:10"
											},
											{
												"assignments": [
													1689
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "minimumStake",
														"nameLocation": "2976:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "2968:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2968:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1690,
															"name": "_bnbStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2991:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMinStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2523,
														"src": "2991:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2968:52:10"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "3038:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "3030:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3030:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1696,
												"nodeType": "VariableDeclarationStatement",
												"src": "3030:14:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1697,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "3058:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1698,
														"name": "minimumStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "3068:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3058:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1708,
												"nodeType": "IfStatement",
												"src": "3054:94:10",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "3082:66:10",
													"statements": [
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1700,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "3096:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1703,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1684,
																			"src": "3130:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1701,
																			"name": "_certToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "3105:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ICertToken_$2771",
																				"typeString": "contract ICertToken"
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "bondsToShares",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2770,
																		"src": "3105:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3105:32:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3096:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "3096:41:10"
														}
													]
												}
											},
											{
												"assignments": [
													1710
												],
												"declarations": [
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "realAmount",
														"nameLocation": "3333:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "3325:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3325:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"nodeType": "VariableDeclarationStatement",
												"src": "3325:18:10"
											},
											{
												"assignments": [
													1713
												],
												"declarations": [
													{
														"constant": false,
														"id": 1713,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "3361:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "3353:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1712,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:14:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1715,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "3381:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3391:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3381:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "3501:418:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4445582044495341424c4544",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3522:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe",
																			"typeString": "literal_string \"DEX DISABLED\""
																		},
																		"value": "DEX DISABLED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_d05cfa844d12b8af41413193163096682a0a7e8a04e80ccfe357152f0cf877fe",
																			"typeString": "literal_string \"DEX DISABLED\""
																		}
																	],
																	"id": 1730,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3515:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3515:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "3515:22:10"
														}
													]
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "3377:542:10",
												"trueBody": {
													"id": 1729,
													"nodeType": "Block",
													"src": "3394:101:10",
													"statements": [
														{
															"expression": {
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1718,
																	"name": "realAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3408:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1719,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "3421:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3408:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1721,
															"nodeType": "ExpressionStatement",
															"src": "3408:19:10"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1722,
																			"name": "_bnbStakingPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "3441:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																				"typeString": "contract IBNBStakingPool"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakeCerts",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2511,
																		"src": "3441:26:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1725,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1684,
																			"src": "3475:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3441:41:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3441:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1728,
															"nodeType": "ExpressionStatement",
															"src": "3441:43:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1741,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4030:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CerosRouter_$2506",
																					"typeString": "contract CerosRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CerosRouter_$2506",
																					"typeString": "contract CerosRouter"
																				}
																			],
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4022:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1739,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4022:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4022:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1737,
																		"name": "_certToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "4001:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICertToken_$2771",
																			"typeString": "contract ICertToken"
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 788,
																	"src": "4001:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4001:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1744,
																"name": "realAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "4040:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4001:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420616d6f756e74206f66204365726f73526f7574657220696e206365727420746f6b656e",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4064:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e",
																"typeString": "literal_string \"insufficient amount of CerosRouter in cert token\""
															},
															"value": "insufficient amount of CerosRouter in cert token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daafc18566c1aee135747f48f0e0477fd661ecede99bcbadb714a7a9d648f25e",
																"typeString": "literal_string \"insufficient amount of CerosRouter in cert token\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3980:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:144:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "3980:144:10"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1749,
															"name": "_profits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "4184:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1752,
														"indexExpression": {
															"expression": {
																"id": 1750,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4193:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4193:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4184:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1753,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "4208:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4184:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "4184:30:10"
											},
											{
												"expression": {
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1756,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "4224:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1759,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4250:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4250:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1761,
																	"name": "realAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "4262:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1762,
																	"name": "profit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "4275:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4262:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1757,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "4232:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "depositFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2963,
															"src": "4232:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) external returns (uint256)"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4232:50:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4224:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "4224:58:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4305:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4305:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "_wBnbAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4317:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1771,
																"name": "realAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "4331:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1772,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "4344:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4331:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1774,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "4352:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "4297:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "EmitStatement",
												"src": "4292:67:10"
											},
											{
												"expression": {
													"id": 1777,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "4376:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1778,
												"nodeType": "Return",
												"src": "4369:12:10"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "2308:26:10",
										"text": " DEPOSIT"
									},
									"functionSelector": "d0e30db0",
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1676,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1549,
												"src": "2400:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2400:12:10"
										},
										{
											"id": 1679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1678,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2417:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2417:12:10"
										}
									],
									"name": "deposit",
									"nameLocation": "2348:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1675,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2387:8:10"
									},
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:2:10"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2451:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "2443:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:15:10"
									},
									"scope": 2506,
									"src": "2339:2049:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2652
									],
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "4542:225:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "4588:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1801,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4603:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CerosRouter_$2506",
																		"typeString": "contract CerosRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CerosRouter_$2506",
																		"typeString": "contract CerosRouter"
																	}
																],
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1803,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "4610:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1795,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "4559:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1794,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "4552:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4552:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "4552:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4552:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "4552:65:10"
											},
											{
												"expression": {
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1806,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "4627:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1809,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4653:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4653:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1811,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "4665:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1807,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "4635:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "depositFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2963,
															"src": "4635:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) external returns (uint256)"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4635:37:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4627:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "4627:45:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4695:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4695:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1820,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "4715:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4707:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4707:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4707:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1822,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "4728:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4736:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1815,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "4687:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "EmitStatement",
												"src": "4682:56:10"
											},
											{
												"expression": {
													"id": 1826,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1792,
													"src": "4755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1827,
												"nodeType": "Return",
												"src": "4748:12:10"
											}
										]
									},
									"functionSelector": "bcdef0a4",
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1787,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1549,
												"src": "4480:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4480:12:10"
										},
										{
											"id": 1790,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1789,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4497:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4497:12:10"
										}
									],
									"name": "depositABNBcFrom",
									"nameLocation": "4402:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1786,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:10"
									},
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4427:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "4419:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4442:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "4434:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:31:10"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4531:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "4523:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:15:10"
									},
									"scope": 2506,
									"src": "4393:374:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2659
									],
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "4885:267:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4365526f757465722f44697361626c6564",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448",
																"typeString": "literal_string \"CeRouter/Disabled\""
															},
															"value": "CeRouter/Disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_26f6968d8fcced7af51d88d4f61805a69fbcfdb32aeca6f3890a7f4a5a235448",
																"typeString": "literal_string \"CeRouter/Disabled\""
															}
														],
														"id": 1839,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4895:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4895:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "4895:27:10"
											}
										]
									},
									"functionSelector": "7c0a75e5",
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1835,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1834,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4840:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4840:12:10"
										}
									],
									"name": "depositABNBc",
									"nameLocation": "4781:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1833,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4827:8:10"
									},
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4802:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4794:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:16:10"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4874:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4866:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4865:15:10"
									},
									"scope": 2506,
									"src": "4772:380:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2667
									],
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "5325:153:10",
										"statements": [
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "yields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "5335:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1858,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5366:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5366:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1860,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "5378:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1856,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "5344:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "claimYieldsFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2979,
															"src": "5344:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) external returns (uint256)"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5344:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5335:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "5335:53:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1865,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "5409:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1868,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5428:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5420:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5420:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5420:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1870,
															"name": "yields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "5441:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1864,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2587,
														"src": "5403:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5403:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "EmitStatement",
												"src": "5398:50:10"
											},
											{
												"expression": {
													"id": 1873,
													"name": "yields",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1853,
													"src": "5465:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1874,
												"nodeType": "Return",
												"src": "5458:13:10"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "5157:24:10",
										"text": " CLAIM"
									},
									"functionSelector": "1e83409a",
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1850,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "5279:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5279:12:10"
										}
									],
									"name": "claim",
									"nameLocation": "5224:5:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5266:8:10"
									},
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5238:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "5230:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5230:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5229:19:10"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "yields",
												"nameLocation": "5313:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "5305:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:16:10"
									},
									"scope": 2506,
									"src": "5215:263:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2672
									],
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "5574:440:10",
										"statements": [
											{
												"assignments": [
													1884
												],
												"declarations": [
													{
														"constant": false,
														"id": 1884,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "5592:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "5584:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5584:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1889,
												"initialValue": {
													"baseExpression": {
														"id": 1885,
														"name": "_profits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "5601:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1888,
													"indexExpression": {
														"expression": {
															"id": 1886,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5610:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5610:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5601:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5584:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1891,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "5639:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5648:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5639:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686173206e6f7420676f7420612070726f666974",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5651:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3",
																"typeString": "literal_string \"has not got a profit\""
															},
															"value": "has not got a profit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb7def3e4066095ef4c6139fb056636fb104935a8c9b2d6cf010340c6b77a0b3",
																"typeString": "literal_string \"has not got a profit\""
															}
														],
														"id": 1890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5631:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5631:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "5631:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1902,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5786:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CerosRouter_$2506",
																					"typeString": "contract CerosRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CerosRouter_$2506",
																					"typeString": "contract CerosRouter"
																				}
																			],
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5778:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1900,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5778:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5778:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1898,
																		"name": "_certToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "5757:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICertToken_$2771",
																			"typeString": "contract ICertToken"
																		}
																	},
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 788,
																	"src": "5757:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5757:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1905,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "5796:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5757:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420616d6f756e74",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5816:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330",
																"typeString": "literal_string \"insufficient amount\""
															},
															"value": "insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26a26f7baa2b44f672b3df8584e81af135f94736a14e7fc9b0227fd23814f330",
																"typeString": "literal_string \"insufficient amount\""
															}
														],
														"id": 1897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5736:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "5736:111:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1914,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "5889:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1915,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "5900:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1911,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5864:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1910,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "5857:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5857:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "5857:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5857:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "5857:50:10"
											},
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1918,
															"name": "_profits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "5917:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1921,
														"indexExpression": {
															"expression": {
																"id": 1919,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5926:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5926:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5917:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1922,
														"name": "profit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "5941:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5917:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "5917:30:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1926,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "5968:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1929,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5987:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5979:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5979:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5979:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1931,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "6000:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1925,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2587,
														"src": "5962:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5962:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "EmitStatement",
												"src": "5957:50:10"
											}
										]
									},
									"functionSelector": "c0ab44f6",
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1881,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1880,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "5561:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5561:12:10"
										}
									],
									"name": "claimProfit",
									"nameLocation": "5521:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5541:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "5533:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5533:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5532:19:10"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5574:0:10"
									},
									"scope": 2506,
									"src": "5512:502:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2682
									],
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "6356:387:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1951,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "6387:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1952,
																		"name": "_bnbStakingPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "6397:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																			"typeString": "contract IBNBStakingPool"
																		}
																	},
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getMinUnstake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2528,
																	"src": "6397:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6397:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6387:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e20756e7374616b6520616d6f756e74",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6442:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															},
															"value": "value must be greater than min unstake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															}
														],
														"id": 1950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6366:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6366:133:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "6366:133:10"
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "6509:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1962,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6541:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6541:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1966,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6561:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	],
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6553:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1964,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6553:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6553:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1968,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "6568:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1960,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "6522:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2999,
															"src": "6522:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) external returns (uint256)"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6522:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6509:66:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "6509:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1975,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "6617:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1976,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "6628:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1972,
															"name": "_bnbStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "6585:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unstakeCertsFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2518,
														"src": "6585:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6585:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "6585:54:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1980,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6665:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6665:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1982,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "6677:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1983,
															"name": "_wBnbAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "6688:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "6702:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1979,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "6654:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "EmitStatement",
												"src": "6649:60:10"
											},
											{
												"expression": {
													"id": 1987,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1948,
													"src": "6726:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1949,
												"id": 1988,
												"nodeType": "Return",
												"src": "6719:17:10"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "6095:106:10",
										"text": "@param recipient address to receive withdrawan BNB\n @param amount in BNB to withdraw from vault"
									},
									"functionSelector": "f3fef3a3",
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1944,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1943,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1549,
												"src": "6289:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6289:12:10"
										},
										{
											"id": 1946,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1945,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "6306:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6306:12:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "6215:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1942,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6276:8:10"
									},
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6232:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "6224:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6251:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "6243:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:35:10"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "6340:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "6332:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6332:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6331:20:10"
									},
									"scope": 2506,
									"src": "6206:537:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2711
									],
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "7000:187:10",
										"statements": [
											{
												"expression": {
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2003,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "7010:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2006,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7042:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7042:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2008,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "7054:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2009,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "7065:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2004,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "7023:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2999,
															"src": "7023:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) external returns (uint256)"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7023:49:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7010:62:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "7010:62:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7098:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7098:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2016,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "7110:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2019,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "7129:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7121:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7121:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7121:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "7142:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2013,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "7087:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "EmitStatement",
												"src": "7082:71:10"
											},
											{
												"expression": {
													"id": 2024,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2001,
													"src": "7170:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2002,
												"id": 2025,
												"nodeType": "Return",
												"src": "7163:17:10"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "6772:85:10",
										"text": "@param recipient address to receive withdrawan aBNBc\n @param amount in BNB"
									},
									"functionSelector": "03550d56",
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1998,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "6950:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6950:12:10"
										}
									],
									"name": "withdrawABNBc",
									"nameLocation": "6871:13:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1997,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6937:8:10"
									},
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6893:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "6885:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6885:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6912:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "6904:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6884:35:10"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "6984:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "6976:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6976:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6975:20:10"
									},
									"scope": 2506,
									"src": "6862:325:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2691
									],
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "7345:265:10",
										"statements": [
											{
												"expression": {
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2041,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "7355:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2044,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7387:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7387:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2048,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7407:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	],
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2046,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7399:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7399:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2050,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "7414:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2042,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "7368:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2999,
															"src": "7368:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) external returns (uint256)"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7355:66:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "7355:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2057,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "7463:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "7474:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2054,
															"name": "_bnbStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "7431:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unstakeCertsFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2518,
														"src": "7431:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "7431:54:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7532:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7532:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2064,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "7544:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2065,
															"name": "_wBnbAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "7555:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "7569:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2061,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "7521:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7521:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2068,
												"nodeType": "EmitStatement",
												"src": "7516:60:10"
											},
											{
												"expression": {
													"id": 2069,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2039,
													"src": "7593:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2070,
												"nodeType": "Return",
												"src": "7586:17:10"
											}
										]
									},
									"functionSelector": "db518db2",
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2035,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2034,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "7278:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7278:12:10"
										},
										{
											"id": 2037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2036,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1549,
												"src": "7295:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7295:12:10"
										}
									],
									"name": "withdrawFor",
									"nameLocation": "7201:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7265:8:10"
									},
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7221:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "7213:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7213:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7240:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "7232:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7212:35:10"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "7329:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "7321:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:20:10"
									},
									"scope": 2506,
									"src": "7192:418:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2702
									],
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "7822:501:10",
										"statements": [
											{
												"expression": {
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2086,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "7832:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2089,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7864:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7864:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2093,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7884:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CerosRouter_$2506",
																			"typeString": "contract CerosRouter"
																		}
																	],
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7876:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2091,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7876:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7876:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2095,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "7891:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2087,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "7845:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$3040",
																	"typeString": "contract IVault"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2999,
															"src": "7845:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) external returns (uint256)"
															}
														},
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7845:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7832:66:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2098,
												"nodeType": "ExpressionStatement",
												"src": "7832:66:10"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "7925:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "7908:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2101,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7908:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2102,
															"nodeType": "ArrayTypeName",
															"src": "7908:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7946:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7932:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2104,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7936:7:10",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2105,
															"nodeType": "ArrayTypeName",
															"src": "7936:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7932:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7908:40:10"
											},
											{
												"expression": {
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2110,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "7958:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2112,
														"indexExpression": {
															"hexValue": "30",
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7963:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7958:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2115,
																"name": "_certToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "7976:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICertToken_$2771",
																	"typeString": "contract ICertToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ICertToken_$2771",
																	"typeString": "contract ICertToken"
																}
															],
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7968:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7968:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7968:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "7958:29:10"
											},
											{
												"expression": {
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2119,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "7997:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2121,
														"indexExpression": {
															"hexValue": "31",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8002:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7997:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2122,
														"name": "_wBnbAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "8007:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7997:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2124,
												"nodeType": "ExpressionStatement",
												"src": "7997:22:10"
											},
											{
												"assignments": [
													2129
												],
												"declarations": [
													{
														"constant": false,
														"id": 2129,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8046:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "8029:24:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2127,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8029:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2128,
															"nodeType": "ArrayTypeName",
															"src": "8029:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2141,
												"initialValue": {
													"arguments": [
														{
															"id": 2132,
															"name": "realAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "8096:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2133,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "8120:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2134,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "8143:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 2135,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8161:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2136,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8184:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8184:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333030",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8202:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "8184:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2130,
															"name": "_dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "8056:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$2905",
																"typeString": "contract IDex"
															}
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2849,
														"src": "8056:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8056:159:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8029:186:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2143,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8241:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8241:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "8253:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2146,
															"name": "_wBnbAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "8264:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2147,
																"name": "amounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "8278:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2149,
															"indexExpression": {
																"hexValue": "31",
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8286:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8278:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2142,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "8230:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8230:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "EmitStatement",
												"src": "8225:64:10"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2152,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "8306:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2154,
													"indexExpression": {
														"hexValue": "31",
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8314:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8306:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2085,
												"id": 2155,
												"nodeType": "Return",
												"src": "8299:17:10"
											}
										]
									},
									"functionSelector": "ab43c3df",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2081,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "7780:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7780:12:10"
										}
									],
									"name": "withdrawWithSlippage",
									"nameLocation": "7657:20:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7771:8:10"
									},
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7695:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "7687:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7722:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "7714:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7714:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "outAmount",
												"nameLocation": "7746:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "7738:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7677:84:10"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "7810:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "7802:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7801:20:10"
									},
									"scope": 2506,
									"src": "7648:675:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2718
									],
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "8399:41:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2164,
														"name": "_profits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "8416:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2166,
													"indexExpression": {
														"id": 2165,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "8425:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8416:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2163,
												"id": 2167,
												"nodeType": "Return",
												"src": "8409:24:10"
											}
										]
									},
									"functionSelector": "ac78467c",
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProfitFor",
									"nameLocation": "8337:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8358:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "8350:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:17:10"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "8390:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8390:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8389:9:10"
									},
									"scope": 2506,
									"src": "8328:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2725
									],
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "8514:51:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "8550:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2176,
															"name": "_vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "8531:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$3040",
																"typeString": "contract IVault"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getYieldFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3013,
														"src": "8531:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8531:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2175,
												"id": 2180,
												"nodeType": "Return",
												"src": "8524:34:10"
											}
										]
									},
									"functionSelector": "223888c1",
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "8454:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8474:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "8466:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8465:17:10"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "8505:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8504:9:10"
									},
									"scope": 2506,
									"src": "8445:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "8667:69:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2191,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "8721:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2189,
															"name": "_bnbStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "8684:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPendingUnstakesOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2535,
														"src": "8684:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2188,
												"id": 2193,
												"nodeType": "Return",
												"src": "8677:52:10"
											}
										]
									},
									"functionSelector": "ab89b6af",
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingWithdrawalOf",
									"nameLocation": "8579:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8610:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "8602:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8602:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8601:17:10"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "8654:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:10"
									},
									"scope": 2506,
									"src": "8570:166:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "8796:237:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2208,
																	"name": "_vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "8874:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVault_$3040",
																		"typeString": "contract IVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVault_$3040",
																		"typeString": "contract IVault"
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8866:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8866:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8866:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8883:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2203,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "8842:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2202,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "8835:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8835:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "8835:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8835:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "8835:50:10"
											},
											{
												"expression": {
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2213,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "8895:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$3040",
															"typeString": "contract IVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2215,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "8911:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2214,
															"name": "IVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3040,
															"src": "8904:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVault_$3040_$",
																"typeString": "type(contract IVault)"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8904:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$3040",
															"typeString": "contract IVault"
														}
													},
													"src": "8895:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVault_$3040",
														"typeString": "contract IVault"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "8895:22:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2225,
																	"name": "_vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "8966:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVault_$3040",
																		"typeString": "contract IVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVault_$3040",
																		"typeString": "contract IVault"
																	}
																],
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8958:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8958:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8958:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8980:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2228,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8980:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2227,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8975:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8975:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8975:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2220,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "8934:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2219,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "8927:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8927:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "8927:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8927:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "8927:66:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2235,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "9020:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2234,
														"name": "ChangeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "9008:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9008:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "EmitStatement",
												"src": "9003:23:10"
											}
										]
									},
									"functionSelector": "60e232a9",
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2200,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2199,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "8786:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8786:9:10"
										}
									],
									"name": "changeVault",
									"nameLocation": "8750:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "8770:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "8762:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8762:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8761:15:10"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8796:0:10"
									},
									"scope": 2506,
									"src": "8741:292:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "9089:359:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2252,
																	"name": "_dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "9140:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																],
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9132:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2250,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9132:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9132:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9147:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2247,
																	"name": "_wBnbAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "9106:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2246,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9099:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9099:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9099:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9099:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "9099:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2263,
																	"name": "_dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "9198:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																],
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9190:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9190:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9190:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2258,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "9166:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2257,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9159:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9159:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9159:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9159:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2267,
												"nodeType": "ExpressionStatement",
												"src": "9159:48:10"
											},
											{
												"expression": {
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2268,
														"name": "_dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "9217:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDex_$2905",
															"typeString": "contract IDex"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2270,
																"name": "dex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "9229:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2269,
															"name": "IDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2905,
															"src": "9224:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDex_$2905_$",
																"typeString": "type(contract IDex)"
															}
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9224:9:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDex_$2905",
															"typeString": "contract IDex"
														}
													},
													"src": "9217:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDex_$2905",
														"typeString": "contract IDex"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "9217:16:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2280,
																	"name": "_dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "9313:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																],
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9305:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2278,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9305:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9305:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9325:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2283,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9325:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2282,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "9320:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9320:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "9320:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2275,
																	"name": "_wBnbAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "9279:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2274,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9272:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9272:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9272:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9272:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "9272:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2295,
																	"name": "_dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "9387:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDex_$2905",
																		"typeString": "contract IDex"
																	}
																],
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9379:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9379:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9379:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9399:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2298,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9399:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2297,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "9394:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9394:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "9394:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2290,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "9355:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2289,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9348:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9348:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9348:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9348:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "9348:64:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2305,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "9437:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2304,
														"name": "ChangeDex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "9427:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9427:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "EmitStatement",
												"src": "9422:19:10"
											}
										]
									},
									"functionSelector": "69d2da9c",
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2243,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "9079:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9079:9:10"
										}
									],
									"name": "changeDex",
									"nameLocation": "9047:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "9065:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "9057:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9056:13:10"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9089:0:10"
									},
									"scope": 2506,
									"src": "9038:410:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "9506:237:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2322,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "9584:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBinancePool_$2566",
																		"typeString": "contract IBinancePool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBinancePool_$2566",
																		"typeString": "contract IBinancePool"
																	}
																],
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9576:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2320,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9576:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9576:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9592:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2317,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "9552:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2316,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9545:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9545:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9545:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9545:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "9545:49:10"
											},
											{
												"expression": {
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2327,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "9604:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2566",
															"typeString": "contract IBinancePool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2329,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "9625:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2328,
															"name": "IBinancePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "9612:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBinancePool_$2566_$",
																"typeString": "type(contract IBinancePool)"
															}
														},
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9612:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBinancePool_$2566",
															"typeString": "contract IBinancePool"
														}
													},
													"src": "9604:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBinancePool_$2566",
														"typeString": "contract IBinancePool"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "9604:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2339,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "9679:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBinancePool_$2566",
																		"typeString": "contract IBinancePool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBinancePool_$2566",
																		"typeString": "contract IBinancePool"
																	}
																],
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9671:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2337,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9671:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9671:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9692:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2342,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9692:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2341,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "9687:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9687:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "9687:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2334,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "9647:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2333,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9640:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9640:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "9640:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2347,
												"nodeType": "ExpressionStatement",
												"src": "9640:65:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2349,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "9731:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2348,
														"name": "ChangePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2609,
														"src": "9720:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9720:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "EmitStatement",
												"src": "9715:21:10"
											}
										]
									},
									"functionSelector": "4339bc30",
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "9496:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9496:9:10"
										}
									],
									"name": "changePool",
									"nameLocation": "9462:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "9481:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "9473:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9473:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9472:14:10"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9506:0:10"
									},
									"scope": 2506,
									"src": "9453:290:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "9809:76:10",
										"statements": [
											{
												"expression": {
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2360,
														"name": "_provider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "9819:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2361,
														"name": "provider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "9831:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9819:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "9819:20:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2365,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "9869:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2364,
														"name": "ChangeProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "9854:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9854:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "EmitStatement",
												"src": "9849:29:10"
											}
										]
									},
									"functionSelector": "796f69aa",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2357,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "9799:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9799:9:10"
										}
									],
									"name": "changeProvider",
									"nameLocation": "9757:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "9780:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "9772:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9772:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9771:18:10"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9809:0:10"
									},
									"scope": 2506,
									"src": "9748:137:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "9953:308:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2378,
																"name": "_bnbStakingPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "9975:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																	"typeString": "contract IBNBStakingPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																	"typeString": "contract IBNBStakingPool"
																}
															],
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9967:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2376,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9967:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9967:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10003:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9995:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2380,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9995:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9995:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9967:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2396,
												"nodeType": "IfStatement",
												"src": "9963:115:10",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2391,
																		"name": "_bnbStakingPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "10058:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																			"typeString": "contract IBNBStakingPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																			"typeString": "contract IBNBStakingPool"
																		}
																	],
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10050:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2389,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10050:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10050:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10076:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2386,
																		"name": "_certToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "10026:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICertToken_$2771",
																			"typeString": "contract ICertToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ICertToken_$2771",
																			"typeString": "contract ICertToken"
																		}
																	],
																	"id": 2385,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "10019:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10019:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$831",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeApprove",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 969,
															"src": "10019:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10019:59:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2395,
													"nodeType": "ExpressionStatement",
													"src": "10019:59:10"
												}
											},
											{
												"expression": {
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2397,
														"name": "_bnbStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "10089:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
															"typeString": "contract IBNBStakingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2399,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10123:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2398,
															"name": "IBNBStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2536,
															"src": "10107:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBNBStakingPool_$2536_$",
																"typeString": "type(contract IBNBStakingPool)"
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10107:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
															"typeString": "contract IBNBStakingPool"
														}
													},
													"src": "10089:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
														"typeString": "contract IBNBStakingPool"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "10089:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2409,
																	"name": "_bnbStakingPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "10177:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																		"typeString": "contract IBNBStakingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																		"typeString": "contract IBNBStakingPool"
																	}
																],
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10169:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2407,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10169:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10169:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10200:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2412,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10200:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2411,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "10195:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10195:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "10195:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2404,
																	"name": "_certToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "10145:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICertToken_$2771",
																		"typeString": "contract ICertToken"
																	}
																],
																"id": 2403,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "10138:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$831_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10138:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "10138:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$831_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$831_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "10138:75:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2419,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "10249:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2418,
														"name": "ChangeBNBStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "10228:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10228:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2421,
												"nodeType": "EmitStatement",
												"src": "10223:31:10"
											}
										]
									},
									"functionSelector": "3af82c59",
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2374,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2373,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "9943:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9943:9:10"
										}
									],
									"name": "changeBNBStakingPool",
									"nameLocation": "9899:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "9928:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "9920:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9920:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9919:14:10"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9953:0:10"
									},
									"scope": 2506,
									"src": "9890:371:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "10320:33:10",
										"statements": [
											{
												"expression": {
													"id": 2428,
													"name": "_provider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1523,
													"src": "10337:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2427,
												"id": 2429,
												"nodeType": "Return",
												"src": "10330:16:10"
											}
										]
									},
									"functionSelector": "483d45bd",
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProvider",
									"nameLocation": "10275:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10286:2:10"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "10311:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10311:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10310:9:10"
									},
									"scope": 2506,
									"src": "10266:87:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "10411:41:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2438,
															"name": "_ceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "10436:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$831",
																"typeString": "contract IERC20"
															}
														],
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10428:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10428:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10428:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2435,
												"id": 2440,
												"nodeType": "Return",
												"src": "10421:24:10"
											}
										]
									},
									"functionSelector": "0c632bbe",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeToken",
									"nameLocation": "10367:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10377:2:10"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "10402:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10402:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10401:9:10"
									},
									"scope": 2506,
									"src": "10358:94:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "10514:36:10",
										"statements": [
											{
												"expression": {
													"id": 2447,
													"name": "_wBnbAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1514,
													"src": "10531:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2446,
												"id": 2448,
												"nodeType": "Return",
												"src": "10524:19:10"
											}
										]
									},
									"functionSelector": "665a21db",
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWbnbAddress",
									"nameLocation": "10466:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10480:2:10"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "10505:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10505:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10504:9:10"
									},
									"scope": 2506,
									"src": "10457:93:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "10610:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2457,
															"name": "_certToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "10635:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$2771",
																"typeString": "contract ICertToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ICertToken_$2771",
																"typeString": "contract ICertToken"
															}
														],
														"id": 2456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10627:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10627:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2454,
												"id": 2459,
												"nodeType": "Return",
												"src": "10620:26:10"
											}
										]
									},
									"functionSelector": "6eecfdaa",
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCertToken",
									"nameLocation": "10564:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10576:2:10"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "10601:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10601:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10600:9:10"
									},
									"scope": 2506,
									"src": "10555:98:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "10715:38:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2468,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "10740:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBinancePool_$2566",
																"typeString": "contract IBinancePool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBinancePool_$2566",
																"typeString": "contract IBinancePool"
															}
														],
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10732:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2466,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10732:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10732:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2465,
												"id": 2470,
												"nodeType": "Return",
												"src": "10725:21:10"
											}
										]
									},
									"functionSelector": "f586c6d9",
									"id": 2472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAddress",
									"nameLocation": "10667:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10681:2:10"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "10706:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10706:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10705:9:10"
									},
									"scope": 2506,
									"src": "10658:95:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "10825:48:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2479,
															"name": "_bnbStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "10850:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBNBStakingPool_$2536",
																"typeString": "contract IBNBStakingPool"
															}
														],
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10842:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10842:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10842:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2476,
												"id": 2481,
												"nodeType": "Return",
												"src": "10835:31:10"
											}
										]
									},
									"functionSelector": "97fd9be7",
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBNBStakingPoolAddress",
									"nameLocation": "10767:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10791:2:10"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "10816:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10816:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10815:9:10"
									},
									"scope": 2506,
									"src": "10758:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "10934:37:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2490,
															"name": "_dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "10959:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$2905",
																"typeString": "contract IDex"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IDex_$2905",
																"typeString": "contract IDex"
															}
														],
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10951:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2488,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10951:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10951:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2487,
												"id": 2492,
												"nodeType": "Return",
												"src": "10944:20:10"
											}
										]
									},
									"functionSelector": "854cf3cf",
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDexAddress",
									"nameLocation": "10887:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10900:2:10"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "10925:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10925:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10924:9:10"
									},
									"scope": 2506,
									"src": "10878:93:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "11034:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2501,
															"name": "_vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "11059:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$3040",
																"typeString": "contract IVault"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IVault_$3040",
																"typeString": "contract IVault"
															}
														],
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11051:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2499,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11051:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11051:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2498,
												"id": 2503,
												"nodeType": "Return",
												"src": "11044:22:10"
											}
										]
									},
									"functionSelector": "65cacaa4",
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultAddress",
									"nameLocation": "10985:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11000:2:10"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "11025:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11025:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11024:9:10"
									},
									"scope": 2506,
									"src": "10976:97:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2507,
							"src": "657:10418:10",
							"usedErrors": []
						}
					],
					"src": "41:11035:10"
				},
				"id": 10
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol",
					"exportedSymbols": {
						"IBNBStakingPool": [
							2536
						]
					},
					"id": 2537,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBNBStakingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2536,
							"linearizedBaseContracts": [
								2536
							],
							"name": "IBNBStakingPool",
							"nameLocation": "77:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ac76d450",
									"id": 2511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeCerts",
									"nameLocation": "108:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:11"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:0:11"
									},
									"scope": 2536,
									"src": "99:39:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 2518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "153:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "177:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "169:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "202:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "194:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:41:11"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:11"
									},
									"scope": 2536,
									"src": "144:75:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "56a3b5fa",
									"id": 2523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinStake",
									"nameLocation": "234:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:11"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "271:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:9:11"
									},
									"scope": 2536,
									"src": "225:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "034c4454",
									"id": 2528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinUnstake",
									"nameLocation": "295:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:11"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "334:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:11"
									},
									"scope": 2536,
									"src": "286:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46faa33c",
									"id": 2535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingUnstakesOf",
									"nameLocation": "358:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "379:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:11"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "419:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:11"
									},
									"scope": 2536,
									"src": "349:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2537,
							"src": "67:363:11",
							"usedErrors": []
						}
					],
					"src": "41:389:11"
				},
				"id": 11
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
					"exportedSymbols": {
						"IBinancePool": [
							2566
						]
					},
					"id": 2567,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBinancePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2566,
							"linearizedBaseContracts": [
								2566
							],
							"name": "IBinancePool",
							"nameLocation": "77:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ff0a42de",
									"id": 2541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAndClaimCerts",
									"nameLocation": "105:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:2:12"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:12"
									},
									"scope": 2566,
									"src": "96:47:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 2548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "158:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "182:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "174:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "201:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "193:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:35:12"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:12"
									},
									"scope": 2566,
									"src": "149:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9bbd278",
									"id": 2553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStake",
									"nameLocation": "233:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:12"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:12"
									},
									"scope": 2566,
									"src": "224:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2117d82",
									"id": 2558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRelayerFee",
									"nameLocation": "298:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:12"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "337:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:12"
									},
									"scope": 2566,
									"src": "289:57:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f9dac52",
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUnstakesOf",
									"nameLocation": "361:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "379:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:12"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "419:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:12"
									},
									"scope": 2566,
									"src": "352:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2567,
							"src": "67:363:12",
							"usedErrors": []
						}
					],
					"src": "41:389:12"
				},
				"id": 12
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
					"exportedSymbols": {
						"ICerosRouter": [
							2726
						]
					},
					"id": 2727,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICerosRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2726,
							"linearizedBaseContracts": [
								2726
							],
							"name": "ICerosRouter",
							"nameLocation": "76:12:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "95:25:13",
										"text": " Events"
									},
									"id": 2579,
									"name": "Deposit",
									"nameLocation": "132:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "165:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "149:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "198:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "182:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "221:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "213:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"indexed": false,
												"mutability": "mutable",
												"name": "profit",
												"nameLocation": "245:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "237:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:118:13"
									},
									"src": "126:132:13"
								},
								{
									"anonymous": false,
									"id": 2587,
									"name": "Claim",
									"nameLocation": "270:5:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "301:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "285:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "336:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "320:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "359:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "351:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:96:13"
									},
									"src": "264:108:13"
								},
								{
									"anonymous": false,
									"id": 2597,
									"name": "Withdrawal",
									"nameLocation": "384:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "420:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "404:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "451:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "435:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "486:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "470:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "501:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:127:13"
									},
									"src": "378:144:13"
								},
								{
									"anonymous": false,
									"id": 2601,
									"name": "ChangeVault",
									"nameLocation": "534:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "554:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "546:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:15:13"
									},
									"src": "528:33:13"
								},
								{
									"anonymous": false,
									"id": 2605,
									"name": "ChangeDex",
									"nameLocation": "573:9:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"indexed": false,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "591:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "583:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:13:13"
									},
									"src": "567:29:13"
								},
								{
									"anonymous": false,
									"id": 2609,
									"name": "ChangePool",
									"nameLocation": "608:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "627:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "619:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:14:13"
									},
									"src": "602:31:13"
								},
								{
									"anonymous": false,
									"id": 2613,
									"name": "ChangeBNBStakingPool",
									"nameLocation": "645:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "674:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "666:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:14:13"
									},
									"src": "639:41:13"
								},
								{
									"anonymous": false,
									"id": 2617,
									"name": "ChangeDao",
									"nameLocation": "692:9:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"indexed": false,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "710:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "702:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:13:13"
									},
									"src": "686:29:13"
								},
								{
									"anonymous": false,
									"id": 2621,
									"name": "ChangeCeToken",
									"nameLocation": "727:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "749:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "741:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:17:13"
									},
									"src": "721:37:13"
								},
								{
									"anonymous": false,
									"id": 2625,
									"name": "ChangeCeTokenJoin",
									"nameLocation": "770:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceTokenJoin",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "788:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:21:13"
									},
									"src": "764:45:13"
								},
								{
									"anonymous": false,
									"id": 2629,
									"name": "ChangeCertToken",
									"nameLocation": "821:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"indexed": false,
												"mutability": "mutable",
												"name": "certToken",
												"nameLocation": "845:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "837:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:19:13"
									},
									"src": "815:41:13"
								},
								{
									"anonymous": false,
									"id": 2633,
									"name": "ChangeCollateralToken",
									"nameLocation": "868:21:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "898:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "890:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:25:13"
									},
									"src": "862:53:13"
								},
								{
									"anonymous": false,
									"id": 2637,
									"name": "ChangeProvider",
									"nameLocation": "927:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "950:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "942:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:18:13"
									},
									"src": "921:39:13"
								},
								{
									"documentation": {
										"id": 2638,
										"nodeType": "StructuredDocumentation",
										"src": "998:26:13",
										"text": " Deposit"
									},
									"functionSelector": "d0e30db0",
									"id": 2643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1053:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:2:13"
									},
									"returnParameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1089:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:9:13"
									},
									"scope": 2726,
									"src": "1044:54:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcdef0a4",
									"id": 2652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBcFrom",
									"nameLocation": "1129:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1154:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "1146:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1169:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "1161:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:31:13"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "1203:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:9:13"
									},
									"scope": 2726,
									"src": "1120:92:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c0a75e5",
									"id": 2659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBc",
									"nameLocation": "1227:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "1240:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:16:13"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:9:13"
									},
									"scope": 2726,
									"src": "1218:65:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "1289:24:13",
										"text": " Claim"
									},
									"functionSelector": "1e83409a",
									"id": 2667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1350:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1364:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "1356:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:19:13"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "1393:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:9:13"
									},
									"scope": 2726,
									"src": "1341:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0ab44f6",
									"id": 2672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimProfit",
									"nameLocation": "1417:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1437:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "1429:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:19:13"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:13"
									},
									"scope": 2726,
									"src": "1408:49:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "1463:29:13",
										"text": " Withdrawal"
									},
									"functionSelector": "f3fef3a3",
									"id": 2682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1518:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1535:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "1527:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1554:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "1546:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:35:13"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "1588:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:9:13"
									},
									"scope": 2726,
									"src": "1509:88:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db518db2",
									"id": 2691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1623:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1643:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "1635:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "1654:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:35:13"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "1696:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:13"
									},
									"scope": 2726,
									"src": "1614:91:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ab43c3df",
									"id": 2702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawWithSlippage",
									"nameLocation": "1731:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1769:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "1761:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1796:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "1788:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "1820:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "1812:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:83:13"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "1853:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:9:13"
									},
									"scope": 2726,
									"src": "1722:140:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03550d56",
									"id": 2711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawABNBc",
									"nameLocation": "1890:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1912:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1904:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1931:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1923:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:35:13"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1965:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:9:13"
									},
									"scope": 2726,
									"src": "1881:93:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac78467c",
									"id": 2718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfitFor",
									"nameLocation": "1989:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2010:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "2002:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:17:13"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "2042:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:9:13"
									},
									"scope": 2726,
									"src": "1980:71:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 2725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "2065:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2085:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "2077:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:17:13"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "2116:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:9:13"
									},
									"scope": 2726,
									"src": "2056:69:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2727,
							"src": "66:2061:13",
							"usedErrors": []
						}
					],
					"src": "41:2086:13"
				},
				"id": 13
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							2771
						],
						"IERC20": [
							831
						]
					},
					"id": 2772,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2772,
							"sourceUnit": 832,
							"src": "66:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2731,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "219:6:14"
									},
									"id": 2732,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:14"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2730,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:14",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2771,
							"linearizedBaseContracts": [
								2771,
								831
							],
							"name": "ICertToken",
							"nameLocation": "205:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 2739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "247:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "264:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:14"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:14"
									},
									"scope": 2771,
									"src": "233:56:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "309:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "326:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:14"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:14"
									},
									"scope": 2771,
									"src": "295:56:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 2753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "387:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:14"
									},
									"returnParameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "422:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:14"
									},
									"scope": 2771,
									"src": "357:74:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 2758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:14"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "477:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:14"
									},
									"scope": 2771,
									"src": "437:46:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 2763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:14"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "529:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:14"
									},
									"scope": 2771,
									"src": "489:49:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 2770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "567:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:14"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "606:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:14"
									},
									"scope": 2771,
									"src": "544:71:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2772,
							"src": "195:422:14",
							"usedErrors": []
						}
					],
					"src": "41:577:14"
				},
				"id": 14
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
					"exportedSymbols": {
						"IDex": [
							2905
						]
					},
					"id": 2906,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2773,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDex",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2905,
							"linearizedBaseContracts": [
								2905
							],
							"name": "IDex",
							"nameLocation": "77:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "97:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:15"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "130:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:9:15"
									},
									"scope": 2905,
									"src": "88:51:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "154:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:15"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "184:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:9:15"
									},
									"scope": 2905,
									"src": "145:48:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "208:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "250:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "242:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "276:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "268:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "317:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "298:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "298:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2789,
													"nodeType": "ArrayTypeName",
													"src": "298:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "339:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "331:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "359:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "351:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:141:15"
									},
									"returnParameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "409:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "392:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2796,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "392:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2797,
													"nodeType": "ArrayTypeName",
													"src": "392:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:26:15"
									},
									"scope": 2905,
									"src": "199:219:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "433:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "475:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "467:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "502:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "494:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "542:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "523:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2805,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "523:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2806,
													"nodeType": "ArrayTypeName",
													"src": "523:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "564:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "556:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "584:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "576:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:141:15"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "634:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "617:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2813,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "617:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2814,
													"nodeType": "ArrayTypeName",
													"src": "617:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:26:15"
									},
									"scope": 2905,
									"src": "424:219:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "658:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "697:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "689:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "738:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "719:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2820,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "719:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2821,
													"nodeType": "ArrayTypeName",
													"src": "719:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "760:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "752:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "780:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "772:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:115:15"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "838:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "821:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2828,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "821:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2829,
													"nodeType": "ArrayTypeName",
													"src": "821:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:26:15"
									},
									"scope": 2905,
									"src": "649:198:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "862:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "901:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "893:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "927:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "919:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "968:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "949:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2837,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "949:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2838,
													"nodeType": "ArrayTypeName",
													"src": "949:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "990:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "982:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1010:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "1002:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:141:15"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1060:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "1043:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2845,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1043:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2846,
													"nodeType": "ArrayTypeName",
													"src": "1043:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:26:15"
									},
									"scope": 2905,
									"src": "853:216:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "1084:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1107:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1099:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1132:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1124:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1158:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1150:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:83:15"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1204:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1196:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:17:15"
									},
									"scope": 2905,
									"src": "1075:138:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1228:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1258:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1250:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1284:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1276:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1311:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1303:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:87:15"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1359:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1351:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:19:15"
									},
									"scope": 2905,
									"src": "1219:151:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "1385:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1414:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1406:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1441:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1433:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1468:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1460:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:88:15"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1516:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1508:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:18:15"
									},
									"scope": 2905,
									"src": "1376:150:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1541:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1563:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "1555:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1592:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "1573:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2885,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1573:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2886,
													"nodeType": "ArrayTypeName",
													"src": "1573:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:43:15"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1662:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "1645:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2889,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1645:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2890,
													"nodeType": "ArrayTypeName",
													"src": "1645:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:26:15"
									},
									"scope": 2905,
									"src": "1532:139:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "1686:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1707:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "1699:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1737:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "1718:23:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2896,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1718:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2897,
													"nodeType": "ArrayTypeName",
													"src": "1718:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:44:15"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1807:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "1790:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2900,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1790:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2901,
													"nodeType": "ArrayTypeName",
													"src": "1790:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:26:15"
									},
									"scope": 2905,
									"src": "1677:139:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2906,
							"src": "67:1751:15",
							"usedErrors": []
						}
					],
					"src": "41:1778:15"
				},
				"id": 15
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							3040
						]
					},
					"id": 3041,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2907,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3040,
							"linearizedBaseContracts": [
								3040
							],
							"name": "IVault",
							"nameLocation": "75:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2908,
										"nodeType": "StructuredDocumentation",
										"src": "88:25:16",
										"text": " Events"
									},
									"id": 2916,
									"name": "Deposited",
									"nameLocation": "124:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "159:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "143:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "190:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "174:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2914,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "217:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "209:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:95:16"
									},
									"src": "118:111:16"
								},
								{
									"anonymous": false,
									"id": 2924,
									"name": "Claimed",
									"nameLocation": "240:7:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "273:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "257:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "304:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "288:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "331:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "323:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:95:16"
									},
									"src": "234:109:16"
								},
								{
									"anonymous": false,
									"id": 2932,
									"name": "Withdrawn",
									"nameLocation": "354:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "389:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "373:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2928,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "420:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "404:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "447:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "439:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:95:16"
									},
									"src": "348:111:16"
								},
								{
									"anonymous": false,
									"id": 2936,
									"name": "RouterChanged",
									"nameLocation": "470:13:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"indexed": false,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "492:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "484:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:16:16"
									},
									"src": "464:36:16"
								},
								{
									"anonymous": false,
									"id": 2942,
									"name": "CeTokenChanged",
									"nameLocation": "511:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldToken",
												"nameLocation": "534:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "526:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2940,
												"indexed": false,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "552:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "544:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:36:16"
									},
									"src": "505:57:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2943,
										"nodeType": "StructuredDocumentation",
										"src": "567:26:16",
										"text": " Methods"
									},
									"id": 2947,
									"name": "RatioUpdated",
									"nameLocation": "604:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentRatio",
												"nameLocation": "625:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "617:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:22:16"
									},
									"src": "598:41:16"
								},
								{
									"functionSelector": "b6b55f25",
									"id": 2954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "653:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "669:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "661:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:16:16"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "695:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:16"
									},
									"scope": 3040,
									"src": "644:60:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f4f21e2",
									"id": 2963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFor",
									"nameLocation": "718:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "737:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "729:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "756:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "748:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:35:16"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "790:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:9:16"
									},
									"scope": 3040,
									"src": "709:90:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b36684ac",
									"id": 2970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYields",
									"nameLocation": "813:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "833:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "825:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:19:16"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "862:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:16"
									},
									"scope": 3040,
									"src": "804:67:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1101596c",
									"id": 2979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYieldsFor",
									"nameLocation": "885:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "900:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "923:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "915:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:34:16"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "960:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:9:16"
									},
									"scope": 3040,
									"src": "876:93:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 2988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "983:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1000:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "992:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1019:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "1011:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:35:16"
									},
									"returnParameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "1053:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:9:16"
									},
									"scope": 3040,
									"src": "974:88:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f1d9267",
									"id": 2999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1076:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1105:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1097:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1128:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1120:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1147:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:80:16"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "1186:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:16"
									},
									"scope": 3040,
									"src": "1067:128:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aba317a9",
									"id": 3006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrincipalOf",
									"nameLocation": "1209:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1232:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "1224:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:17:16"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "1264:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:9:16"
									},
									"scope": 3040,
									"src": "1200:73:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 3013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "1287:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1307:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "1299:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:17:16"
									},
									"returnParameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "1339:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:9:16"
									},
									"scope": 3040,
									"src": "1278:70:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fad83484",
									"id": 3018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAmountInVault",
									"nameLocation": "1362:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:16"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "1409:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:16"
									},
									"scope": 3040,
									"src": "1353:65:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c96f0e01",
									"id": 3025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCeTokenBalanceOf",
									"nameLocation": "1432:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1452:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:17:16"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1492:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:16"
									},
									"scope": 3040,
									"src": "1423:78:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d602c00",
									"id": 3032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositOf",
									"nameLocation": "1515:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1536:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "1528:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:17:16"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "1568:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:9:16"
									},
									"scope": 3040,
									"src": "1506:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4226626a",
									"id": 3039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimedOf",
									"nameLocation": "1591:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1612:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1604:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:17:16"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1644:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:16"
									},
									"scope": 3040,
									"src": "1582:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3041,
							"src": "65:1590:16",
							"usedErrors": []
						}
					],
					"src": "41:1614:16"
				},
				"id": 16
			}
		}
	}
}